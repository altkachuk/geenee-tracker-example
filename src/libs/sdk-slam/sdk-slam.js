!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self)["@geenee/sdk-slam"]=t()}(this,(function(){"use strict";var enterModule;enterModule="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0,enterModule&&enterModule(module);var __signature__="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var defineProperty=_defineProperty;const _default=defineProperty;var reactHotLoader,leaveModule;reactHotLoader="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0,reactHotLoader&&(reactHotLoader.register(_defineProperty,"_defineProperty","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js"),reactHotLoader.register(defineProperty,"defineProperty","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js"),reactHotLoader.register(_default,"default","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\@babel\\runtime\\helpers\\defineProperty.js")),leaveModule="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0,leaveModule&&leaveModule(module),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$1="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const getEmitter=function(e=null){const t=Object.create({all:[]});return{on:function(e,r){const n=t[e]||[];-1===n.indexOf(r)&&n.push(r),t[e]=n},off:function(e,r){const n=t[e]||[];if("function"==typeof r){const e=n.indexOf(r);e>-1&&n.splice(e,1)}else n.length=0;"all"!==e&&0===n.length&&delete t[e]},emit:function(r,...n){if((t[r]||[]).map((function(t){return t.apply(e,n)})),t.all.length>0){const i=[r,...n];t.all.map((function(t){return t.apply(e,i)}))}},getLength:function(e){return(t[e]||[]).length}}},_default$1=getEmitter;!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(getEmitter,"getEmitter","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\emitter\\getEmitter.js"),e.register(_default$1,"default","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\emitter\\getEmitter.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$2="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),void 0===Math.sign&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");const t=Object(e);for(let e=1;e<arguments.length;e++){const r=arguments[e];if(null!=r)for(const e in r)Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e])}return t});const REVISION="118",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,FrontFaceDirectionCW=0,FrontFaceDirectionCCW=1,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,RGBEFormat=RGBAFormat,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBIntegerFormat=1032,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,SRGB8_ALPHA8_ASTC_4x4_Format=37840,SRGB8_ALPHA8_ASTC_5x4_Format=37841,SRGB8_ALPHA8_ASTC_5x5_Format=37842,SRGB8_ALPHA8_ASTC_6x5_Format=37843,SRGB8_ALPHA8_ASTC_6x6_Format=37844,SRGB8_ALPHA8_ASTC_8x5_Format=37845,SRGB8_ALPHA8_ASTC_8x6_Format=37846,SRGB8_ALPHA8_ASTC_8x8_Format=37847,SRGB8_ALPHA8_ASTC_10x5_Format=37848,SRGB8_ALPHA8_ASTC_10x6_Format=37849,SRGB8_ALPHA8_ASTC_10x8_Format=37850,SRGB8_ALPHA8_ASTC_10x10_Format=37851,SRGB8_ALPHA8_ASTC_12x10_Format=37852,SRGB8_ALPHA8_ASTC_12x12_Format=37853,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,NormalAnimationBlendMode=2500,AdditiveAnimationBlendMode=2501,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,LogLuvEncoding=3003,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042;function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)},removeEventListener:function(e,t){if(void 0===this._listeners)return;const r=this._listeners[e];if(void 0!==r){const e=r.indexOf(t);-1!==e&&r.splice(e,1)}},dispatchEvent:function(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const r=t.slice(0);for(let t=0,n=r.length;t<n;t++)r[t].call(this,e)}}});const _lut=[];for(let e=0;e<256;e++)_lut[e]=(e<16?"0":"")+e.toString(16);const MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(_lut[255&e]+_lut[e>>8&255]+_lut[e>>16&255]+_lut[e>>24&255]+"-"+_lut[255&t]+_lut[t>>8&255]+"-"+_lut[t>>16&15|64]+_lut[t>>24&255]+"-"+_lut[63&r|128]+_lut[r>>8&255]+"-"+_lut[r>>16&255]+_lut[r>>24&255]+_lut[255&n]+_lut[n>>8&255]+_lut[n>>16&255]+_lut[n>>24&255]).toUpperCase()},clamp:function(e,t,r){return Math.max(t,Math.min(r,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},lerp:function(e,t,r){return(1-r)*e+r*t},smoothstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:e>=r?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*MathUtils.DEG2RAD},radToDeg:function(e){return e*MathUtils.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,r,n,i){const o=Math.cos,a=Math.sin,s=o(r/2),l=a(r/2),c=o((t+n)/2),u=a((t+n)/2),d=o((t-n)/2),h=a((t-n)/2),p=o((n-t)/2),m=a((n-t)/2);switch(i){case"XYX":e.set(s*u,l*d,l*h,s*c);break;case"YZY":e.set(l*h,s*u,l*d,s*c);break;case"ZXZ":e.set(l*d,l*h,s*u,s*c);break;case"XZX":e.set(s*u,l*m,l*p,s*c);break;case"YXY":e.set(l*p,s*u,l*m,s*c);break;case"ZYZ":e.set(l*m,l*p,s*u,s*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}};function Vector2(e=0,t=0){this.x=e,this.y=t}function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}let _canvas;Object.defineProperties(Vector2.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(Vector2.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){const t=this.x,r=this.y,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6],this.y=n[1]*t+n[4]*r+n[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){return Math.atan2(-this.y,-this.x)+Math.PI},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){const r=Math.cos(t),n=Math.sin(t),i=this.x-e.x,o=this.y-e.y;return this.x=i*r-o*n+e.x,this.y=i*n+o*r+e.y,this},random:function(){return this.x=Math.random(),this.y=Math.random(),this}}),Object.assign(Matrix3.prototype,{isMatrix3:!0,set:function(e,t,r,n,i,o,a,s,l){const c=this.elements;return c[0]=e,c[1]=n,c[2]=a,c[3]=t,c[4]=i,c[5]=s,c[6]=r,c[7]=o,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this},extractBasis:function(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this},setFromMatrix4:function(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const r=e.elements,n=t.elements,i=this.elements,o=r[0],a=r[3],s=r[6],l=r[1],c=r[4],u=r[7],d=r[2],h=r[5],p=r[8],m=n[0],f=n[3],g=n[6],_=n[1],v=n[4],y=n[7],b=n[2],x=n[5],S=n[8];return i[0]=o*m+a*_+s*b,i[3]=o*f+a*v+s*x,i[6]=o*g+a*y+s*S,i[1]=l*m+c*_+u*b,i[4]=l*f+c*v+u*x,i[7]=l*g+c*y+u*S,i[2]=d*m+h*_+p*b,i[5]=d*f+h*v+p*x,i[8]=d*g+h*y+p*S,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],o=e[4],a=e[5],s=e[6],l=e[7],c=e[8];return t*o*c-t*a*l-r*i*c+r*a*s+n*i*l-n*o*s},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const r=e.elements,n=this.elements,i=r[0],o=r[1],a=r[2],s=r[3],l=r[4],c=r[5],u=r[6],d=r[7],h=r[8],p=h*l-c*d,m=c*u-h*s,f=d*s-l*u,g=i*p+o*m+a*f;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return n[0]=p*_,n[1]=(a*d-h*o)*_,n[2]=(c*o-a*l)*_,n[3]=m*_,n[4]=(h*i-a*u)*_,n[5]=(a*s-c*i)*_,n[6]=f*_,n[7]=(o*u-d*i)*_,n[8]=(l*i-o*s)*_,this},transpose:function(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,r,n,i,o,a){const s=Math.cos(i),l=Math.sin(i);this.set(r*s,r*l,-r*(s*o+l*a)+o+e,-n*l,n*s,-n*(-l*o+s*a)+a+t,0,0,1)},scale:function(e,t){const r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this},rotate:function(e){const t=Math.cos(e),r=Math.sin(e),n=this.elements,i=n[0],o=n[3],a=n[6],s=n[1],l=n[4],c=n[7];return n[0]=t*i+r*s,n[3]=t*o+r*l,n[6]=t*a+r*c,n[1]=-r*i+t*s,n[4]=-r*o+t*l,n[7]=-r*a+t*c,this},translate:function(e,t){const r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this},equals:function(e){const t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}});const ImageUtils={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===_canvas&&(_canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),_canvas.width=e.width,_canvas.height=e.height;const r=_canvas.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=_canvas}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let textureId=0;function Texture(e,t,r,n,i,o,a,s,l,c){Object.defineProperty(this,"id",{value:textureId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.image=void 0!==e?e:Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:ClampToEdgeWrapping,this.wrapT=void 0!==n?n:ClampToEdgeWrapping,this.magFilter=void 0!==i?i:LinearFilter,this.minFilter=void 0!==o?o:LinearMipmapLinearFilter,this.anisotropy=void 0!==l?l:1,this.format=void 0!==a?a:RGBAFormat,this.internalFormat=null,this.type=void 0!==s?s:UnsignedByteType,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==c?c:LinearEncoding,this.version=0,this.onUpdate=null}function Vector4(e=0,t=0,r=0,n=1){this.x=e,this.y=t,this.z=r,this.w=n}function WebGLRenderTarget(e,t,r){this.width=e,this.height=t,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t),r=r||{},this.texture=new Texture(void 0,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:LinearFilter,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null}function WebGLMultisampleRenderTarget(e,t,r){WebGLRenderTarget.call(this,e,t,r),this.samples=4}function Quaternion(e=0,t=0,r=0,n=1){this._x=e,this._y=t,this._z=r,this._w=n}Texture.DEFAULT_IMAGE=void 0,Texture.DEFAULT_MAPPING=UVMapping,Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=MathUtils.generateUUID()),!t&&void 0===e.images[n.uuid]){let t;if(Array.isArray(n)){t=[];for(let e=0,r=n.length;e<r;e++)t.push(ImageUtils.getDataURL(n[e]))}else t=ImageUtils.getDataURL(n);e.images[n.uuid]={uuid:n.uuid,url:t}}r.image=n.uuid}return t||(e.textures[this.uuid]=r),r},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==UVMapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.defineProperties(Vector4.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}}),Object.assign(Vector4.prototype,{isVector4:!0,set:function(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){const t=this.x,r=this.y,n=this.z,i=this.w,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*n+o[12]*i,this.y=o[1]*t+o[5]*r+o[9]*n+o[13]*i,this.z=o[2]*t+o[6]*r+o[10]*n+o[14]*i,this.w=o[3]*t+o[7]*r+o[11]*n+o[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){let t,r,n,i;const o=e.elements,a=o[0],s=o[4],l=o[8],c=o[1],u=o[5],d=o[9],h=o[2],p=o[6],m=o[10];if(Math.abs(s-c)<.01&&Math.abs(l-h)<.01&&Math.abs(d-p)<.01){if(Math.abs(s+c)<.1&&Math.abs(l+h)<.1&&Math.abs(d+p)<.1&&Math.abs(a+u+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const e=(a+1)/2,o=(u+1)/2,f=(m+1)/2,g=(s+c)/4,_=(l+h)/4,v=(d+p)/4;return e>o&&e>f?e<.01?(r=0,n=.707106781,i=.707106781):(r=Math.sqrt(e),n=g/r,i=_/r):o>f?o<.01?(r=.707106781,n=0,i=.707106781):(n=Math.sqrt(o),r=g/n,i=v/n):f<.01?(r=.707106781,n=.707106781,i=0):(i=Math.sqrt(f),r=_/i,n=v/i),this.set(r,n,i,t),this}let f=Math.sqrt((p-d)*(p-d)+(l-h)*(l-h)+(c-s)*(c-s));return Math.abs(f)<.001&&(f=1),this.x=(p-d)/f,this.y=(l-h)/f,this.z=(c-s)/f,this.w=Math.acos((a+u+m-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this},clampLength:function(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}),WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:!0,copy:function(e){return WebGLRenderTarget.prototype.copy.call(this,e),this.samples=e.samples,this}}),Object.assign(Quaternion,{slerp:function(e,t,r,n){return r.copy(e).slerp(t,n)},slerpFlat:function(e,t,r,n,i,o,a){let s=r[n+0],l=r[n+1],c=r[n+2],u=r[n+3];const d=i[o+0],h=i[o+1],p=i[o+2],m=i[o+3];if(u!==m||s!==d||l!==h||c!==p){let e=1-a,t=s*d+l*h+c*p+u*m,r=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const i=Math.sqrt(n),o=Math.atan2(i,t*r);e=Math.sin(e*o)/i,a=Math.sin(a*o)/i}const i=a*r;if(s=s*e+d*i,l=l*e+h*i,c=c*e+p*i,u=u*e+m*i,e===1-a){const e=1/Math.sqrt(s*s+l*l+c*c+u*u);s*=e,l*=e,c*=e,u*=e}}e[t]=s,e[t+1]=l,e[t+2]=c,e[t+3]=u},multiplyQuaternionsFlat:function(e,t,r,n,i,o){const a=r[n],s=r[n+1],l=r[n+2],c=r[n+3],u=i[o],d=i[o+1],h=i[o+2],p=i[o+3];return e[t]=a*p+c*u+s*h-l*d,e[t+1]=s*p+c*d+l*u-a*h,e[t+2]=l*p+c*h+a*d-s*u,e[t+3]=c*p-a*u-s*d-l*h,e}}),Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}}),Object.assign(Quaternion.prototype,{isQuaternion:!0,set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const r=e._x,n=e._y,i=e._z,o=e.order,a=Math.cos,s=Math.sin,l=a(r/2),c=a(n/2),u=a(i/2),d=s(r/2),h=s(n/2),p=s(i/2);switch(o){case"XYZ":this._x=d*c*u+l*h*p,this._y=l*h*u-d*c*p,this._z=l*c*p+d*h*u,this._w=l*c*u-d*h*p;break;case"YXZ":this._x=d*c*u+l*h*p,this._y=l*h*u-d*c*p,this._z=l*c*p-d*h*u,this._w=l*c*u+d*h*p;break;case"ZXY":this._x=d*c*u-l*h*p,this._y=l*h*u+d*c*p,this._z=l*c*p+d*h*u,this._w=l*c*u-d*h*p;break;case"ZYX":this._x=d*c*u-l*h*p,this._y=l*h*u+d*c*p,this._z=l*c*p-d*h*u,this._w=l*c*u+d*h*p;break;case"YZX":this._x=d*c*u+l*h*p,this._y=l*h*u+d*c*p,this._z=l*c*p-d*h*u,this._w=l*c*u-d*h*p;break;case"XZY":this._x=d*c*u-l*h*p,this._y=l*h*u-d*c*p,this._z=l*c*p+d*h*u,this._w=l*c*u+d*h*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==t&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){const r=t/2,n=Math.sin(r);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(r),this._onChangeCallback(),this},setFromRotationMatrix:function(e){const t=e.elements,r=t[0],n=t[4],i=t[8],o=t[1],a=t[5],s=t[9],l=t[2],c=t[6],u=t[10],d=r+a+u;if(d>0){const e=.5/Math.sqrt(d+1);this._w=.25/e,this._x=(c-s)*e,this._y=(i-l)*e,this._z=(o-n)*e}else if(r>a&&r>u){const e=2*Math.sqrt(1+r-a-u);this._w=(c-s)/e,this._x=.25*e,this._y=(n+o)/e,this._z=(i+l)/e}else if(a>u){const e=2*Math.sqrt(1+a-r-u);this._w=(i-l)/e,this._x=(n+o)/e,this._y=.25*e,this._z=(s+c)/e}else{const e=2*Math.sqrt(1+u-r-a);this._w=(o-n)/e,this._x=(i+l)/e,this._y=(s+c)/e,this._z=.25*e}return this._onChangeCallback(),this},setFromUnitVectors:function(e,t){let r=e.dot(t)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,t){const r=this.angleTo(e);if(0===r)return this;const n=Math.min(1,t/r);return this.slerp(e,n),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){const r=e._x,n=e._y,i=e._z,o=e._w,a=t._x,s=t._y,l=t._z,c=t._w;return this._x=r*c+o*a+n*l-i*s,this._y=n*c+o*s+i*a-r*l,this._z=i*c+o*l+r*s-n*a,this._w=o*c-r*a-n*s-i*l,this._onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);const r=this._x,n=this._y,i=this._z,o=this._w;let a=o*e._w+r*e._x+n*e._y+i*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=r,this._y=n,this._z=i,this;const s=1-a*a;if(s<=Number.EPSILON){const e=1-t;return this._w=e*o+t*this._w,this._x=e*r+t*this._x,this._y=e*n+t*this._y,this._z=e*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(s),c=Math.atan2(l,a),u=Math.sin((1-t)*c)/l,d=Math.sin(t*c)/l;return this._w=o*u+this._w*d,this._x=r*u+this._x*d,this._y=n*u+this._y*d,this._z=i*u+this._z*d,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});const _vector=new Vector3,_quaternion=new Quaternion;function Vector3(e=0,t=0,r=0){this.x=e,this.y=t,this.z=r}Object.assign(Vector3.prototype,{isVector3:!0,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(_quaternion.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(_quaternion.setFromAxisAngle(e,t))},applyMatrix3:function(e){const t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*n,this.y=i[1]*t+i[4]*r+i[7]*n,this.z=i[2]*t+i[5]*r+i[8]*n,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(e){const t=this.x,r=this.y,n=this.z,i=e.elements,o=1/(i[3]*t+i[7]*r+i[11]*n+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*n+i[12])*o,this.y=(i[1]*t+i[5]*r+i[9]*n+i[13])*o,this.z=(i[2]*t+i[6]*r+i[10]*n+i[14])*o,this},applyQuaternion:function(e){const t=this.x,r=this.y,n=this.z,i=e.x,o=e.y,a=e.z,s=e.w,l=s*t+o*n-a*r,c=s*r+a*t-i*n,u=s*n+i*r-o*t,d=-i*t-o*r-a*n;return this.x=l*s+d*-i+c*-a-u*-o,this.y=c*s+d*-o+u*-i-l*-a,this.z=u*s+d*-a+l*-o-c*-i,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(e){const t=this.x,r=this.y,n=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*n,this.y=i[1]*t+i[5]*r+i[9]*n,this.z=i[2]*t+i[6]*r+i[10]*n,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this},cross:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){const r=e.x,n=e.y,i=e.z,o=t.x,a=t.y,s=t.z;return this.x=n*s-i*a,this.y=i*o-r*s,this.z=r*a-n*o,this},projectOnVector:function(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)},projectOnPlane:function(e){return _vector.copy(this).projectOnVector(e),this.sub(_vector)},reflect:function(e){return this.sub(_vector.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(MathUtils.clamp(r,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,r=this.y-e.y,n=this.z-e.z;return t*t+r*r+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,r){const n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=n,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,4*t)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,3*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});const _v1=new Vector3,_m1=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3;function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Matrix4.prototype,{isMatrix4:!0,set:function(e,t,r,n,i,o,a,s,l,c,u,d,h,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=r,g[12]=n,g[1]=i,g[5]=o,g[9]=a,g[13]=s,g[2]=l,g[6]=c,g[10]=u,g[14]=d,g[3]=h,g[7]=p,g[11]=m,g[15]=f,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Matrix4).fromArray(this.elements)},copy:function(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this},copyPosition:function(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractBasis:function(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this},extractRotation:function(e){const t=this.elements,r=e.elements,n=1/_v1.setFromMatrixColumn(e,0).length(),i=1/_v1.setFromMatrixColumn(e,1).length(),o=1/_v1.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*o,t[9]=r[9]*o,t[10]=r[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,r=e.x,n=e.y,i=e.z,o=Math.cos(r),a=Math.sin(r),s=Math.cos(n),l=Math.sin(n),c=Math.cos(i),u=Math.sin(i);if("XYZ"===e.order){const e=o*c,r=o*u,n=a*c,i=a*u;t[0]=s*c,t[4]=-s*u,t[8]=l,t[1]=r+n*l,t[5]=e-i*l,t[9]=-a*s,t[2]=i-e*l,t[6]=n+r*l,t[10]=o*s}else if("YXZ"===e.order){const e=s*c,r=s*u,n=l*c,i=l*u;t[0]=e+i*a,t[4]=n*a-r,t[8]=o*l,t[1]=o*u,t[5]=o*c,t[9]=-a,t[2]=r*a-n,t[6]=i+e*a,t[10]=o*s}else if("ZXY"===e.order){const e=s*c,r=s*u,n=l*c,i=l*u;t[0]=e-i*a,t[4]=-o*u,t[8]=n+r*a,t[1]=r+n*a,t[5]=o*c,t[9]=i-e*a,t[2]=-o*l,t[6]=a,t[10]=o*s}else if("ZYX"===e.order){const e=o*c,r=o*u,n=a*c,i=a*u;t[0]=s*c,t[4]=n*l-r,t[8]=e*l+i,t[1]=s*u,t[5]=i*l+e,t[9]=r*l-n,t[2]=-l,t[6]=a*s,t[10]=o*s}else if("YZX"===e.order){const e=o*s,r=o*l,n=a*s,i=a*l;t[0]=s*c,t[4]=i-e*u,t[8]=n*u+r,t[1]=u,t[5]=o*c,t[9]=-a*c,t[2]=-l*c,t[6]=r*u+n,t[10]=e-i*u}else if("XZY"===e.order){const e=o*s,r=o*l,n=a*s,i=a*l;t[0]=s*c,t[4]=-u,t[8]=l*c,t[1]=e*u+i,t[5]=o*c,t[9]=r*u-n,t[2]=n*u-r,t[6]=a*c,t[10]=i*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){return this.compose(_zero,e,_one)},lookAt:function(e,t,r){const n=this.elements;return _z.subVectors(e,t),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(r,_z),0===_x.lengthSq()&&(1===Math.abs(r.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(r,_z)),_x.normalize(),_y.crossVectors(_z,_x),n[0]=_x.x,n[4]=_y.x,n[8]=_z.x,n[1]=_x.y,n[5]=_y.y,n[9]=_z.y,n[2]=_x.z,n[6]=_y.z,n[10]=_z.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const r=e.elements,n=t.elements,i=this.elements,o=r[0],a=r[4],s=r[8],l=r[12],c=r[1],u=r[5],d=r[9],h=r[13],p=r[2],m=r[6],f=r[10],g=r[14],_=r[3],v=r[7],y=r[11],b=r[15],x=n[0],S=n[4],M=n[8],D=n[12],w=n[1],T=n[5],G=n[9],A=n[13],L=n[2],E=n[6],C=n[10],R=n[14],P=n[3],B=n[7],k=n[11],W=n[15];return i[0]=o*x+a*w+s*L+l*P,i[4]=o*S+a*T+s*E+l*B,i[8]=o*M+a*G+s*C+l*k,i[12]=o*D+a*A+s*R+l*W,i[1]=c*x+u*w+d*L+h*P,i[5]=c*S+u*T+d*E+h*B,i[9]=c*M+u*G+d*C+h*k,i[13]=c*D+u*A+d*R+h*W,i[2]=p*x+m*w+f*L+g*P,i[6]=p*S+m*T+f*E+g*B,i[10]=p*M+m*G+f*C+g*k,i[14]=p*D+m*A+f*R+g*W,i[3]=_*x+v*w+y*L+b*P,i[7]=_*S+v*T+y*E+b*B,i[11]=_*M+v*G+y*C+b*k,i[15]=_*D+v*A+y*R+b*W,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function(){const e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],o=e[1],a=e[5],s=e[9],l=e[13],c=e[2],u=e[6],d=e[10],h=e[14];return e[3]*(+i*s*u-n*l*u-i*a*d+r*l*d+n*a*h-r*s*h)+e[7]*(+t*s*h-t*l*d+i*o*d-n*o*h+n*l*c-i*s*c)+e[11]*(+t*l*u-t*a*h-i*o*u+r*o*h+i*a*c-r*l*c)+e[15]*(-n*a*c-t*s*u+t*a*d+n*o*u-r*o*d+r*s*c)},transpose:function(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e,t,r){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this},getInverse:function(e,t){void 0!==t&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const r=this.elements,n=e.elements,i=n[0],o=n[1],a=n[2],s=n[3],l=n[4],c=n[5],u=n[6],d=n[7],h=n[8],p=n[9],m=n[10],f=n[11],g=n[12],_=n[13],v=n[14],y=n[15],b=p*v*d-_*m*d+_*u*f-c*v*f-p*u*y+c*m*y,x=g*m*d-h*v*d-g*u*f+l*v*f+h*u*y-l*m*y,S=h*_*d-g*p*d+g*c*f-l*_*f-h*c*y+l*p*y,M=g*p*u-h*_*u-g*c*m+l*_*m+h*c*v-l*p*v,D=i*b+o*x+a*S+s*M;if(0===D)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/D;return r[0]=b*w,r[1]=(_*m*s-p*v*s-_*a*f+o*v*f+p*a*y-o*m*y)*w,r[2]=(c*v*s-_*u*s+_*a*d-o*v*d-c*a*y+o*u*y)*w,r[3]=(p*u*s-c*m*s-p*a*d+o*m*d+c*a*f-o*u*f)*w,r[4]=x*w,r[5]=(h*v*s-g*m*s+g*a*f-i*v*f-h*a*y+i*m*y)*w,r[6]=(g*u*s-l*v*s-g*a*d+i*v*d+l*a*y-i*u*y)*w,r[7]=(l*m*s-h*u*s+h*a*d-i*m*d-l*a*f+i*u*f)*w,r[8]=S*w,r[9]=(g*p*s-h*_*s-g*o*f+i*_*f+h*o*y-i*p*y)*w,r[10]=(l*_*s-g*c*s+g*o*d-i*_*d-l*o*y+i*c*y)*w,r[11]=(h*c*s-l*p*s-h*o*d+i*p*d+l*o*f-i*c*f)*w,r[12]=M*w,r[13]=(h*_*a-g*p*a+g*o*m-i*_*m-h*o*v+i*p*v)*w,r[14]=(g*c*a-l*_*a-g*o*u+i*_*u+l*o*v-i*c*v)*w,r[15]=(l*p*a-h*c*a+h*o*u-i*p*u-l*o*m+i*c*m)*w,this},scale:function(e){const t=this.elements,r=e.x,n=e.y,i=e.z;return t[0]*=r,t[4]*=n,t[8]*=i,t[1]*=r,t[5]*=n,t[9]*=i,t[2]*=r,t[6]*=n,t[10]*=i,t[3]*=r,t[7]*=n,t[11]*=i,this},getMaxScaleOnAxis:function(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,n))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){const t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){const r=Math.cos(t),n=Math.sin(t),i=1-r,o=e.x,a=e.y,s=e.z,l=i*o,c=i*a;return this.set(l*o+r,l*a-n*s,l*s+n*a,0,l*a+n*s,c*a+r,c*s-n*o,0,l*s-n*a,c*s+n*o,i*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeShear:function(e,t,r){return this.set(1,t,r,0,e,1,r,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,r){const n=this.elements,i=t._x,o=t._y,a=t._z,s=t._w,l=i+i,c=o+o,u=a+a,d=i*l,h=i*c,p=i*u,m=o*c,f=o*u,g=a*u,_=s*l,v=s*c,y=s*u,b=r.x,x=r.y,S=r.z;return n[0]=(1-(m+g))*b,n[1]=(h+y)*b,n[2]=(p-v)*b,n[3]=0,n[4]=(h-y)*x,n[5]=(1-(d+g))*x,n[6]=(f+_)*x,n[7]=0,n[8]=(p+v)*S,n[9]=(f-_)*S,n[10]=(1-(d+m))*S,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this},decompose:function(e,t,r){const n=this.elements;let i=_v1.set(n[0],n[1],n[2]).length(),o=_v1.set(n[4],n[5],n[6]).length(),a=_v1.set(n[8],n[9],n[10]).length();this.determinant()<0&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],_m1.copy(this);const s=1/i,l=1/o,c=1/a;return _m1.elements[0]*=s,_m1.elements[1]*=s,_m1.elements[2]*=s,_m1.elements[4]*=l,_m1.elements[5]*=l,_m1.elements[6]*=l,_m1.elements[8]*=c,_m1.elements[9]*=c,_m1.elements[10]*=c,t.setFromRotationMatrix(_m1),r.x=i,r.y=o,r.z=a,this},makePerspective:function(e,t,r,n,i,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,s=2*i/(t-e),l=2*i/(r-n),c=(t+e)/(t-e),u=(r+n)/(r-n),d=-(o+i)/(o-i),h=-2*o*i/(o-i);return a[0]=s,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=h,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makeOrthographic:function(e,t,r,n,i,o){const a=this.elements,s=1/(t-e),l=1/(r-n),c=1/(o-i),u=(t+e)*s,d=(r+n)*l,h=(o+i)*c;return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-h,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(e){const t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0},fromArray:function(e,t){void 0===t&&(t=0);for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}});const _matrix=new Matrix4,_quaternion$1=new Quaternion;function Euler(e=0,t=0,r=0,n=Euler.DefaultOrder){this._x=e,this._y=t,this._z=r,this._order=n}function Layers(){this.mask=1}Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Euler.DefaultOrder="XYZ",Object.defineProperties(Euler.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}}),Object.assign(Euler.prototype,{isEuler:!0,set:function(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._order=n||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,r){const n=MathUtils.clamp,i=e.elements,o=i[0],a=i[4],s=i[8],l=i[1],c=i[5],u=i[9],d=i[2],h=i[6],p=i[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(h,c),this._z=0);break;case"YXZ":this._x=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(s,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,o),this._z=0);break;case"ZXY":this._x=Math.asin(n(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-d,p),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,o));break;case"ZYX":this._y=Math.asin(-n(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(h,p),this._z=Math.atan2(l,o)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(n(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-d,o)):(this._x=0,this._y=Math.atan2(s,p));break;case"XZY":this._z=Math.asin(-n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(h,c),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==r&&this._onChangeCallback(),this},setFromQuaternion:function(e,t,r){return _matrix.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix,t,r)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return _quaternion$1.setFromEuler(this),this.setFromQuaternion(_quaternion$1,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}}),Object.assign(Layers.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},enableAll:function(){this.mask=-1},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},disableAll:function(){this.mask=0},test:function(e){return 0!=(this.mask&e.mask)}});let _object3DId=0;const _v1$1=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position=new Vector3,_scale=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};function Object3D(){Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();const e=new Vector3,t=new Euler,r=new Quaternion,n=new Vector3(1,1,1);t._onChange((function(){r.setFromEuler(t,!1)})),r._onChange((function(){t.setFromQuaternion(r,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function Scene(){Object3D.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0,Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this},rotateOnWorldAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this},rotateX:function(e){return this.rotateOnAxis(_xAxis,e)},rotateY:function(e){return this.rotateOnAxis(_yAxis,e)},rotateZ:function(e){return this.rotateOnAxis(_zAxis,e)},translateOnAxis:function(e,t){return _v1$1.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$1.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(_xAxis,e)},translateY:function(e){return this.translateOnAxis(_yAxis,e)},translateZ:function(e){return this.translateOnAxis(_zAxis,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(_m1$1.getInverse(this.matrixWorld))},lookAt:function(e,t,r){e.isVector3?_target.copy(e):_target.set(e,t,r);const n=this.parent;this.updateWorldMatrix(!0,!1),_position.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position,_target,this.up):_m1$1.lookAt(_target,_position,this.up),this.quaternion.setFromRotationMatrix(_m1$1),n&&(_m1$1.extractRotation(n.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.inverse()))},add:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_removedEvent)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),_m1$1.getInverse(this.matrixWorld),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let r=0,n=this.children.length;r<n;r++){const n=this.children[r].getObjectByProperty(e,t);if(void 0!==n)return n}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Vector3),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Quaternion),this.updateMatrixWorld(!0),this.matrixWorld.decompose(_position,e,_scale),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new Vector3),this.updateMatrixWorld(!0),this.matrixWorld.decompose(_position,_quaternion$2,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new Vector3),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverse(e)},traverseVisible:function(e){if(!1===this.visible)return;e(this);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,n=t.length;r<n;r++)t[r].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,r=e.length;t<r;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=void 0===e||"string"==typeof e,r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function i(t,r){return void 0===t[r.uuid]&&(t[r.uuid]=r.toJSON(e)),r.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=i(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const r=t.shapes;if(Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const n=r[t];i(e.shapes,n)}else i(e.shapes,r)}}if(void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let r=0,n=this.material.length;r<n;r++)t.push(i(e.materials,this.material[r]));n.material=t}else n.material=i(e.materials,this.material);if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(t){const t=o(e.geometries),n=o(e.materials),i=o(e.textures),a=o(e.images),s=o(e.shapes);t.length>0&&(r.geometries=t),n.length>0&&(r.materials=n),i.length>0&&(r.textures=i),a.length>0&&(r.images=a),s.length>0&&(r.shapes=s)}return r.object=n,r;function o(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const r=e.children[t];this.add(r.clone())}return this}}),Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,isScene:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}});const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$1=new Vector3,_box=new Box3,_v0=new Vector3,_v1$2=new Vector3,_v2=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function Box3(e,t){this.min=void 0!==e?e:new Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new Vector3(-1/0,-1/0,-1/0)}function satForAxes(e,t,r,n,i){for(let o=0,a=e.length-3;o<=a;o+=3){_testAxis.fromArray(e,o);const a=i.x*Math.abs(_testAxis.x)+i.y*Math.abs(_testAxis.y)+i.z*Math.abs(_testAxis.z),s=t.dot(_testAxis),l=r.dot(_testAxis),c=n.dot(_testAxis);if(Math.max(-Math.max(s,l,c),Math.min(s,l,c))>a)return!1}return!0}Object.assign(Box3.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){let t=1/0,r=1/0,n=1/0,i=-1/0,o=-1/0,a=-1/0;for(let s=0,l=e.length;s<l;s+=3){const l=e[s],c=e[s+1],u=e[s+2];l<t&&(t=l),c<r&&(r=c),u<n&&(n=u),l>i&&(i=l),c>o&&(o=c),u>a&&(a=u)}return this.min.set(t,r,n),this.max.set(i,o,a),this},setFromBufferAttribute:function(e){let t=1/0,r=1/0,n=1/0,i=-1/0,o=-1/0,a=-1/0;for(let s=0,l=e.count;s<l;s++){const l=e.getX(s),c=e.getY(s),u=e.getZ(s);l<t&&(t=l),c<r&&(r=c),u<n&&(n=u),l>i&&(i=l),c>o&&(o=c),u>a&&(a=u)}return this.min.set(t,r,n),this.max.set(i,o,a),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const r=_vector$1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),_box.copy(t.boundingBox),_box.applyMatrix4(e.matrixWorld),this.union(_box));const r=e.children;for(let e=0,t=r.length;e<t;e++)this.expandByObject(r[e]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Vector3),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,_vector$1),_vector$1.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0.subVectors(e.a,_center),_v1$2.subVectors(e.b,_center),_v2.subVectors(e.c,_center),_f0.subVectors(_v1$2,_v0),_f1.subVectors(_v2,_v1$2),_f2.subVectors(_v0,_v2);let t=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!!satForAxes(t,_v0,_v1$2,_v2,_extents)&&(t=[1,0,0,0,1,0,0,0,1],!!satForAxes(t,_v0,_v1$2,_v2,_extents)&&(_triangleNormal.crossVectors(_f0,_f1),t=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(t,_v0,_v1$2,_v2,_extents)))},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Vector3),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return _vector$1.copy(e).clamp(this.min,this.max).sub(e).length()},getBoundingSphere:function(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(_vector$1).length(),e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()||(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points)),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});const _box$1=new Box3;function Sphere(e,t){this.center=void 0!==e?e:new Vector3,this.radius=void 0!==t?t:-1}Object.assign(Sphere.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){const r=this.center;void 0!==t?r.copy(t):_box$1.setFromPoints(e).getCenter(r);let n=0;for(let t=0,i=e.length;t<i;t++)n=Math.max(n,r.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},isEmpty:function(){return this.radius<0},makeEmpty:function(){return this.center.set(0,0,0),this.radius=-1,this},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){const r=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Vector3),t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Box3),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});const _vector$2=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal=new Vector3;function Ray(e,t){this.origin=void 0!==e?e:new Vector3,this.direction=void 0!==t?t:new Vector3(0,0,-1)}Object.assign(Ray.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Vector3),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,_vector$2)),this},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Vector3),t.subVectors(e,this.origin);const r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){const t=_vector$2.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(_vector$2.copy(this.direction).multiplyScalar(t).add(this.origin),_vector$2.distanceToSquared(e))},distanceSqToSegment:function(e,t,r,n){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);const i=.5*e.distanceTo(t),o=-this.direction.dot(_segDir),a=_diff.dot(this.direction),s=-_diff.dot(_segDir),l=_diff.lengthSq(),c=Math.abs(1-o*o);let u,d,h,p;if(c>0)if(u=o*s-a,d=o*a-s,p=i*c,u>=0)if(d>=-p)if(d<=p){const e=1/c;u*=e,d*=e,h=u*(u+o*d+2*a)+d*(o*u+d+2*s)+l}else d=i,u=Math.max(0,-(o*d+a)),h=-u*u+d*(d+2*s)+l;else d=-i,u=Math.max(0,-(o*d+a)),h=-u*u+d*(d+2*s)+l;else d<=-p?(u=Math.max(0,-(-o*i+a)),d=u>0?-i:Math.min(Math.max(-i,-s),i),h=-u*u+d*(d+2*s)+l):d<=p?(u=0,d=Math.min(Math.max(-i,-s),i),h=d*(d+2*s)+l):(u=Math.max(0,-(o*i+a)),d=u>0?i:Math.min(Math.max(-i,-s),i),h=-u*u+d*(d+2*s)+l);else d=o>0?-i:i,u=Math.max(0,-(o*d+a)),h=-u*u+d*(d+2*s)+l;return r&&r.copy(this.direction).multiplyScalar(u).add(this.origin),n&&n.copy(_segDir).multiplyScalar(d).add(_segCenter),h},intersectSphere:function(e,t){_vector$2.subVectors(e.center,this.origin);const r=_vector$2.dot(this.direction),n=_vector$2.dot(_vector$2)-r*r,i=e.radius*e.radius;if(n>i)return null;const o=Math.sqrt(i-n),a=r-o,s=r+o;return a<0&&s<0?null:a<0?this.at(s,t):this.at(a,t)},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null},intersectPlane:function(e,t){const r=this.distanceToPlane(e);return null===r?null:this.at(r,t)},intersectsPlane:function(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){let r,n,i,o,a,s;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(r=(e.min.x-d.x)*l,n=(e.max.x-d.x)*l):(r=(e.max.x-d.x)*l,n=(e.min.x-d.x)*l),c>=0?(i=(e.min.y-d.y)*c,o=(e.max.y-d.y)*c):(i=(e.max.y-d.y)*c,o=(e.min.y-d.y)*c),r>o||i>n?null:((i>r||r!=r)&&(r=i),(o<n||n!=n)&&(n=o),u>=0?(a=(e.min.z-d.z)*u,s=(e.max.z-d.z)*u):(a=(e.max.z-d.z)*u,s=(e.min.z-d.z)*u),r>s||a>n?null:((a>r||r!=r)&&(r=a),(s<n||n!=n)&&(n=s),n<0?null:this.at(r>=0?r:n,t)))},intersectsBox:function(e){return null!==this.intersectBox(e,_vector$2)},intersectTriangle:function(e,t,r,n,i){_edge1.subVectors(t,e),_edge2.subVectors(r,e),_normal.crossVectors(_edge1,_edge2);let o,a=this.direction.dot(_normal);if(a>0){if(n)return null;o=1}else{if(!(a<0))return null;o=-1,a=-a}_diff.subVectors(this.origin,e);const s=o*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(s<0)return null;const l=o*this.direction.dot(_edge1.cross(_diff));if(l<0)return null;if(s+l>a)return null;const c=-o*_diff.dot(_normal);return c<0?null:this.at(c/a,i)},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;function Plane(e,t){this.normal=void 0!==e?e:new Vector3(1,0,0),this.constant=void 0!==t?t:0}Object.assign(Plane.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,r){const n=_vector1.subVectors(r,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Vector3),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new Vector3);const r=e.delta(_vector1),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):void 0;const i=-(e.start.dot(this.normal)+this.constant)/n;return i<0||i>1?void 0:t.copy(r).multiplyScalar(i).add(e.start)},intersectsLine:function(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Vector3),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){const r=t||_normalMatrix.getNormalMatrix(e),n=this.coplanarPoint(_vector1).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-n.dot(i),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});const _v0$1=new Vector3,_v1$3=new Vector3,_v2$1=new Vector3,_v3=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;function Triangle(e,t,r){this.a=void 0!==e?e:new Vector3,this.b=void 0!==t?t:new Vector3,this.c=void 0!==r?r:new Vector3}Object.assign(Triangle,{getNormal:function(e,t,r,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new Vector3),n.subVectors(r,t),_v0$1.subVectors(e,t),n.cross(_v0$1);const i=n.lengthSq();return i>0?n.multiplyScalar(1/Math.sqrt(i)):n.set(0,0,0)},getBarycoord:function(e,t,r,n,i){_v0$1.subVectors(n,t),_v1$3.subVectors(r,t),_v2$1.subVectors(e,t);const o=_v0$1.dot(_v0$1),a=_v0$1.dot(_v1$3),s=_v0$1.dot(_v2$1),l=_v1$3.dot(_v1$3),c=_v1$3.dot(_v2$1),u=o*l-a*a;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new Vector3),0===u)return i.set(-2,-1,-1);const d=1/u,h=(l*s-a*c)*d,p=(o*c-a*s)*d;return i.set(1-h-p,p,h)},containsPoint:function(e,t,r,n){return Triangle.getBarycoord(e,t,r,n,_v3),_v3.x>=0&&_v3.y>=0&&_v3.x+_v3.y<=1},getUV:function(e,t,r,n,i,o,a,s){return this.getBarycoord(e,t,r,n,_v3),s.set(0,0),s.addScaledVector(i,_v3.x),s.addScaledVector(o,_v3.y),s.addScaledVector(a,_v3.z),s},isFrontFacing:function(e,t,r,n){return _v0$1.subVectors(r,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(n)<0}}),Object.assign(Triangle.prototype,{set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),.5*_v0$1.cross(_v1$3).length()},getMidpoint:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Vector3),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return Triangle.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Plane),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,r,n,i){return Triangle.getUV(e,this.a,this.b,this.c,t,r,n,i)},containsPoint:function(e){return Triangle.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Vector3);const r=this.a,n=this.b,i=this.c;let o,a;_vab.subVectors(n,r),_vac.subVectors(i,r),_vap.subVectors(e,r);const s=_vab.dot(_vap),l=_vac.dot(_vap);if(s<=0&&l<=0)return t.copy(r);_vbp.subVectors(e,n);const c=_vab.dot(_vbp),u=_vac.dot(_vbp);if(c>=0&&u<=c)return t.copy(n);const d=s*u-c*l;if(d<=0&&s>=0&&c<=0)return o=s/(s-c),t.copy(r).addScaledVector(_vab,o);_vcp.subVectors(e,i);const h=_vab.dot(_vcp),p=_vac.dot(_vcp);if(p>=0&&h<=p)return t.copy(i);const m=h*l-s*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),t.copy(r).addScaledVector(_vac,a);const f=c*p-h*u;if(f<=0&&u-c>=0&&h-p>=0)return _vbc.subVectors(i,n),a=(u-c)/(u-c+(h-p)),t.copy(n).addScaledVector(_vbc,a);const g=1/(f+m+d);return o=m*g,a=d*g,t.copy(r).addScaledVector(_vab,o).addScaledVector(_vac,a)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function Color(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}function hue2rgb(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}function SRGBToLinear(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function LinearToSRGB(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}function Face3(e,t,r,n,i,o){this.a=e,this.b=t,this.c=r,this.normal=n&&n.isVector3?n:new Vector3,this.vertexNormals=Array.isArray(n)?n:[],this.color=i&&i.isColor?i:new Color,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=void 0!==o?o:0}Object.assign(Color.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSL:function(e,t,r){if(e=MathUtils.euclideanModulo(e,1),t=MathUtils.clamp(t,0,1),r=MathUtils.clamp(r,0,1),0===t)this.r=this.g=this.b=r;else{const n=r<=.5?r*(1+t):r+t-r*t,i=2*r-n;this.r=hue2rgb(i,n,e+1/3),this.g=hue2rgb(i,n,e),this.b=hue2rgb(i,n,e-1/3)}return this},setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let e;const n=r[1],i=r[2];switch(n){case"rgb":case"rgba":if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[5]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[5]),this;break;case"hsl":case"hsla":if(e=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){const r=parseFloat(e[1])/360,n=parseInt(e[2],10)/100,i=parseInt(e[3],10)/100;return t(e[5]),this.setHSL(r,n,i)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(e)){const e=r[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this},setColorName:function(e){const t=_colorKeywords[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);const r=t>0?1/t:1;return this.r=Math.pow(e.r,r),this.g=Math.pow(e.g,r),this.b=Math.pow(e.b,r),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this},copyLinearToSRGB:function(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,r=this.g,n=this.b,i=Math.max(t,r,n),o=Math.min(t,r,n);let a,s;const l=(o+i)/2;if(o===i)a=0,s=0;else{const e=i-o;switch(s=l<=.5?e/(i+o):e/(2-i-o),i){case t:a=(r-n)/e+(r<n?6:0);break;case r:a=(n-t)/e+2;break;case n:a=(t-r)/e+4}a/=6}return e.h=a,e.s=s,e.l=l,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,r){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=r,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL(_hslA),e.getHSL(_hslB);const r=MathUtils.lerp(_hslA.h,_hslB.h,t),n=MathUtils.lerp(_hslA.s,_hslB.s,t),i=MathUtils.lerp(_hslA.l,_hslB.l,t);return this.setHSL(r,n,i),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},fromBufferAttribute:function(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this},toJSON:function(){return this.getHex()}}),Color.NAMES=_colorKeywords,Object.assign(Face3.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,r=e.vertexNormals.length;t<r;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,r=e.vertexColors.length;t<r;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});let materialId=0;function Material(){Object.defineProperty(this,"id",{value:materialId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=NormalBlending,this.side=FrontSide,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function MeshBasicMaterial(e){Material.call(this),this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const r=e[t];if(void 0===r){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===FlatShading;continue}const n=this[t];void 0!==n?n&&n.isColor?n.set(r):n&&n.isVector3&&r&&r.isVector3?n.copy(r):this[t]=r:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(r.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,r.reflectivity=this.reflectivity,r.refractionRatio=this.refractionRatio,void 0!==this.combine&&(r.combine=this.combine),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(r.blending=this.blending),!0===this.flatShading&&(r.flatShading=this.flatShading),this.side!==FrontSide&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(r.morphTargets=!0),!0===this.morphNormals&&(r.morphNormals=!0),!0===this.skinning&&(r.skinning=!0),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t){const t=n(e.textures),i=n(e.images);t.length>0&&(r.textures=t),i.length>0&&(r.images=i)}return r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(null!==t){const e=t.length;r=new Array(e);for(let n=0;n!==e;++n)r[n]=t[n].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Material.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),MeshBasicMaterial.prototype=Object.create(Material.prototype),MeshBasicMaterial.prototype.constructor=MeshBasicMaterial,MeshBasicMaterial.prototype.isMeshBasicMaterial=!0,MeshBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const _vector$3=new Vector3,_vector2$1=new Vector2;function BufferAttribute(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}function Int8BufferAttribute(e,t,r){BufferAttribute.call(this,new Int8Array(e),t,r)}function Uint8BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8Array(e),t,r)}function Uint8ClampedBufferAttribute(e,t,r){BufferAttribute.call(this,new Uint8ClampedArray(e),t,r)}function Int16BufferAttribute(e,t,r){BufferAttribute.call(this,new Int16Array(e),t,r)}function Uint16BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint16Array(e),t,r)}function Int32BufferAttribute(e,t,r){BufferAttribute.call(this,new Int32Array(e),t,r)}function Uint32BufferAttribute(e,t,r){BufferAttribute.call(this,new Uint32Array(e),t,r)}function Float32BufferAttribute(e,t,r){BufferAttribute.call(this,new Float32Array(e),t,r)}function Float64BufferAttribute(e,t,r){BufferAttribute.call(this,new Float64Array(e),t,r)}function DirectGeometry(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function arrayMax(e){if(0===e.length)return-1/0;let t=e[0];for(let r=1,n=e.length;r<n;++r)e[r]>t&&(t=e[r]);return t}Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let n=0,i=this.itemSize;n<i;n++)this.array[e+n]=t.array[r+n];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),i=new Color),t[r++]=i.r,t[r++]=i.g,t[r++]=i.b}return this},copyVector2sArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),i=new Vector2),t[r++]=i.x,t[r++]=i.y}return this},copyVector3sArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),i=new Vector3),t[r++]=i.x,t[r++]=i.y,t[r++]=i.z}return this},copyVector4sArray:function(e){const t=this.array;let r=0;for(let n=0,i=e.length;n<i;n++){let i=e[n];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),i=new Vector4),t[r++]=i.x,t[r++]=i.y,t[r++]=i.z,t[r++]=i.w}return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,r=this.count;t<r;t++)_vector2$1.fromBufferAttribute(this,t),_vector2$1.applyMatrix3(e),this.setXY(t,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(let t=0,r=this.count;t<r;t++)_vector$3.fromBufferAttribute(this,t),_vector$3.applyMatrix3(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyMatrix4:function(e){for(let t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyMatrix4(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyNormalMatrix:function(e){for(let t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyNormalMatrix(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},transformDirection:function(e){for(let t=0,r=this.count;t<r;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.transformDirection(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int8BufferAttribute.prototype.constructor=Int8BufferAttribute,Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute,Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute,Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int16BufferAttribute.prototype.constructor=Int16BufferAttribute,Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute,Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int32BufferAttribute.prototype.constructor=Int32BufferAttribute,Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute,Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float32BufferAttribute.prototype.constructor=Float32BufferAttribute,Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float64BufferAttribute.prototype.constructor=Float64BufferAttribute,Object.assign(DirectGeometry.prototype,{computeGroups:function(e){const t=[];let r,n,i=void 0;const o=e.faces;for(n=0;n<o.length;n++){const e=o[n];e.materialIndex!==i&&(i=e.materialIndex,void 0!==r&&(r.count=3*n-r.start,t.push(r)),r={start:3*n,materialIndex:i})}void 0!==r&&(r.count=3*n-r.start,t.push(r)),this.groups=t},fromGeometry:function(e){const t=e.faces,r=e.vertices,n=e.faceVertexUvs,i=n[0]&&n[0].length>0,o=n[1]&&n[1].length>0,a=e.morphTargets,s=a.length;let l;if(s>0){l=[];for(let e=0;e<s;e++)l[e]={name:a[e].name,data:[]};this.morphTargets.position=l}const c=e.morphNormals,u=c.length;let d;if(u>0){d=[];for(let e=0;e<u;e++)d[e]={name:c[e].name,data:[]};this.morphTargets.normal=d}const h=e.skinIndices,p=e.skinWeights,m=h.length===r.length,f=p.length===r.length;r.length>0&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let e=0;e<t.length;e++){const g=t[e];this.vertices.push(r[g.a],r[g.b],r[g.c]);const _=g.vertexNormals;if(3===_.length)this.normals.push(_[0],_[1],_[2]);else{const e=g.normal;this.normals.push(e,e,e)}const v=g.vertexColors;if(3===v.length)this.colors.push(v[0],v[1],v[2]);else{const e=g.color;this.colors.push(e,e,e)}if(!0===i){const t=n[0][e];void 0!==t?this.uvs.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",e),this.uvs.push(new Vector2,new Vector2,new Vector2))}if(!0===o){const t=n[1][e];void 0!==t?this.uvs2.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",e),this.uvs2.push(new Vector2,new Vector2,new Vector2))}for(let e=0;e<s;e++){const t=a[e].vertices;l[e].data.push(t[g.a],t[g.b],t[g.c])}for(let t=0;t<u;t++){const r=c[t].vertexNormals[e];d[t].data.push(r.a,r.b,r.c)}m&&this.skinIndices.push(h[g.a],h[g.b],h[g.c]),f&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}});let _bufferGeometryId=1;const _m1$2=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$4=new Vector3;function BufferGeometry(){Object.defineProperty(this,"id",{value:_bufferGeometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(arrayMax(e)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,r){this.groups.push({start:e,count:t,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(void 0!==r){const t=(new Matrix3).getNormalMatrix(e);r.applyNormalMatrix(t),r.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return _m1$2.makeRotationX(e),this.applyMatrix4(_m1$2),this},rotateY:function(e){return _m1$2.makeRotationY(e),this.applyMatrix4(_m1$2),this},rotateZ:function(e){return _m1$2.makeRotationZ(e),this.applyMatrix4(_m1$2),this},translate:function(e,t,r){return _m1$2.makeTranslation(e,t,r),this.applyMatrix4(_m1$2),this},scale:function(e,t,r){return _m1$2.makeScale(e,t,r),this.applyMatrix4(_m1$2),this},lookAt:function(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const e=new Float32BufferAttribute(3*t.vertices.length,3),r=new Float32BufferAttribute(3*t.colors.length,3);if(this.setAttribute("position",e.copyVector3sArray(t.vertices)),this.setAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new Float32BufferAttribute(t.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Float32BufferAttribute(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new BufferAttribute(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const t=new Float32Array(3*e.normals.length);this.setAttribute("normal",new BufferAttribute(t,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const t=new Float32Array(3*e.colors.length);this.setAttribute("color",new BufferAttribute(t,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const t=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new BufferAttribute(t,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const t=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new BufferAttribute(t,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const t in e.morphTargets){const r=[],n=e.morphTargets[t];for(let e=0,t=n.length;e<t;e++){const t=n[e],i=new Float32BufferAttribute(3*t.data.length,3);i.name=t.name,r.push(i.copyVector3sArray(t.data))}this.morphAttributes[t]=r}if(e.skinIndices.length>0){const t=new Float32BufferAttribute(4*e.skinIndices.length,4);this.setAttribute("skinIndex",t.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const t=new Float32BufferAttribute(4*e.skinWeights.length,4);this.setAttribute("skinWeight",t.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);const e=this.attributes.position,t=this.morphAttributes.position;if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];_box$2.setFromBufferAttribute(r),this.morphTargetsRelative?(_vector$4.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$4),_vector$4.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$4)):(this.boundingBox.expandByPoint(_box$2.min),this.boundingBox.expandByPoint(_box$2.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);const e=this.attributes.position,t=this.morphAttributes.position;if(e){const r=this.boundingSphere.center;if(_box$2.setFromBufferAttribute(e),t)for(let e=0,r=t.length;e<r;e++){const r=t[e];_boxMorphTargets.setFromBufferAttribute(r),this.morphTargetsRelative?(_vector$4.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$4),_vector$4.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$4)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max))}_box$2.getCenter(r);let n=0;for(let t=0,i=e.count;t<i;t++)_vector$4.fromBufferAttribute(e,t),n=Math.max(n,r.distanceToSquared(_vector$4));if(t)for(let i=0,o=t.length;i<o;i++){const o=t[i],a=this.morphTargetsRelative;for(let t=0,i=o.count;t<i;t++)_vector$4.fromBufferAttribute(o,t),a&&(_offset.fromBufferAttribute(e,t),_vector$4.add(_offset)),n=Math.max(n,r.distanceToSquared(_vector$4))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let r=this.getAttribute("normal");if(void 0===r)r=new BufferAttribute(new Float32Array(3*t.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);const n=new Vector3,i=new Vector3,o=new Vector3,a=new Vector3,s=new Vector3,l=new Vector3,c=new Vector3,u=new Vector3;if(e)for(let d=0,h=e.count;d<h;d+=3){const h=e.getX(d+0),p=e.getX(d+1),m=e.getX(d+2);n.fromBufferAttribute(t,h),i.fromBufferAttribute(t,p),o.fromBufferAttribute(t,m),c.subVectors(o,i),u.subVectors(n,i),c.cross(u),a.fromBufferAttribute(r,h),s.fromBufferAttribute(r,p),l.fromBufferAttribute(r,m),a.add(c),s.add(c),l.add(c),r.setXYZ(h,a.x,a.y,a.z),r.setXYZ(p,s.x,s.y,s.z),r.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,a=t.count;e<a;e+=3)n.fromBufferAttribute(t,e+0),i.fromBufferAttribute(t,e+1),o.fromBufferAttribute(t,e+2),c.subVectors(o,i),u.subVectors(n,i),c.cross(u),r.setXYZ(e+0,c.x,c.y,c.z),r.setXYZ(e+1,c.x,c.y,c.z),r.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),r.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const r=this.attributes;for(const n in r){if(void 0===e.attributes[n])continue;const i=r[n].array,o=e.attributes[n],a=o.array,s=o.itemSize*t,l=Math.min(a.length,i.length-s);for(let e=0,t=s;e<l;e++,t++)i[t]=a[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)_vector$4.fromBufferAttribute(e,t),_vector$4.normalize(),e.setXYZ(t,_vector$4.x,_vector$4.y,_vector$4.z)},toNonIndexed:function(){function e(e,t){const r=e.array,n=e.itemSize,i=e.normalized,o=new r.constructor(t.length*n);let a=0,s=0;for(let e=0,i=t.length;e<i;e++){a=t[e]*n;for(let e=0;e<n;e++)o[s++]=r[a++]}return new BufferAttribute(o,n,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new BufferGeometry,r=this.index.array,n=this.attributes;for(const i in n){const o=e(n[i],r);t.setAttribute(i,o)}const i=this.morphAttributes;for(const n in i){const o=[],a=i[n];for(let t=0,n=a.length;t<n;t++){const n=e(a[t],r);o.push(n)}t.morphAttributes[n]=o}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let e=0,r=o.length;e<r;e++){const r=o[e];t.addGroup(r.start,r.count,r.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const r in t)void 0!==t[r]&&(e[r]=t[r]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const t in r){const n=r[t],i=n.toJSON(e.data);""!==n.name&&(i.name=n.name),e.data.attributes[t]=i}const n={};let i=!1;for(const t in this.morphAttributes){const r=this.morphAttributes[t],o=[];for(let t=0,n=r.length;t<n;t++){const n=r[t],i=n.toJSON(e.data);""!==n.name&&(i.name=n.name),o.push(i)}o.length>0&&(n[t]=o,i=!0)}i&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e},clone:function(){return(new BufferGeometry).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;null!==r&&this.setIndex(r.clone(t));const n=e.attributes;for(const e in n){const r=n[e];this.setAttribute(e,r.clone(t))}const i=e.morphAttributes;for(const e in i){const r=[],n=i[e];for(let e=0,i=n.length;e<i;e++)r.push(n[e].clone(t));this.morphAttributes[e]=r}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let e=0,t=o.length;e<t;e++){const t=o[e];this.addGroup(t.start,t.count,t.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const s=e.boundingSphere;return null!==s&&(this.boundingSphere=s.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;function Mesh(e,t){Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new MeshBasicMaterial,this.updateMorphTargets()}function checkIntersection(e,t,r,n,i,o,a,s){let l;if(l=t.side===BackSide?n.intersectTriangle(a,o,i,!0,s):n.intersectTriangle(i,o,a,t.side!==DoubleSide,s),null===l)return null;_intersectionPointWorld.copy(s),_intersectionPointWorld.applyMatrix4(e.matrixWorld);const c=r.ray.origin.distanceTo(_intersectionPointWorld);return c<r.near||c>r.far?null:{distance:c,point:_intersectionPointWorld.clone(),object:e}}function checkBufferGeometryIntersection(e,t,r,n,i,o,a,s,l,c,u,d){_vA.fromBufferAttribute(i,c),_vB.fromBufferAttribute(i,u),_vC.fromBufferAttribute(i,d);const h=e.morphTargetInfluences;if(t.morphTargets&&o&&h){_morphA.set(0,0,0),_morphB.set(0,0,0),_morphC.set(0,0,0);for(let e=0,t=o.length;e<t;e++){const t=h[e],r=o[e];0!==t&&(_tempA.fromBufferAttribute(r,c),_tempB.fromBufferAttribute(r,u),_tempC.fromBufferAttribute(r,d),a?(_morphA.addScaledVector(_tempA,t),_morphB.addScaledVector(_tempB,t),_morphC.addScaledVector(_tempC,t)):(_morphA.addScaledVector(_tempA.sub(_vA),t),_morphB.addScaledVector(_tempB.sub(_vB),t),_morphC.addScaledVector(_tempC.sub(_vC),t)))}_vA.add(_morphA),_vB.add(_morphB),_vC.add(_morphC)}e.isSkinnedMesh&&(e.boneTransform(c,_vA),e.boneTransform(u,_vB),e.boneTransform(d,_vC));const p=checkIntersection(e,t,r,n,_vA,_vB,_vC,_intersectionPoint);if(p){s&&(_uvA.fromBufferAttribute(s,c),_uvB.fromBufferAttribute(s,u),_uvC.fromBufferAttribute(s,d),p.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),l&&(_uvA.fromBufferAttribute(l,c),_uvB.fromBufferAttribute(l,u),_uvC.fromBufferAttribute(l,d),p.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2));const e=new Face3(c,u,d);Triangle.getNormal(_vA,_vB,_vC,e.normal),p.face=e}return p}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const r=this.geometry,n=this.material,i=this.matrixWorld;if(void 0===n)return;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere.copy(r.boundingSphere),_sphere.applyMatrix4(i),!1===e.ray.intersectsSphere(_sphere))return;if(_inverseMatrix.getInverse(i),_ray.copy(e.ray).applyMatrix4(_inverseMatrix),null!==r.boundingBox&&!1===_ray.intersectsBox(r.boundingBox))return;let o;if(r.isBufferGeometry){const i=r.index,a=r.attributes.position,s=r.morphAttributes.position,l=r.morphTargetsRelative,c=r.attributes.uv,u=r.attributes.uv2,d=r.groups,h=r.drawRange;if(null!==i)if(Array.isArray(n))for(let r=0,p=d.length;r<p;r++){const p=d[r],m=n[p.materialIndex];for(let r=Math.max(p.start,h.start),n=Math.min(p.start+p.count,h.start+h.count);r<n;r+=3){const n=i.getX(r),d=i.getX(r+1),h=i.getX(r+2);o=checkBufferGeometryIntersection(this,m,e,_ray,a,s,l,c,u,n,d,h),o&&(o.faceIndex=Math.floor(r/3),o.face.materialIndex=p.materialIndex,t.push(o))}}else{for(let r=Math.max(0,h.start),d=Math.min(i.count,h.start+h.count);r<d;r+=3){const d=i.getX(r),h=i.getX(r+1),p=i.getX(r+2);o=checkBufferGeometryIntersection(this,n,e,_ray,a,s,l,c,u,d,h,p),o&&(o.faceIndex=Math.floor(r/3),t.push(o))}}else if(void 0!==a)if(Array.isArray(n))for(let r=0,i=d.length;r<i;r++){const i=d[r],p=n[i.materialIndex];for(let r=Math.max(i.start,h.start),n=Math.min(i.start+i.count,h.start+h.count);r<n;r+=3){o=checkBufferGeometryIntersection(this,p,e,_ray,a,s,l,c,u,r,r+1,r+2),o&&(o.faceIndex=Math.floor(r/3),o.face.materialIndex=i.materialIndex,t.push(o))}}else{for(let r=Math.max(0,h.start),i=Math.min(a.count,h.start+h.count);r<i;r+=3){o=checkBufferGeometryIntersection(this,n,e,_ray,a,s,l,c,u,r,r+1,r+2),o&&(o.faceIndex=Math.floor(r/3),t.push(o))}}}else if(r.isGeometry){const i=Array.isArray(n),a=r.vertices,s=r.faces;let l;const c=r.faceVertexUvs[0];c.length>0&&(l=c);for(let r=0,c=s.length;r<c;r++){const c=s[r],u=i?n[c.materialIndex]:n;if(void 0===u)continue;const d=a[c.a],h=a[c.b],p=a[c.c];if(o=checkIntersection(this,u,e,_ray,d,h,p,_intersectionPoint),o){if(l&&l[r]){const e=l[r];_uvA.copy(e[0]),_uvB.copy(e[1]),_uvC.copy(e[2]),o.uv=Triangle.getUV(_intersectionPoint,d,h,p,_uvA,_uvB,_uvC,new Vector2)}o.face=c,o.faceIndex=r,t.push(o)}}}}});let _geometryId=0;const _m1$3=new Matrix4,_obj$1=new Object3D,_offset$1=new Vector3;function Geometry(){Object.defineProperty(this,"id",{value:_geometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix4:function(e){const t=(new Matrix3).getNormalMatrix(e);for(let t=0,r=this.vertices.length;t<r;t++){this.vertices[t].applyMatrix4(e)}for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e];r.normal.applyMatrix3(t).normalize();for(let e=0,n=r.vertexNormals.length;e<n;e++)r.vertexNormals[e].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return _m1$3.makeRotationX(e),this.applyMatrix4(_m1$3),this},rotateY:function(e){return _m1$3.makeRotationY(e),this.applyMatrix4(_m1$3),this},rotateZ:function(e){return _m1$3.makeRotationZ(e),this.applyMatrix4(_m1$3),this},translate:function(e,t,r){return _m1$3.makeTranslation(e,t,r),this.applyMatrix4(_m1$3),this},scale:function(e,t,r){return _m1$3.makeScale(e,t,r),this.applyMatrix4(_m1$3),this},lookAt:function(e){return _obj$1.lookAt(e),_obj$1.updateMatrix(),this.applyMatrix4(_obj$1.matrix),this},fromBufferGeometry:function(e){const t=this,r=null!==e.index?e.index:void 0,n=e.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const i=n.position,o=n.normal,a=n.color,s=n.uv,l=n.uv2;void 0!==l&&(this.faceVertexUvs[1]=[]);for(let e=0;e<i.count;e++)t.vertices.push((new Vector3).fromBufferAttribute(i,e)),void 0!==a&&t.colors.push((new Color).fromBufferAttribute(a,e));function c(e,r,n,i){const c=void 0===a?[]:[t.colors[e].clone(),t.colors[r].clone(),t.colors[n].clone()],u=new Face3(e,r,n,void 0===o?[]:[(new Vector3).fromBufferAttribute(o,e),(new Vector3).fromBufferAttribute(o,r),(new Vector3).fromBufferAttribute(o,n)],c,i);t.faces.push(u),void 0!==s&&t.faceVertexUvs[0].push([(new Vector2).fromBufferAttribute(s,e),(new Vector2).fromBufferAttribute(s,r),(new Vector2).fromBufferAttribute(s,n)]),void 0!==l&&t.faceVertexUvs[1].push([(new Vector2).fromBufferAttribute(l,e),(new Vector2).fromBufferAttribute(l,r),(new Vector2).fromBufferAttribute(l,n)])}const u=e.groups;if(u.length>0)for(let e=0;e<u.length;e++){const t=u[e],n=t.start;for(let e=n,i=n+t.count;e<i;e+=3)void 0!==r?c(r.getX(e),r.getX(e+1),r.getX(e+2),t.materialIndex):c(e,e+1,e+2,t.materialIndex)}else if(void 0!==r)for(let e=0;e<r.count;e+=3)c(r.getX(e),r.getX(e+1),r.getX(e+2));else for(let e=0;e<i.count;e+=3)c(e,e+1,e+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset$1).negate(),this.translate(_offset$1.x,_offset$1.y,_offset$1.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,r=0===t?1:1/t,n=new Matrix4;return n.set(r,0,0,-r*e.x,0,r,0,-r*e.y,0,0,r,-r*e.z,0,0,0,1),this.applyMatrix4(n),this},computeFaceNormals:function(){const e=new Vector3,t=new Vector3;for(let r=0,n=this.faces.length;r<n;r++){const n=this.faces[r],i=this.vertices[n.a],o=this.vertices[n.b],a=this.vertices[n.c];e.subVectors(a,o),t.subVectors(i,o),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){void 0===e&&(e=!0);const t=new Array(this.vertices.length);for(let e=0,r=this.vertices.length;e<r;e++)t[e]=new Vector3;if(e){const e=new Vector3,r=new Vector3;for(let n=0,i=this.faces.length;n<i;n++){const i=this.faces[n],o=this.vertices[i.a],a=this.vertices[i.b],s=this.vertices[i.c];e.subVectors(s,a),r.subVectors(o,a),e.cross(r),t[i.a].add(e),t[i.b].add(e),t[i.c].add(e)}}else{this.computeFaceNormals();for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let e=0,r=this.vertices.length;e<r;e++)t[e].normalize();for(let e=0,r=this.faces.length;e<r;e++){const r=this.faces[e],n=r.vertexNormals;3===n.length?(n[0].copy(t[r.a]),n[1].copy(t[r.b]),n[2].copy(t[r.c])):(n[0]=t[r.a].clone(),n[1]=t[r.b].clone(),n[2]=t[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],r=t.vertexNormals;3===r.length?(r[0].copy(t.normal),r[1].copy(t.normal),r[2].copy(t.normal)):(r[0]=t.normal.clone(),r[1]=t.normal.clone(),r[2]=t.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,r=t.vertexNormals.length;e<r;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const e=new Geometry;e.faces=this.faces;for(let t=0,r=this.morphTargets.length;t<r;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,r=this.morphNormals[t].vertexNormals;for(let t=0,n=this.faces.length;t<n;t++){const t=new Vector3,n={a:new Vector3,b:new Vector3,c:new Vector3};e.push(t),r.push(n)}}const r=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],n=r.faceNormals[e],i=r.vertexNormals[e];n.copy(t.normal),i.a.copy(t.vertexNormals[0]),i.b.copy(t.vertexNormals[1]),i.c.copy(t.vertexNormals[2])}}for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,r){if(!e||!e.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);let n,i=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,l=e.faces,c=this.colors,u=e.colors;void 0===r&&(r=0),void 0!==t&&(n=(new Matrix3).getNormalMatrix(t));for(let e=0,r=a.length;e<r;e++){const r=a[e].clone();void 0!==t&&r.applyMatrix4(t),o.push(r)}for(let e=0,t=u.length;e<t;e++)c.push(u[e].clone());for(let e=0,t=l.length;e<t;e++){let t,o,a,c=l[e],u=c.vertexNormals,d=c.vertexColors;t=new Face3(c.a+i,c.b+i,c.c+i),t.normal.copy(c.normal),void 0!==n&&t.normal.applyMatrix3(n).normalize();for(let e=0,r=u.length;e<r;e++)o=u[e].clone(),void 0!==n&&o.applyMatrix3(n).normalize(),t.vertexNormals.push(o);t.color.copy(c.color);for(let e=0,r=d.length;e<r;e++)a=d[e],t.vertexColors.push(a.clone());t.materialIndex=c.materialIndex+r,s.push(t)}for(let t=0,r=e.faceVertexUvs.length;t<r;t++){const r=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=r.length;e<n;e++){const n=r[e],i=[];for(let e=0,t=n.length;e<t;e++)i.push(n[e].clone());this.faceVertexUvs[t].push(i)}}},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(){const e={},t=[],r=[],n=Math.pow(10,4);for(let i=0,o=this.vertices.length;i<o;i++){const o=this.vertices[i],a=Math.round(o.x*n)+"_"+Math.round(o.y*n)+"_"+Math.round(o.z*n);void 0===e[a]?(e[a]=i,t.push(this.vertices[i]),r[i]=t.length-1):r[i]=r[e[a]]}const i=[];for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.a=r[t.a],t.b=r[t.b],t.c=r[t.c];const n=[t.a,t.b,t.c];for(let t=0;t<3;t++)if(n[t]===n[(t+1)%3]){i.push(e);break}}for(let e=i.length-1;e>=0;e--){const t=i[e];this.faces.splice(t,1);for(let e=0,r=this.faceVertexUvs.length;e<r;e++)this.faceVertexUvs[e].splice(t,1)}const o=this.vertices.length-t.length;return this.vertices=t,o},setFromPoints:function(e){this.vertices=[];for(let t=0,r=e.length;t<r;t++){const r=e[t];this.vertices.push(new Vector3(r.x,r.y,r.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let r=0;r<t;r++)e[r]._id=r;e.sort((function(e,t){return e.materialIndex-t.materialIndex}));const r=this.faceVertexUvs[0],n=this.faceVertexUvs[1];let i,o;r&&r.length===t&&(i=[]),n&&n.length===t&&(o=[]);for(let a=0;a<t;a++){const t=e[a]._id;i&&i.push(r[t]),o&&o.push(n[t])}i&&(this.faceVertexUvs[0]=i),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){const t=this.parameters;for(const r in t)void 0!==t[r]&&(e[r]=t[r]);return e}const t=[];for(let e=0;e<this.vertices.length;e++){const r=this.vertices[e];t.push(r.x,r.y,r.z)}const r=[],n=[],i={},o=[],a={},s=[],l={};for(let e=0;e<this.faces.length;e++){const t=this.faces[e],n=!0,i=!1,o=void 0!==this.faceVertexUvs[0][e],a=t.normal.length()>0,s=t.vertexNormals.length>0,l=1!==t.color.r||1!==t.color.g||1!==t.color.b,p=t.vertexColors.length>0;let m=0;if(m=c(m,0,0),m=c(m,1,n),m=c(m,2,i),m=c(m,3,o),m=c(m,4,a),m=c(m,5,s),m=c(m,6,l),m=c(m,7,p),r.push(m),r.push(t.a,t.b,t.c),r.push(t.materialIndex),o){const t=this.faceVertexUvs[0][e];r.push(h(t[0]),h(t[1]),h(t[2]))}if(a&&r.push(u(t.normal)),s){const e=t.vertexNormals;r.push(u(e[0]),u(e[1]),u(e[2]))}if(l&&r.push(d(t.color)),p){const e=t.vertexColors;r.push(d(e[0]),d(e[1]),d(e[2]))}}function c(e,t,r){return r?e|1<<t:e&~(1<<t)}function u(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==i[t]||(i[t]=n.length/3,n.push(e.x,e.y,e.z)),i[t]}function d(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==a[t]||(a[t]=o.length,o.push(e.getHex())),a[t]}function h(e){const t=e.x.toString()+e.y.toString();return void 0!==l[t]||(l[t]=s.length/2,s.push(e.x,e.y)),l[t]}return e.data={},e.data.vertices=t,e.data.normals=n,o.length>0&&(e.data.colors=o),s.length>0&&(e.data.uvs=[s]),e.data.faces=r,e},clone:function(){return(new Geometry).copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let e=0,r=t.length;e<r;e++)this.vertices.push(t[e].clone());const r=e.colors;for(let e=0,t=r.length;e<t;e++)this.colors.push(r[e].clone());const n=e.faces;for(let e=0,t=n.length;e<t;e++)this.faces.push(n[e].clone());for(let t=0,r=e.faceVertexUvs.length;t<r;t++){const r=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=r.length;e<n;e++){const n=r[e],i=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];i.push(t.clone())}this.faceVertexUvs[t].push(i)}}const i=e.morphTargets;for(let e=0,t=i.length;e<t;e++){const t={};if(t.name=i[e].name,void 0!==i[e].vertices){t.vertices=[];for(let r=0,n=i[e].vertices.length;r<n;r++)t.vertices.push(i[e].vertices[r].clone())}if(void 0!==i[e].normals){t.normals=[];for(let r=0,n=i[e].normals.length;r<n;r++)t.normals.push(i[e].normals[r].clone())}this.morphTargets.push(t)}const o=e.morphNormals;for(let e=0,t=o.length;e<t;e++){const t={};if(void 0!==o[e].vertexNormals){t.vertexNormals=[];for(let r=0,n=o[e].vertexNormals.length;r<n;r++){const n=o[e].vertexNormals[r],i={};i.a=n.a.clone(),i.b=n.b.clone(),i.c=n.c.clone(),t.vertexNormals.push(i)}}if(void 0!==o[e].faceNormals){t.faceNormals=[];for(let r=0,n=o[e].faceNormals.length;r<n;r++)t.faceNormals.push(o[e].faceNormals[r].clone())}this.morphNormals.push(t)}const a=e.skinWeights;for(let e=0,t=a.length;e<t;e++)this.skinWeights.push(a[e].clone());const s=e.skinIndices;for(let e=0,t=s.length;e<t;e++)this.skinIndices.push(s[e].clone());const l=e.lineDistances;for(let e=0,t=l.length;e<t;e++)this.lineDistances.push(l[e]);const c=e.boundingBox;null!==c&&(this.boundingBox=c.clone());const u=e.boundingSphere;return null!==u&&(this.boundingSphere=u.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class BoxGeometry extends Geometry{constructor(e,t,r,n,i,o){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:o},this.fromBufferGeometry(new BoxBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}class BoxBufferGeometry extends BufferGeometry{constructor(e,t,r,n,i,o){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:o};const a=this;e=e||1,t=t||1,r=r||1,n=Math.floor(n)||1,i=Math.floor(i)||1,o=Math.floor(o)||1;const s=[],l=[],c=[],u=[];let d=0,h=0;function p(e,t,r,n,i,o,p,m,f,g,_){const v=o/f,y=p/g,b=o/2,x=p/2,S=m/2,M=f+1,D=g+1;let w=0,T=0;const G=new Vector3;for(let o=0;o<D;o++){const a=o*y-x;for(let s=0;s<M;s++){const d=s*v-b;G[e]=d*n,G[t]=a*i,G[r]=S,l.push(G.x,G.y,G.z),G[e]=0,G[t]=0,G[r]=m>0?1:-1,c.push(G.x,G.y,G.z),u.push(s/f),u.push(1-o/g),w+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const r=d+t+M*e,n=d+t+M*(e+1),i=d+(t+1)+M*(e+1),o=d+(t+1)+M*e;s.push(r,n,o),s.push(n,i,o),T+=6}a.addGroup(h,T,_),h+=T,d+=w}p("z","y","x",-1,-1,r,t,e,o,i,0),p("z","y","x",1,-1,r,t,-e,o,i,1),p("x","z","y",1,1,e,r,t,n,o,2),p("x","z","y",1,-1,e,r,-t,n,o,3),p("x","y","z",1,-1,e,t,r,n,i,4),p("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(s),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(c,3)),this.setAttribute("uv",new Float32BufferAttribute(u,2))}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}function cloneUniforms(e){const t={};for(const r in e){t[r]={};for(const n in e[r]){const i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}}return t}function mergeUniforms(e){const t={};for(let r=0;r<e.length;r++){const n=cloneUniforms(e[r]);for(const e in n)t[e]=n[e]}return t}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",default_fragment="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function ShaderMaterial(e){Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function Camera(){Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}function PerspectiveCamera(e,t,r,n){Camera.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==r?r:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}ShaderMaterial.prototype=Object.create(Material.prototype),ShaderMaterial.prototype.constructor=ShaderMaterial,ShaderMaterial.prototype.isShaderMaterial=!0,ShaderMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this},ShaderMaterial.prototype.toJSON=function(e){const t=Material.prototype.toJSON.call(this,e);t.uniforms={};for(const r in this.uniforms){const n=this.uniforms[r].value;n&&n.isTexture?t.uniforms[r]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[r]={type:"m4",value:n.toArray()}:t.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const e in this.extensions)!0===this.extensions[e]&&(r[e]=!0);return Object.keys(r).length>0&&(t.extensions=r),t},Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new Vector3),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){Object3D.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*MathUtils.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(.5*MathUtils.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*MathUtils.RAD2DEG*Math.atan(Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,r,n,i,o){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let e=this.near,t=e*Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n,o=this.view;if(null!==this.view&&this.view.enabled){const e=o.fullWidth,a=o.fullHeight;i+=o.offsetX*n/e,t-=o.offsetY*r/a,n*=o.width/e,r*=o.height/a}const a=this.filmOffset;0!==a&&(i+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const fov=90,aspect=1;function CubeCamera(e,t,r){if(Object3D.call(this),this.type="CubeCamera",!0!==r.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=r;const n=new PerspectiveCamera(fov,aspect,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Vector3(1,0,0)),this.add(n);const i=new PerspectiveCamera(fov,aspect,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Vector3(-1,0,0)),this.add(i);const o=new PerspectiveCamera(fov,aspect,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new Vector3(0,1,0)),this.add(o);const a=new PerspectiveCamera(fov,aspect,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new Vector3(0,-1,0)),this.add(a);const s=new PerspectiveCamera(fov,aspect,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new Vector3(0,0,1)),this.add(s);const l=new PerspectiveCamera(fov,aspect,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new Vector3(0,0,-1)),this.add(l),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const c=e.xr.enabled,u=e.getRenderTarget();e.xr.enabled=!1;const d=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,n),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,o),e.setRenderTarget(r,3),e.render(t,a),e.setRenderTarget(r,4),e.render(t,s),r.texture.generateMipmaps=d,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(u),e.xr.enabled=c},this.clear=function(e,t,n,i){const o=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(r,o),e.clear(t,n,i);e.setRenderTarget(o)}}function WebGLCubeRenderTarget(e,t,r){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=r),WebGLRenderTarget.call(this,e,e,t)}function DataTexture(e,t,r,n,i,o,a,s,l,c,u,d){Texture.call(this,null,o,a,s,l,c,n,i,u,d),this.image={data:e||null,width:t||1,height:r||1},this.magFilter=void 0!==l?l:NearestFilter,this.minFilter=void 0!==c?c:NearestFilter,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}CubeCamera.prototype=Object.create(Object3D.prototype),CubeCamera.prototype.constructor=CubeCamera,WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype),WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget,WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0,WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;const r=new Scene,n={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","\tvWorldDirection = transformDirection( position, modelMatrix );","\t#include <begin_vertex>","\t#include <project_vertex>","}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#include <common>","void main() {","\tvec3 direction = normalize( vWorldDirection );","\tvec2 sampleUV = equirectUv( direction );","\tgl_FragColor = texture2D( tEquirect, sampleUV );","}"].join("\n")},i=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:BackSide,blending:NoBlending});i.uniforms.tEquirect.value=t;const o=new Mesh(new BoxBufferGeometry(5,5,5),i);r.add(o);return new CubeCamera(1,10,this).update(e,r),o.geometry.dispose(),o.material.dispose(),this},DataTexture.prototype=Object.create(Texture.prototype),DataTexture.prototype.constructor=DataTexture,DataTexture.prototype.isDataTexture=!0;const _sphere$1=new Sphere,_vector$5=new Vector3;function Frustum(e,t,r,n,i,o){this.planes=[void 0!==e?e:new Plane,void 0!==t?t:new Plane,void 0!==r?r:new Plane,void 0!==n?n:new Plane,void 0!==i?i:new Plane,void 0!==o?o:new Plane]}Object.assign(Frustum.prototype,{set:function(e,t,r,n,i,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(r),a[3].copy(n),a[4].copy(i),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){const t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this},setFromProjectionMatrix:function(e){const t=this.planes,r=e.elements,n=r[0],i=r[1],o=r[2],a=r[3],s=r[4],l=r[5],c=r[6],u=r[7],d=r[8],h=r[9],p=r[10],m=r[11],f=r[12],g=r[13],_=r[14],v=r[15];return t[0].setComponents(a-n,u-s,m-d,v-f).normalize(),t[1].setComponents(a+n,u+s,m+d,v+f).normalize(),t[2].setComponents(a+i,u+l,m+h,v+g).normalize(),t[3].setComponents(a-i,u-l,m-h,v-g).normalize(),t[4].setComponents(a-o,u-c,m-p,v-_).normalize(),t[5].setComponents(a+o,u+c,m+p,v+_).normalize(),this},intersectsObject:function(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),_sphere$1.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)},intersectsSprite:function(e){return _sphere$1.center.set(0,0,0),_sphere$1.radius=.7071067811865476,_sphere$1.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)},intersectsSphere:function(e){const t=this.planes,r=e.center,n=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(r)<n)return!1}return!0},intersectsBox:function(e){const t=this.planes;for(let r=0;r<6;r++){const n=t[r];if(_vector$5.x=n.normal.x>0?e.max.x:e.min.x,_vector$5.y=n.normal.y>0?e.max.y:e.min.y,_vector$5.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(_vector$5)<0)return!1}return!0},containsPoint:function(e){const t=this.planes;for(let r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}});const UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(15658734)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}}};function WebGLAnimation(){let e=null,t=!1,r=null,n=null;function i(t,o){r(t,o),n=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==r&&(n=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){r=e},setContext:function(t){e=t}}}function WebGLAttributes(e,t){const r=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const r=n.get(t);r&&(e.deleteBuffer(r.buffer),n.delete(t))},update:function(t,i){t.isInterleavedBufferAttribute&&(t=t.data);const o=n.get(t);void 0===o?n.set(t,function(t,r){const n=t.array,i=t.usage,o=e.createBuffer();e.bindBuffer(r,o),e.bufferData(r,n,i),t.onUploadCallback();let a=5126;return n instanceof Float32Array?a=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?a=5123:n instanceof Int16Array?a=5122:n instanceof Uint32Array?a=5125:n instanceof Int32Array?a=5124:n instanceof Int8Array?a=5120:n instanceof Uint8Array&&(a=5121),{buffer:o,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}(t,i)):o.version<t.version&&(!function(t,n,i){const o=n.array,a=n.updateRange;e.bindBuffer(i,t),-1===a.count?e.bufferSubData(i,0,o):(r?e.bufferSubData(i,a.offset*o.BYTES_PER_ELEMENT,o,a.offset,a.count):e.bufferSubData(i,a.offset*o.BYTES_PER_ELEMENT,o.subarray(a.offset,a.offset+a.count)),a.count=-1)}(o.buffer,t,i),o.version=t.version)}}}function PlaneGeometry(e,t,r,n){Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n},this.fromBufferGeometry(new PlaneBufferGeometry(e,t,r,n)),this.mergeVertices()}function PlaneBufferGeometry(e,t,r,n){BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};const i=(e=e||1)/2,o=(t=t||1)/2,a=Math.floor(r)||1,s=Math.floor(n)||1,l=a+1,c=s+1,u=e/a,d=t/s,h=[],p=[],m=[],f=[];for(let e=0;e<c;e++){const t=e*d-o;for(let r=0;r<l;r++){const n=r*u-i;p.push(n,-t,0),m.push(0,0,1),f.push(r/a),f.push(1-e/s)}}for(let e=0;e<s;e++)for(let t=0;t<a;t++){const r=t+l*e,n=t+l*(e+1),i=t+1+l*(e+1),o=t+1+l*e;h.push(r,n,o),h.push(n,i,o)}this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}PlaneGeometry.prototype=Object.create(Geometry.prototype),PlaneGeometry.prototype.constructor=PlaneGeometry,PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry;var alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {\n      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {\n      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {\n      uv = vec2(direction.x, direction.y) / abs(direction.z);    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",defaultnormal_vertex="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_vertex="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex="#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",envmap_physical_pars_fragment="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV = equirectUv( reflectVec );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",lights_toon_fragment="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",uv_pars_fragment="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};function WebGLBackground(e,t,r,n){const i=new Color(0);let o,a,s=0,l=null,c=0,u=null;function d(e,r){t.buffers.color.setClear(e.r,e.g,e.b,r,n)}return{getClearColor:function(){return i},setClearColor:function(e,t){i.set(e),s=void 0!==t?t:1,d(i,s)},getClearAlpha:function(){return s},setClearAlpha:function(e){s=e,d(i,s)},render:function(t,n,h,p){let m=!0===n.isScene?n.background:null;const f=e.xr,g=f.getSession&&f.getSession();if(g&&"additive"===g.environmentBlendMode&&(m=null),null===m?d(i,s):m&&m.isColor&&(d(m,1),p=!0),(e.autoClear||p)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===CubeUVReflectionMapping)){void 0===a&&(a=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(a));const n=m.isWebGLCubeRenderTarget?m.texture:m;a.material.uniforms.envMap.value=n,a.material.uniforms.flipEnvMap.value=n.isCubeTexture?-1:1,l===m&&c===n.version&&u===e.toneMapping||(a.material.needsUpdate=!0,l=m,c=n.version,u=e.toneMapping),t.unshift(a,a.geometry,a.material,0,0,null)}else m&&m.isTexture&&(void 0===o&&(o=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),l===m&&c===m.version&&u===e.toneMapping||(o.material.needsUpdate=!0,l=m,c=m.version,u=e.toneMapping),t.unshift(o,o.geometry,o.material,0,0,null))}}}function WebGLBindingStates(e,t,r,n){const i=e.getParameter(34921),o=n.isWebGL2?null:t.get("OES_vertex_array_object"),a=n.isWebGL2||null!==o,s={},l=h(null);let c=l;function u(t){return n.isWebGL2?e.bindVertexArray(t):o.bindVertexArrayOES(t)}function d(t){return n.isWebGL2?e.deleteVertexArray(t):o.deleteVertexArrayOES(t)}function h(e){const t=[],r=[],n=[];for(let e=0;e<i;e++)t[e]=0,r[e]=0,n[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:n,object:e,attributes:{}}}function p(){const e=c.newAttributes;for(let t=0,r=e.length;t<r;t++)e[t]=0}function m(e){f(e,0)}function f(r,i){const o=c.newAttributes,a=c.enabledAttributes,s=c.attributeDivisors;if(o[r]=1,0===a[r]&&(e.enableVertexAttribArray(r),a[r]=1),s[r]!==i){(n.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](r,i),s[r]=i}}function g(){const t=c.newAttributes,r=c.enabledAttributes;for(let n=0,i=r.length;n<i;n++)r[n]!==t[n]&&(e.disableVertexAttribArray(n),r[n]=0)}function _(t,r,i,o,a,s){!0!==n.isWebGL2||5124!==i&&5125!==i?e.vertexAttribPointer(t,r,i,o,a,s):e.vertexAttribIPointer(t,r,i,o,a,s)}function v(){y(),c!==l&&(c=l,u(c.object))}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,d,v,y){let b=!1;if(a){const t=function(t,r,i){const a=!0===i.wireframe;let l=s[t.id];void 0===l&&(l={},s[t.id]=l);let c=l[r.id];void 0===c&&(c={},l[r.id]=c);let u=c[a];void 0===u&&(u=h(n.isWebGL2?e.createVertexArray():o.createVertexArrayOES()),c[a]=u);return u}(v,d,l);c!==t&&(c=t,u(c.object)),b=function(e){const t=c.attributes,r=e.attributes;if(Object.keys(t).length!==Object.keys(r).length)return!0;for(const e in r){const n=t[e],i=r[e];if(n.attribute!==i)return!0;if(n.data!==i.data)return!0}return!1}(v),b&&function(e){const t={},r=e.attributes;for(const e in r){const n=r[e],i={};i.attribute=n,n.data&&(i.data=n.data),t[e]=i}c.attributes=t}(v)}else{const e=!0===l.wireframe;c.geometry===v.id&&c.program===d.id&&c.wireframe===e||(c.geometry=v.id,c.program=d.id,c.wireframe=e,b=!0)}!0===i.isInstancedMesh&&(b=!0),null!==y&&r.update(y,34963),b&&(!function(i,o,a,s){if(!1===n.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const l=s.attributes,c=a.getAttributes(),u=o.defaultAttributeValues;for(const t in c){const n=c[t];if(n>=0){const o=l[t];if(void 0!==o){const t=o.normalized,i=o.itemSize,a=r.get(o);if(void 0===a)continue;const l=a.buffer,c=a.type,u=a.bytesPerElement;if(o.isInterleavedBufferAttribute){const r=o.data,a=r.stride,d=o.offset;r&&r.isInstancedInterleavedBuffer?(f(n,r.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=r.meshPerAttribute*r.count)):m(n),e.bindBuffer(34962,l),_(n,i,c,t,a*u,d*u)}else o.isInstancedBufferAttribute?(f(n,o.meshPerAttribute),void 0===s._maxInstanceCount&&(s._maxInstanceCount=o.meshPerAttribute*o.count)):m(n),e.bindBuffer(34962,l),_(n,i,c,t,0,0)}else if("instanceMatrix"===t){const t=r.get(i.instanceMatrix);if(void 0===t)continue;const o=t.buffer,a=t.type;f(n+0,1),f(n+1,1),f(n+2,1),f(n+3,1),e.bindBuffer(34962,o),e.vertexAttribPointer(n+0,4,a,!1,64,0),e.vertexAttribPointer(n+1,4,a,!1,64,16),e.vertexAttribPointer(n+2,4,a,!1,64,32),e.vertexAttribPointer(n+3,4,a,!1,64,48)}else if(void 0!==u){const r=u[t];if(void 0!==r)switch(r.length){case 2:e.vertexAttrib2fv(n,r);break;case 3:e.vertexAttrib3fv(n,r);break;case 4:e.vertexAttrib4fv(n,r);break;default:e.vertexAttrib1fv(n,r)}}}}g()}(i,l,d,v),null!==y&&e.bindBuffer(34963,r.get(y).buffer))},reset:v,resetDefaultState:y,dispose:function(){v();for(const e in s){const t=s[e];for(const e in t){const r=t[e];for(const e in r)d(r[e].object),delete r[e];delete t[e]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0===s[e.id])return;const t=s[e.id];for(const e in t){const r=t[e];for(const e in r)d(r[e].object),delete r[e];delete t[e]}delete s[e.id]},releaseStatesOfProgram:function(e){for(const t in s){const r=s[t];if(void 0===r[e.id])continue;const n=r[e.id];for(const e in n)d(n[e].object),delete n[e];delete r[e.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function WebGLBufferRenderer(e,t,r,n){const i=n.isWebGL2;let o;this.setMode=function(e){o=e},this.render=function(t,n){e.drawArrays(o,t,n),r.update(n,o)},this.renderInstances=function(n,a,s,l){if(0===l)return;let c,u;if(i)c=e,u="drawArraysInstanced";else if(c=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[u](o,a,s,l),r.update(s,o,l)}}function WebGLCapabilities(e,t,r){let n;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let a=void 0!==r.precision?r.precision:"highp";const s=i(a);s!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",s,"instead."),a=s);const l=!0===r.logarithmicDepthBuffer,c=e.getParameter(34930),u=e.getParameter(35660),d=e.getParameter(3379),h=e.getParameter(34076),p=e.getParameter(34921),m=e.getParameter(36347),f=e.getParameter(36348),g=e.getParameter(36349),_=u>0,v=o||!!t.get("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==n)return n;const r=t.get("EXT_texture_filter_anisotropic");return n=null!==r?e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,n},getMaxPrecision:i,precision:a,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:h,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:_,floatFragmentTextures:v,floatVertexTextures:_&&v,maxSamples:o?e.getParameter(36183):0}}function WebGLClipping(){const e=this;let t=null,r=0,n=!1,i=!1;const o=new Plane,a=new Matrix3,s={value:null,needsUpdate:!1};function l(){s.value!==t&&(s.value=t,s.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function c(t,r,n,i){let l=null!==t?t.length:0,c=null;if(0!==l){if(c=s.value,!0!==i||null===c){const e=n+4*l,i=r.matrixWorldInverse;a.getNormalMatrix(i),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,r=n;e!==l;++e,r+=4)o.copy(t[e]).applyMatrix4(i,a),o.normal.toArray(c,r),c[r+3]=o.constant}s.value=c,s.needsUpdate=!0}return e.numPlanes=l,e.numIntersection=0,c}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(e,i,o){const a=0!==e.length||i||0!==r||n;return n=i,t=c(e,o,0),r=e.length,a},this.beginShadows=function(){i=!0,c(null)},this.endShadows=function(){i=!1,l()},this.setState=function(e,o,a,u,d,h){if(!n||null===e||0===e.length||i&&!a)i?c(null):l();else{const n=i?0:r,a=4*n;let l=d.clippingState||null;s.value=l,l=c(e,u,a,h);for(let e=0;e!==a;++e)l[e]=t[e];d.clippingState=l,this.numIntersection=o?this.numPlanes:0,this.numPlanes+=n}}}function WebGLExtensions(e){const t={};return{get:function(r){if(void 0!==t[r])return t[r];let n;switch(r){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(r)}return null===n&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),t[r]=n,n}}}function WebGLGeometries(e,t,r,n){const i=new WeakMap,o=new WeakMap;function a(e){const s=e.target,l=i.get(s);null!==l.index&&t.remove(l.index);for(const e in l.attributes)t.remove(l.attributes[e]);s.removeEventListener("dispose",a),i.delete(s);const c=o.get(l);c&&(t.remove(c),o.delete(l)),n.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,r.memory.geometries--}function s(e){const r=[],n=e.index,i=e.attributes.position;let a=0;if(null!==n){const e=n.array;a=n.version;for(let t=0,n=e.length;t<n;t+=3){const n=e[t+0],i=e[t+1],o=e[t+2];r.push(n,i,i,o,o,n)}}else{const e=i.array;a=i.version;for(let t=0,n=e.length/3-1;t<n;t+=3){const e=t+0,n=t+1,i=t+2;r.push(e,n,n,i,i,e)}}const s=new(arrayMax(r)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(r,1);s.version=a;const l=o.get(e);l&&t.remove(l),o.set(e,s)}return{get:function(e,t){let n=i.get(t);return n||(t.addEventListener("dispose",a),t.isBufferGeometry?n=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new BufferGeometry).setFromObject(e)),n=t._bufferGeometry),i.set(t,n),r.memory.geometries++,n)},update:function(e){const r=e.attributes;for(const e in r)t.update(r[e],34962);const n=e.morphAttributes;for(const e in n){const r=n[e];for(let e=0,n=r.length;e<n;e++)t.update(r[e],34962)}},getWireframeAttribute:function(e){const t=o.get(e);if(t){const r=e.index;null!==r&&t.version<r.version&&s(e)}else s(e);return o.get(e)}}}function WebGLIndexedBufferRenderer(e,t,r,n){const i=n.isWebGL2;let o,a,s;this.setMode=function(e){o=e},this.setIndex=function(e){a=e.type,s=e.bytesPerElement},this.render=function(t,n){e.drawElements(o,n,a,t*s),r.update(n,o)},this.renderInstances=function(n,l,c,u){if(0===u)return;let d,h;if(i)d=e,h="drawElementsInstanced";else if(d=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===d)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[h](o,c,a,l*s,u),r.update(c,o,u)}}function WebGLInfo(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,r,n){switch(n=n||1,t.calls++,r){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}}}function numericalSort(e,t){return e[0]-t[0]}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function WebGLMorphtargets(e){const t={},r=new Float32Array(8),n=[];for(let e=0;e<8;e++)n[e]=[e,0];return{update:function(i,o,a,s){const l=i.morphTargetInfluences,c=void 0===l?0:l.length;let u=t[o.id];if(void 0===u){u=[];for(let e=0;e<c;e++)u[e]=[e,0];t[o.id]=u}for(let e=0;e<c;e++){const t=u[e];t[0]=e,t[1]=l[e]}u.sort(absNumericalSort);for(let e=0;e<8;e++)e<c&&u[e][1]?(n[e][0]=u[e][0],n[e][1]=u[e][1]):(n[e][0]=Number.MAX_SAFE_INTEGER,n[e][1]=0);n.sort(numericalSort);const d=a.morphTargets&&o.morphAttributes.position,h=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=n[e],i=t[0],a=t[1];i!==Number.MAX_SAFE_INTEGER&&a?(d&&o.getAttribute("morphTarget"+e)!==d[i]&&o.setAttribute("morphTarget"+e,d[i]),h&&o.getAttribute("morphNormal"+e)!==h[i]&&o.setAttribute("morphNormal"+e,h[i]),r[e]=a,p+=a):(d&&void 0!==o.getAttribute("morphTarget"+e)&&o.deleteAttribute("morphTarget"+e),h&&void 0!==o.getAttribute("morphNormal"+e)&&o.deleteAttribute("morphNormal"+e),r[e]=0)}const m=o.morphTargetsRelative?1:1-p;s.getUniforms().setValue(e,"morphTargetBaseInfluence",m),s.getUniforms().setValue(e,"morphTargetInfluences",r)}}}function WebGLObjects(e,t,r,n){let i=new WeakMap;return{update:function(e){const o=n.render.frame,a=e.geometry,s=t.get(e,a);return i.get(s)!==o&&(a.isGeometry&&s.updateFromObject(e),t.update(s),i.set(s,o)),e.isInstancedMesh&&r.update(e.instanceMatrix,34962),s},dispose:function(){i=new WeakMap}}}function CubeTexture(e,t,r,n,i,o,a,s,l,c){e=void 0!==e?e:[],t=void 0!==t?t:CubeReflectionMapping,a=void 0!==a?a:RGBFormat,Texture.call(this,e,t,r,n,i,o,a,s,l,c),this.flipY=!1}function DataTexture2DArray(e,t,r,n){Texture.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:n||1},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function DataTexture3D(e,t,r,n){Texture.call(this,null),this.image={data:e||null,width:t||1,height:r||1,depth:n||1},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0)},transparency:{value:0}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},CubeTexture.prototype=Object.create(Texture.prototype),CubeTexture.prototype.constructor=CubeTexture,CubeTexture.prototype.isCubeTexture=!0,Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),DataTexture2DArray.prototype=Object.create(Texture.prototype),DataTexture2DArray.prototype.constructor=DataTexture2DArray,DataTexture2DArray.prototype.isDataTexture2DArray=!0,DataTexture3D.prototype=Object.create(Texture.prototype),DataTexture3D.prototype.constructor=DataTexture3D,DataTexture3D.prototype.isDataTexture3D=!0;const emptyTexture=new Texture,emptyTexture2dArray=new DataTexture2DArray,emptyTexture3d=new DataTexture3D,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(e,t,r){const n=e[0];if(n<=0||n>0)return e;let i=t*r,o=arrayCacheF32[i];if(void 0===o&&(o=new Float32Array(i),arrayCacheF32[i]=o),0!==t){n.toArray(o,0);for(let n=1,i=0;n!==t;++n)i+=r,e[n].toArray(o,i)}return o}function arraysEqual(e,t){if(e.length!==t.length)return!1;for(let r=0,n=e.length;r<n;r++)if(e[r]!==t[r])return!1;return!0}function copyArray(e,t){for(let r=0,n=t.length;r<n;r++)e[r]=t[r]}function allocTexUnits(e,t){let r=arrayCacheI32[t];void 0===r&&(r=new Int32Array(t),arrayCacheI32[t]=r);for(let n=0;n!==t;++n)r[n]=e.allocateTextureUnit();return r}function setValueV1f(e,t){const r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function setValueV2f(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y);else{if(arraysEqual(r,t))return;e.uniform2fv(this.addr,t),copyArray(r,t)}}function setValueV3f(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z);else if(void 0!==t.r)r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b);else{if(arraysEqual(r,t))return;e.uniform3fv(this.addr,t),copyArray(r,t)}}function setValueV4f(e,t){const r=this.cache;if(void 0!==t.x)r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w);else{if(arraysEqual(r,t))return;e.uniform4fv(this.addr,t),copyArray(r,t)}}function setValueM2(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(r,t))return;e.uniformMatrix2fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,n))return;mat2array.set(n),e.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(r,n)}}function setValueM3(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(r,t))return;e.uniformMatrix3fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,n))return;mat3array.set(n),e.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(r,n)}}function setValueM4(e,t){const r=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(r,t))return;e.uniformMatrix4fv(this.addr,!1,t),copyArray(r,t)}else{if(arraysEqual(r,n))return;mat4array.set(n),e.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(r,n)}}function setValueT1(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTexture2D(t||emptyTexture,i)}function setValueT2DArray1(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(t||emptyTexture2dArray,i)}function setValueT3D1(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(t||emptyTexture3d,i)}function setValueT6(e,t,r){const n=this.cache,i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.safeSetTextureCube(t||emptyCubeTexture,i)}function setValueV1i(e,t){const r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function setValueV2i(e,t){const r=this.cache;arraysEqual(r,t)||(e.uniform2iv(this.addr,t),copyArray(r,t))}function setValueV3i(e,t){const r=this.cache;arraysEqual(r,t)||(e.uniform3iv(this.addr,t),copyArray(r,t))}function setValueV4i(e,t){const r=this.cache;arraysEqual(r,t)||(e.uniform4iv(this.addr,t),copyArray(r,t))}function setValueV1ui(e,t){const r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function getSingularSetter(e){switch(e){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(e,t){e.uniform1fv(this.addr,t)}function setValueV1iArray(e,t){e.uniform1iv(this.addr,t)}function setValueV2iArray(e,t){e.uniform2iv(this.addr,t)}function setValueV3iArray(e,t){e.uniform3iv(this.addr,t)}function setValueV4iArray(e,t){e.uniform4iv(this.addr,t)}function setValueV2fArray(e,t){const r=flatten(t,this.size,2);e.uniform2fv(this.addr,r)}function setValueV3fArray(e,t){const r=flatten(t,this.size,3);e.uniform3fv(this.addr,r)}function setValueV4fArray(e,t){const r=flatten(t,this.size,4);e.uniform4fv(this.addr,r)}function setValueM2Array(e,t){const r=flatten(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,r)}function setValueM3Array(e,t){const r=flatten(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,r)}function setValueM4Array(e,t){const r=flatten(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,r)}function setValueT1Array(e,t,r){const n=t.length,i=allocTexUnits(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.safeSetTexture2D(t[e]||emptyTexture,i[e])}function setValueT6Array(e,t,r){const n=t.length,i=allocTexUnits(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.safeSetTextureCube(t[e]||emptyCubeTexture,i[e])}function getPureArraySetter(e){switch(e){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35680:case 36300:case 36308:case 36293:return setValueT6Array}}function SingleUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=getSingularSetter(t.type)}function PureArrayUniform(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}function StructuredUniform(e){this.id=e,this.seq=[],this.map={}}PureArrayUniform.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),copyArray(t,e)},StructuredUniform.prototype.setValue=function(e,t,r){const n=this.seq;for(let i=0,o=n.length;i!==o;++i){const o=n[i];o.setValue(e,t[o.id],r)}};const RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,t,r){const n=e.name,i=n.length;for(RePathPart.lastIndex=0;;){const o=RePathPart.exec(n),a=RePathPart.lastIndex;let s=o[1],l="]"===o[2],c=o[3];if(l&&(s|=0),void 0===c||"["===c&&a+2===i){addUniform(r,void 0===c?new SingleUniform(s,e,t):new PureArrayUniform(s,e,t));break}{let e=r.map[s];void 0===e&&(e=new StructuredUniform(s),addUniform(r,e)),r=e}}}function WebGLUniforms(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,35718);for(let n=0;n<r;++n){const r=e.getActiveUniform(t,n);parseUniform(r,e.getUniformLocation(t,r.name),this)}}function WebGLShader(e,t,r){const n=e.createShader(t);return e.shaderSource(n,r),e.compileShader(n),n}WebGLUniforms.prototype.setValue=function(e,t,r,n){const i=this.map[t];void 0!==i&&i.setValue(e,r,n)},WebGLUniforms.prototype.setOptional=function(e,t,r){const n=t[r];void 0!==n&&this.setValue(e,r,n)},WebGLUniforms.upload=function(e,t,r,n){for(let i=0,o=t.length;i!==o;++i){const o=t[i],a=r[o.id];!1!==a.needsUpdate&&o.setValue(e,a.value,n)}},WebGLUniforms.seqWithValue=function(e,t){const r=[];for(let n=0,i=e.length;n!==i;++n){const i=e[n];i.id in t&&r.push(i)}return r};let programIdCount=0;function addLineNumbers(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}function getEncodingComponents(e){switch(e){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];case RGBEEncoding:return["RGBE","( value )"];case RGBM7Encoding:return["RGBM","( value, 7.0 )"];case RGBM16Encoding:return["RGBM","( value, 16.0 )"];case RGBDEncoding:return["RGBD","( value, 256.0 )"];case GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case LogLuvEncoding:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function getShaderErrors(e,t,r){const n=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(n&&""===i)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+r+"\n"+i+addLineNumbers(e.getShaderSource(t))}function getTexelDecodingFunction(e,t){const r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function getTexelEncodingFunction(e,t){const r=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function getToneMappingFunction(e,t){let r;switch(t){case LinearToneMapping:r="Linear";break;case ReinhardToneMapping:r="Reinhard";break;case CineonToneMapping:r="OptimizedCineon";break;case ACESFilmicToneMapping:r="ACESFilmic";break;case CustomToneMapping:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}function generateExtensions(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}function generateDefines(e){const t=[];for(const r in e){const n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}function fetchAttributeLocations(e,t){const r={},n=e.getProgramParameter(t,35721);for(let i=0;i<n;i++){const n=e.getActiveAttrib(t,i).name;r[n]=e.getAttribLocation(t,n)}return r}function filterEmptyLine(e){return""!==e}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(e){return e.replace(includePattern,includeReplacer)}function includeReplacer(e,t){const r=ShaderChunk[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return resolveIncludes(r)}const deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function unrollLoops(e){return e.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer)}function deprecatedLoopReplacer(e,t,r,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),loopReplacer(e,t,r,n)}function loopReplacer(e,t,r,n){let i="";for(let e=parseInt(t);e<parseInt(r);e++)i+=n.replace(/\[ i \]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function generatePrecision(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function generateShadowMapTypeDefine(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===PCFShadowMap?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===PCFSoftShadowMap?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===VSMShadowMap&&(t="SHADOWMAP_TYPE_VSM"),t}function generateEnvMapTypeDefine(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:t="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:t="ENVMAP_TYPE_CUBE_UV";break;case EquirectangularReflectionMapping:case EquirectangularRefractionMapping:t="ENVMAP_TYPE_EQUIREC"}return t}function generateEnvMapModeDefine(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case CubeRefractionMapping:case EquirectangularRefractionMapping:t="ENVMAP_MODE_REFRACTION"}return t}function generateEnvMapBlendingDefine(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case MultiplyOperation:t="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:t="ENVMAP_BLENDING_MIX";break;case AddOperation:t="ENVMAP_BLENDING_ADD"}return t}function WebGLProgram(e,t,r,n){const i=e.getContext(),o=r.defines;let a=r.vertexShader,s=r.fragmentShader;const l=generateShadowMapTypeDefine(r),c=generateEnvMapTypeDefine(r),u=generateEnvMapModeDefine(r),d=generateEnvMapBlendingDefine(r),h=e.gammaFactor>0?e.gammaFactor:1,p=r.isWebGL2?"":generateExtensions(r),m=generateDefines(o),f=i.createProgram();let g,_;if(r.isRawShaderMaterial?(g=[m].filter(filterEmptyLine).join("\n"),g.length>0&&(g+="\n"),_=[p,m].filter(filterEmptyLine).join("\n"),_.length>0&&(_+="\n")):(g=[generatePrecision(r),"#define SHADER_NAME "+r.shaderName,m,r.instancing?"#define USE_INSTANCING":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+h,"#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+u:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),_=[p,generatePrecision(r),"#define SHADER_NAME "+r.shaderName,m,r.alphaTest?"#define ALPHATEST "+r.alphaTest+(r.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+h,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+c:"",r.envMap?"#define "+u:"",r.envMap?"#define "+d:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.sheen?"#define USE_SHEEN":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+l:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",r.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",r.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",r.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",ShaderChunk.encodings_pars_fragment,r.map?getTexelDecodingFunction("mapTexelToLinear",r.mapEncoding):"",r.matcap?getTexelDecodingFunction("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?getTexelDecodingFunction("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?getTexelDecodingFunction("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.lightMap?getTexelDecodingFunction("lightMapTexelToLinear",r.lightMapEncoding):"",getTexelEncodingFunction("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),a=resolveIncludes(a),a=replaceLightNums(a,r),a=replaceClippingPlaneNums(a,r),s=resolveIncludes(s),s=replaceLightNums(s,r),s=replaceClippingPlaneNums(s,r),a=unrollLoops(a),s=unrollLoops(s),r.isWebGL2&&!r.isRawShaderMaterial){let e=!1;const t=/^\s*#version\s+300\s+es\s*\n/;r.isShaderMaterial&&null!==a.match(t)&&null!==s.match(t)&&(e=!0,a=a.replace(t,""),s=s.replace(t,"")),g=["#version 300 es\n","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,_=["#version 300 es\n","#define varying in",e?"":"out highp vec4 pc_fragColor;",e?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+_}const v=_+s,y=WebGLShader(i,35633,g+a),b=WebGLShader(i,35632,v);if(i.attachShader(f,y),i.attachShader(f,b),void 0!==r.index0AttributeName?i.bindAttribLocation(f,0,r.index0AttributeName):!0===r.morphTargets&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),e.debug.checkShaderErrors){const e=i.getProgramInfoLog(f).trim(),t=i.getShaderInfoLog(y).trim(),r=i.getShaderInfoLog(b).trim();let n=!0,o=!0;if(!1===i.getProgramParameter(f,35714)){n=!1;const t=getShaderErrors(i,y,"vertex"),r=getShaderErrors(i,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(f,35715),"gl.getProgramInfoLog",e,t,r)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==r||(o=!1);o&&(this.diagnostics={runnable:n,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:r,prefix:_}})}let x,S;return i.deleteShader(y),i.deleteShader(b),this.getUniforms=function(){return void 0===x&&(x=new WebGLUniforms(i,f)),x},this.getAttributes=function(){return void 0===S&&(S=fetchAttributeLocations(i,f)),S},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=r.shaderName,this.id=programIdCount++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=y,this.fragmentShader=b,this}function WebGLPrograms(e,t,r,n){const i=[],o=r.isWebGL2,a=r.logarithmicDepthBuffer,s=r.floatVertexTextures,l=r.maxVertexUniforms,c=r.vertexTextures;let u=r.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},h=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function p(e){let t;return e?e.isTexture?t=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=LinearEncoding,t}return{getParameters:function(n,i,h,m,f,g,_){const v=m.fog,y=n.isMeshStandardMaterial?m.environment:null,b=n.envMap||y,x=d[n.type],S=_.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(s)return 1024;{const e=l,r=Math.floor((e-20)/4),n=Math.min(r,t.length);return n<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+n+"."),0):n}}(_):0;null!==n.precision&&(u=r.getMaxPrecision(n.precision),u!==n.precision&&console.warn("THREE.WebGLProgram.getParameters:",n.precision,"not supported, using",u,"instead."));const M=function(e,t){let r;if(t){const n=ShaderLib[t];r={name:e.name||e.type,uniforms:UniformsUtils.clone(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}}else r={name:e.name||e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};return r}(n,x);n.onBeforeCompile(M,e);const D=e.getRenderTarget();return{isWebGL2:o,shaderID:x,shaderName:M.name,uniforms:M.uniforms,vertexShader:M.vertexShader,fragmentShader:M.fragmentShader,defines:n.defines,isRawShaderMaterial:n.isRawShaderMaterial,isShaderMaterial:n.isShaderMaterial,precision:u,instancing:!0===_.isInstancedMesh,supportsVertexTextures:c,outputEncoding:null!==D?p(D.texture):e.outputEncoding,map:!!n.map,mapEncoding:p(n.map),matcap:!!n.matcap,matcapEncoding:p(n.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:p(b),envMapCubeUV:!!b&&(b.mapping===CubeUVReflectionMapping||b.mapping===CubeUVRefractionMapping),lightMap:!!n.lightMap,lightMapEncoding:p(n.lightMap),aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,emissiveMapEncoding:p(n.emissiveMap),bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,objectSpaceNormalMap:n.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:n.normalMapType===TangentSpaceNormalMap,clearcoatMap:!!n.clearcoatMap,clearcoatRoughnessMap:!!n.clearcoatRoughnessMap,clearcoatNormalMap:!!n.clearcoatNormalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,gradientMap:!!n.gradientMap,sheen:!!n.sheen,combine:n.combine,vertexTangents:n.normalMap&&n.vertexTangents,vertexColors:n.vertexColors,vertexUvs:!!(n.map||n.bumpMap||n.normalMap||n.specularMap||n.alphaMap||n.emissiveMap||n.roughnessMap||n.metalnessMap||n.clearcoatMap||n.clearcoatRoughnessMap||n.clearcoatNormalMap||n.displacementMap),uvsVertexOnly:!(n.map||n.bumpMap||n.normalMap||n.specularMap||n.alphaMap||n.emissiveMap||n.roughnessMap||n.metalnessMap||n.clearcoatNormalMap||!n.displacementMap),fog:!!v,useFog:n.fog,fogExp2:v&&v.isFogExp2,flatShading:n.flatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:a,skinning:n.skinning&&S>0,maxBones:S,useVertexTexture:s,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numRectAreaLights:i.rectArea.length,numHemiLights:i.hemi.length,numDirLightShadows:i.directionalShadowMap.length,numPointLightShadows:i.pointShadowMap.length,numSpotLightShadows:i.spotShadowMap.length,numClippingPlanes:f,numClipIntersection:g,dithering:n.dithering,shadowMapEnabled:e.shadowMap.enabled&&h.length>0,shadowMapType:e.shadowMap.type,toneMapping:n.toneMapped?e.toneMapping:NoToneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:n.premultipliedAlpha,alphaTest:n.alphaTest,doubleSided:n.side===DoubleSide,flipSided:n.side===BackSide,depthPacking:void 0!==n.depthPacking&&n.depthPacking,index0AttributeName:n.index0AttributeName,extensionDerivatives:n.extensions&&n.extensions.derivatives,extensionFragDepth:n.extensions&&n.extensions.fragDepth,extensionDrawBuffers:n.extensions&&n.extensions.drawBuffers,extensionShaderTextureLOD:n.extensions&&n.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||null!==t.get("EXT_frag_depth"),rendererExtensionDrawBuffers:o||null!==t.get("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||null!==t.get("EXT_shader_texture_lod"),customProgramCacheKey:n.customProgramCacheKey()}},getProgramCacheKey:function(t){const r=[];if(t.shaderID?r.push(t.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)r.push(e),r.push(t.defines[e]);if(void 0===t.isRawShaderMaterial){for(let e=0;e<h.length;e++)r.push(t[h[e]]);r.push(e.outputEncoding),r.push(e.gammaFactor)}return r.push(t.customProgramCacheKey),r.join()},acquireProgram:function(t,r){let o;for(let e=0,t=i.length;e<t;e++){const t=i[e];if(t.cacheKey===r){o=t,++o.usedTimes;break}}return void 0===o&&(o=new WebGLProgram(e,r,t,n),i.push(o)),o},releaseProgram:function(e){if(0==--e.usedTimes){const t=i.indexOf(e);i[t]=i[i.length-1],i.pop(),e.destroy()}},programs:i}}function WebGLProperties(){let e=new WeakMap;return{get:function(t){let r=e.get(t);return void 0===r&&(r={},e.set(t,r)),r},remove:function(t){e.delete(t)},update:function(t,r,n){e.get(t)[r]=n},dispose:function(){e=new WeakMap}}}function painterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function reversePainterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function WebGLRenderList(){const e=[];let t=0;const r=[],n=[],i={id:-1};function o(r,n,o,a,s,l){let c=e[t];return void 0===c?(c={id:r.id,object:r,geometry:n,material:o,program:o.program||i,groupOrder:a,renderOrder:r.renderOrder,z:s,group:l},e[t]=c):(c.id=r.id,c.object=r,c.geometry=n,c.material=o,c.program=o.program||i,c.groupOrder=a,c.renderOrder=r.renderOrder,c.z=s,c.group=l),t++,c}return{opaque:r,transparent:n,init:function(){t=0,r.length=0,n.length=0},push:function(e,t,i,a,s,l){const c=o(e,t,i,a,s,l);(!0===i.transparent?n:r).push(c)},unshift:function(e,t,i,a,s,l){const c=o(e,t,i,a,s,l);(!0===i.transparent?n:r).unshift(c)},finish:function(){for(let r=t,n=e.length;r<n;r++){const t=e[r];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.program=null,t.group=null}},sort:function(e,t){r.length>1&&r.sort(e||painterSortStable),n.length>1&&n.sort(t||reversePainterSortStable)}}}function WebGLRenderLists(){let e=new WeakMap;function t(r){const n=r.target;n.removeEventListener("dispose",t),e.delete(n)}return{get:function(r,n){const i=e.get(r);let o;return void 0===i?(o=new WebGLRenderList,e.set(r,new WeakMap),e.get(r).set(n,o),r.addEventListener("dispose",t)):(o=i.get(n),void 0===o&&(o=new WebGLRenderList,i.set(n,o))),o},dispose:function(){e=new WeakMap}}}function UniformsCache(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":r={direction:new Vector3,color:new Color};break;case"SpotLight":r={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":r={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":r={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return e[t.id]=r,r}}}function ShadowUniformsCache(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let r;switch(t.type){case"DirectionalLight":case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=r,r}}}let nextVersion=0;function shadowCastingLightsFirst(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function WebGLLights(){const e=new UniformsCache,t=ShadowUniformsCache(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)r.probe.push(new Vector3);const n=new Vector3,i=new Matrix4,o=new Matrix4;return{setup:function(a,s,l){let c=0,u=0,d=0;for(let e=0;e<9;e++)r.probe[e].set(0,0,0);let h=0,p=0,m=0,f=0,g=0,_=0,v=0,y=0;const b=l.matrixWorldInverse;a.sort(shadowCastingLightsFirst);for(let s=0,l=a.length;s<l;s++){const l=a[s],x=l.color,S=l.intensity,M=l.distance,D=l.shadow&&l.shadow.map?l.shadow.map.texture:null;if(l.isAmbientLight)c+=x.r*S,u+=x.g*S,d+=x.b*S;else if(l.isLightProbe)for(let e=0;e<9;e++)r.probe[e].addScaledVector(l.sh.coefficients[e],S);else if(l.isDirectionalLight){const i=e.get(l);if(i.color.copy(l.color).multiplyScalar(l.intensity),i.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),i.direction.sub(n),i.direction.transformDirection(b),l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.directionalShadow[h]=n,r.directionalShadowMap[h]=D,r.directionalShadowMatrix[h]=l.shadow.matrix,_++}r.directional[h]=i,h++}else if(l.isSpotLight){const i=e.get(l);if(i.position.setFromMatrixPosition(l.matrixWorld),i.position.applyMatrix4(b),i.color.copy(x).multiplyScalar(S),i.distance=M,i.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),i.direction.sub(n),i.direction.transformDirection(b),i.coneCos=Math.cos(l.angle),i.penumbraCos=Math.cos(l.angle*(1-l.penumbra)),i.decay=l.decay,l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.spotShadow[m]=n,r.spotShadowMap[m]=D,r.spotShadowMatrix[m]=l.shadow.matrix,y++}r.spot[m]=i,m++}else if(l.isRectAreaLight){const t=e.get(l);t.color.copy(x).multiplyScalar(S),t.position.setFromMatrixPosition(l.matrixWorld),t.position.applyMatrix4(b),o.identity(),i.copy(l.matrixWorld),i.premultiply(b),o.extractRotation(i),t.halfWidth.set(.5*l.width,0,0),t.halfHeight.set(0,.5*l.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),r.rectArea[f]=t,f++}else if(l.isPointLight){const n=e.get(l);if(n.position.setFromMatrixPosition(l.matrixWorld),n.position.applyMatrix4(b),n.color.copy(l.color).multiplyScalar(l.intensity),n.distance=l.distance,n.decay=l.decay,l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,r.pointShadow[p]=n,r.pointShadowMap[p]=D,r.pointShadowMatrix[p]=l.shadow.matrix,v++}r.point[p]=n,p++}else if(l.isHemisphereLight){const t=e.get(l);t.direction.setFromMatrixPosition(l.matrixWorld),t.direction.transformDirection(b),t.direction.normalize(),t.skyColor.copy(l.color).multiplyScalar(S),t.groundColor.copy(l.groundColor).multiplyScalar(S),r.hemi[g]=t,g++}}r.ambient[0]=c,r.ambient[1]=u,r.ambient[2]=d;const x=r.hash;x.directionalLength===h&&x.pointLength===p&&x.spotLength===m&&x.rectAreaLength===f&&x.hemiLength===g&&x.numDirectionalShadows===_&&x.numPointShadows===v&&x.numSpotShadows===y||(r.directional.length=h,r.spot.length=m,r.rectArea.length=f,r.point.length=p,r.hemi.length=g,r.directionalShadow.length=_,r.directionalShadowMap.length=_,r.pointShadow.length=v,r.pointShadowMap.length=v,r.spotShadow.length=y,r.spotShadowMap.length=y,r.directionalShadowMatrix.length=_,r.pointShadowMatrix.length=v,r.spotShadowMatrix.length=y,x.directionalLength=h,x.pointLength=p,x.spotLength=m,x.rectAreaLength=f,x.hemiLength=g,x.numDirectionalShadows=_,x.numPointShadows=v,x.numSpotShadows=y,r.version=nextVersion++)},state:r}}function WebGLRenderState(){const e=new WebGLLights,t=[],r=[];return{init:function(){t.length=0,r.length=0},state:{lightsArray:t,shadowsArray:r,lights:e},setupLights:function(n){e.setup(t,r,n)},pushLight:function(e){t.push(e)},pushShadow:function(e){r.push(e)}}}function WebGLRenderStates(){let e=new WeakMap;function t(r){const n=r.target;n.removeEventListener("dispose",t),e.delete(n)}return{get:function(r,n){let i;return!1===e.has(r)?(i=new WebGLRenderState,e.set(r,new WeakMap),e.get(r).set(n,i),r.addEventListener("dispose",t)):!1===e.get(r).has(n)?(i=new WebGLRenderState,e.get(r).set(n,i)):i=e.get(r).get(n),i},dispose:function(){e=new WeakMap}}}function MeshDepthMaterial(e){Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function MeshDistanceMaterial(e){Material.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}MeshDepthMaterial.prototype=Object.create(Material.prototype),MeshDepthMaterial.prototype.constructor=MeshDepthMaterial,MeshDepthMaterial.prototype.isMeshDepthMaterial=!0,MeshDepthMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},MeshDistanceMaterial.prototype=Object.create(Material.prototype),MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial,MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0,MeshDistanceMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var vsm_frag="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",vsm_vert="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function WebGLShadowMap(e,t,r){let n=new Frustum;const i=new Vector2,o=new Vector2,a=new Vector4,s=[],l=[],c={},u={0:BackSide,1:FrontSide,2:DoubleSide},d=new ShaderMaterial({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vsm_vert,fragmentShader:vsm_frag}),h=d.clone();h.defines.HORIZONAL_PASS=1;const p=new BufferGeometry;p.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Mesh(p,d),f=this;function g(r,n){const i=t.update(m);d.uniforms.shadow_pass.value=r.map.texture,d.uniforms.resolution.value=r.mapSize,d.uniforms.radius.value=r.radius,e.setRenderTarget(r.mapPass),e.clear(),e.renderBufferDirect(n,null,i,d,m,null),h.uniforms.shadow_pass.value=r.mapPass.texture,h.uniforms.resolution.value=r.mapSize,h.uniforms.radius.value=r.radius,e.setRenderTarget(r.map),e.clear(),e.renderBufferDirect(n,null,i,h,m,null)}function _(e,t,r){const n=e<<0|t<<1|r<<2;let i=s[n];return void 0===i&&(i=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:e,skinning:t}),s[n]=i),i}function v(e,t,r){const n=e<<0|t<<1|r<<2;let i=l[n];return void 0===i&&(i=new MeshDistanceMaterial({morphTargets:e,skinning:t}),l[n]=i),i}function y(t,r,n,i,o,a,s){let l=null,d=_,h=t.customDepthMaterial;if(!0===i.isPointLight&&(d=v,h=t.customDistanceMaterial),void 0===h){let e=!1;!0===n.morphTargets&&(e=r.morphAttributes&&r.morphAttributes.position&&r.morphAttributes.position.length>0);let i=!1;!0===t.isSkinnedMesh&&(!0===n.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));l=d(e,i,!0===t.isInstancedMesh)}else l=h;if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const e=l.uuid,t=n.uuid;let r=c[e];void 0===r&&(r={},c[e]=r);let i=r[t];void 0===i&&(i=l.clone(),r[t]=i),l=i}return l.visible=n.visible,l.wireframe=n.wireframe,l.side=s===VSMShadowMap?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],l.clipShadows=n.clipShadows,l.clippingPlanes=n.clippingPlanes,l.clipIntersection=n.clipIntersection,l.wireframeLinewidth=n.wireframeLinewidth,l.linewidth=n.linewidth,!0===i.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(i.matrixWorld),l.nearDistance=o,l.farDistance=a),l}function b(r,i,o,a,s){if(!1===r.visible)return;if(r.layers.test(i.layers)&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&s===VSMShadowMap)&&(!r.frustumCulled||n.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,r.matrixWorld);const n=t.update(r),i=r.material;if(Array.isArray(i)){const t=n.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l],u=i[c.materialIndex];if(u&&u.visible){const t=y(r,n,u,a,o.near,o.far,s);e.renderBufferDirect(o,null,n,t,r,c)}}}else if(i.visible){const t=y(r,n,i,a,o.near,o.far,s);e.renderBufferDirect(o,null,n,t,r,null)}}const l=r.children;for(let e=0,t=l.length;e<t;e++)b(l[e],i,o,a,s)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap,this.render=function(t,s,l){if(!1===f.enabled)return;if(!1===f.autoUpdate&&!1===f.needsUpdate)return;if(0===t.length)return;const c=e.getRenderTarget(),u=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),h=e.state;h.setBlending(NoBlending),h.buffers.color.setClear(1,1,1,1),h.buffers.depth.setTest(!0),h.setScissorTest(!1);for(let c=0,u=t.length;c<u;c++){const u=t[c],d=u.shadow;if(!1===d.autoUpdate&&!1===d.needsUpdate)continue;if(void 0===d){console.warn("THREE.WebGLShadowMap:",u,"has no shadow.");continue}i.copy(d.mapSize);const p=d.getFrameExtents();if(i.multiply(p),o.copy(d.mapSize),(i.x>r||i.y>r)&&(i.x>r&&(o.x=Math.floor(r/p.x),i.x=o.x*p.x,d.mapSize.x=o.x),i.y>r&&(o.y=Math.floor(r/p.y),i.y=o.y*p.y,d.mapSize.y=o.y)),null===d.map&&!d.isPointLightShadow&&this.type===VSMShadowMap){const e={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};d.map=new WebGLRenderTarget(i.x,i.y,e),d.map.texture.name=u.name+".shadowMap",d.mapPass=new WebGLRenderTarget(i.x,i.y,e),d.camera.updateProjectionMatrix()}if(null===d.map){const e={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};d.map=new WebGLRenderTarget(i.x,i.y,e),d.map.texture.name=u.name+".shadowMap",d.camera.updateProjectionMatrix()}e.setRenderTarget(d.map),e.clear();const m=d.getViewportCount();for(let e=0;e<m;e++){const t=d.getViewport(e);a.set(o.x*t.x,o.y*t.y,o.x*t.z,o.y*t.w),h.viewport(a),d.updateMatrices(u,e),n=d.getFrustum(),b(s,l,d.camera,u,this.type)}d.isPointLightShadow||this.type!==VSMShadowMap||g(d,l),d.needsUpdate=!1}f.needsUpdate=!1,e.setRenderTarget(c,u,d)}}function WebGLState(e,t,r){const n=r.isWebGL2;const i=new function(){let t=!1;const r=new Vector4;let n=null;const i=new Vector4(0,0,0,0);return{setMask:function(r){n===r||t||(e.colorMask(r,r,r,r),n=r)},setLocked:function(e){t=e},setClear:function(t,n,o,a,s){!0===s&&(t*=a,n*=a,o*=a),r.set(t,n,o,a),!1===i.equals(r)&&(e.clearColor(t,n,o,a),i.copy(r))},reset:function(){t=!1,n=null,i.set(-1,0,0,0)}}},o=new function(){let t=!1,r=null,n=null,i=null;return{setTest:function(e){e?P(2929):B(2929)},setMask:function(n){r===n||t||(e.depthMask(n),r=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case NeverDepth:e.depthFunc(512);break;case AlwaysDepth:e.depthFunc(519);break;case LessDepth:e.depthFunc(513);break;case LessEqualDepth:e.depthFunc(515);break;case EqualDepth:e.depthFunc(514);break;case GreaterEqualDepth:e.depthFunc(518);break;case GreaterDepth:e.depthFunc(516);break;case NotEqualDepth:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,r=null,n=null,i=null}}},a=new function(){let t=!1,r=null,n=null,i=null,o=null,a=null,s=null,l=null,c=null;return{setTest:function(e){t||(e?P(2960):B(2960))},setMask:function(n){r===n||t||(e.stencilMask(n),r=n)},setFunc:function(t,r,a){n===t&&i===r&&o===a||(e.stencilFunc(t,r,a),n=t,i=r,o=a)},setOp:function(t,r,n){a===t&&s===r&&l===n||(e.stencilOp(t,r,n),a=t,s=r,l=n)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,r=null,n=null,i=null,o=null,a=null,s=null,l=null,c=null}}};let s={},l=null,c=null,u=null,d=null,h=null,p=null,m=null,f=null,g=null,_=!1,v=null,y=null,b=null,x=null,S=null;const M=e.getParameter(35661);let D=!1,w=0;const T=e.getParameter(7938);-1!==T.indexOf("WebGL")?(w=parseFloat(/^WebGL\ ([0-9])/.exec(T)[1]),D=w>=1):-1!==T.indexOf("OpenGL ES")&&(w=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(T)[1]),D=w>=2);let G=null,A={};const L=new Vector4,E=new Vector4;function C(t,r,n){const i=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<n;t++)e.texImage2D(r+t,0,6408,1,1,0,6408,5121,i);return o}const R={};function P(t){!0!==s[t]&&(e.enable(t),s[t]=!0)}function B(t){!1!==s[t]&&(e.disable(t),s[t]=!1)}function k(t){return l!==t&&(e.useProgram(t),l=t,!0)}R[3553]=C(3553,3553,1),R[34067]=C(34067,34069,6),i.setClear(0,0,0,1),o.setClear(1),a.setClear(0),P(2929),o.setFunc(LessEqualDepth),O(!1),F(CullFaceBack),P(2884),I(NoBlending),__signature__$2(k,"useProgram{}",(function(){return[e.useProgram]}));const W={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779};if(n)W[MinEquation]=32775,W[MaxEquation]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(W[MinEquation]=e.MIN_EXT,W[MaxEquation]=e.MAX_EXT)}const j={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};function I(t,r,n,i,o,a,s,l){if(t!==NoBlending){if(c||(P(3042),c=!0),t===CustomBlending)o=o||r,a=a||n,s=s||i,r===d&&o===m||(e.blendEquationSeparate(W[r],W[o]),d=r,m=o),n===h&&i===p&&a===f&&s===g||(e.blendFuncSeparate(j[n],j[i],j[a],j[s]),h=n,p=i,f=a,g=s),u=t,_=null;else if(t!==u||l!==_){if(d===AddEquation&&m===AddEquation||(e.blendEquation(32774),d=AddEquation,m=AddEquation),l)switch(t){case NormalBlending:e.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:e.blendFunc(1,1);break;case SubtractiveBlending:e.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case NormalBlending:e.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:e.blendFunc(770,1);break;case SubtractiveBlending:e.blendFunc(0,769);break;case MultiplyBlending:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}h=null,p=null,f=null,g=null,u=t,_=l}}else c&&(B(3042),c=!1)}function O(t){v!==t&&(t?e.frontFace(2304):e.frontFace(2305),v=t)}function F(t){t!==CullFaceNone?(P(2884),t!==y&&(t===CullFaceBack?e.cullFace(1029):t===CullFaceFront?e.cullFace(1028):e.cullFace(1032))):B(2884),y=t}function N(t,r,n){t?(P(32823),x===r&&S===n||(e.polygonOffset(r,n),x=r,S=n)):B(32823)}function V(t){void 0===t&&(t=33984+M-1),G!==t&&(e.activeTexture(t),G=t)}return{buffers:{color:i,depth:o,stencil:a},enable:P,disable:B,useProgram:k,setBlending:I,setMaterial:function(e,t){e.side===DoubleSide?B(2884):P(2884);let r=e.side===BackSide;t&&(r=!r),O(r),e.blending===NormalBlending&&!1===e.transparent?I(NoBlending):I(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),o.setFunc(e.depthFunc),o.setTest(e.depthTest),o.setMask(e.depthWrite),i.setMask(e.colorWrite);const n=e.stencilWrite;a.setTest(n),n&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),N(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:O,setCullFace:F,setLineWidth:function(t){t!==b&&(D&&e.lineWidth(t),b=t)},setPolygonOffset:N,setScissorTest:function(e){e?P(3089):B(3089)},activeTexture:V,bindTexture:function(t,r){null===G&&V();let n=A[G];void 0===n&&(n={type:void 0,texture:void 0},A[G]=n),n.type===t&&n.texture===r||(e.bindTexture(t,r||R[t]),n.type=t,n.texture=r)},unbindTexture:function(){const t=A[G];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===L.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),L.copy(t))},viewport:function(t){!1===E.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),E.copy(t))},reset:function(){s={},G=null,A={},l=null,u=null,v=null,y=null,i.reset(),o.reset(),a.reset()}}}function WebGLTextures(e,t,r,n,i,o,a){const s=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,d=i.maxSamples,h=new WeakMap;let p,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function f(e,t){return m?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(e,t,r,n){let i=1;if((e.width>n||e.height>n)&&(i=n/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const n=t?MathUtils.floorPowerOfTwo:Math.floor,o=n(i*e.width),a=n(i*e.height);void 0===p&&(p=f(o,a));const s=r?f(o,a):p;s.width=o,s.height=a;return s.getContext("2d").drawImage(e,0,0,o,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+a+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function _(e){return MathUtils.isPowerOfTwo(e.width)&&MathUtils.isPowerOfTwo(e.height)}function v(e,t){return e.generateMipmaps&&t&&e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter}function y(t,r,i,o){e.generateMipmap(t);n.get(r).__maxMipLevel=Math.log(Math.max(i,o))*Math.LOG2E}function b(r,n,i){if(!1===s)return n;if(null!==r){if(void 0!==e[r])return e[r];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+r+"'")}let o=n;return 6403===n&&(5126===i&&(o=33326),5131===i&&(o=33325),5121===i&&(o=33321)),6407===n&&(5126===i&&(o=34837),5131===i&&(o=34843),5121===i&&(o=32849)),6408===n&&(5126===i&&(o=34836),5131===i&&(o=34842),5121===i&&(o=32856)),33325!==o&&33326!==o&&34842!==o&&34836!==o||t.get("EXT_color_buffer_float"),o}function x(e){return e===NearestFilter||e===NearestMipmapNearestFilter||e===NearestMipmapLinearFilter?9728:9729}function S(t){const r=t.target;r.removeEventListener("dispose",S),function(t){const r=n.get(t);if(void 0===r.__webglInit)return;e.deleteTexture(r.__webglTexture),n.remove(t)}(r),r.isVideoTexture&&h.delete(r),a.memory.textures--}function M(t){const r=t.target;r.removeEventListener("dispose",M),function(t){const r=n.get(t),i=n.get(t.texture);if(!t)return;void 0!==i.__webglTexture&&e.deleteTexture(i.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);n.remove(t.texture),n.remove(t)}(r),a.memory.textures--}let D=0;function w(e,t){const i=n.get(e);if(e.isVideoTexture&&function(e){const t=a.render.frame;h.get(e)!==t&&(h.set(e,t),e.update())}(e),e.version>0&&i.__version!==e.version){const r=e.image;if(void 0===r)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==r.complete)return void R(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}r.activeTexture(33984+t),r.bindTexture(3553,i.__webglTexture)}function T(t,i){if(6!==t.image.length)return;const a=n.get(t);if(t.version>0&&a.__version!==t.version){C(a,t),r.activeTexture(33984+i),r.bindTexture(34067,a.__webglTexture),e.pixelStorei(37440,t.flipY);const n=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),l=t.image[0]&&t.image[0].isDataTexture,u=[];for(let e=0;e<6;e++)u[e]=n||l?l?t.image[e].image:t.image[e]:g(t.image[e],!1,!0,c);const d=u[0],h=_(d)||s,p=o.convert(t.format),m=o.convert(t.type),f=b(t.internalFormat,p,m);let x;if(E(34067,t,h),n){for(let e=0;e<6;e++){x=u[e].mipmaps;for(let n=0;n<x.length;n++){const i=x[n];t.format!==RGBAFormat&&t.format!==RGBFormat?null!==p?r.compressedTexImage2D(34069+e,n,f,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):r.texImage2D(34069+e,n,f,i.width,i.height,0,p,m,i.data)}}a.__maxMipLevel=x.length-1}else{x=t.mipmaps;for(let e=0;e<6;e++)if(l){r.texImage2D(34069+e,0,f,u[e].width,u[e].height,0,p,m,u[e].data);for(let t=0;t<x.length;t++){const n=x[t].image[e].image;r.texImage2D(34069+e,t+1,f,n.width,n.height,0,p,m,n.data)}}else{r.texImage2D(34069+e,0,f,p,m,u[e]);for(let t=0;t<x.length;t++){const n=x[t];r.texImage2D(34069+e,t+1,f,p,m,n.image[e])}}a.__maxMipLevel=x.length}v(t,h)&&y(34067,t,d.width,d.height),a.__version=t.version,t.onUpdate&&t.onUpdate(t)}else r.activeTexture(33984+i),r.bindTexture(34067,a.__webglTexture)}function G(e,t){r.activeTexture(33984+t),r.bindTexture(34067,n.get(e).__webglTexture)}const A={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648},L={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function E(r,o,a){a?(e.texParameteri(r,10242,A[o.wrapS]),e.texParameteri(r,10243,A[o.wrapT]),32879!==r&&35866!==r||e.texParameteri(r,32882,A[o.wrapR]),e.texParameteri(r,10240,L[o.magFilter]),e.texParameteri(r,10241,L[o.minFilter])):(e.texParameteri(r,10242,33071),e.texParameteri(r,10243,33071),32879!==r&&35866!==r||e.texParameteri(r,32882,33071),o.wrapS===ClampToEdgeWrapping&&o.wrapT===ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(r,10240,x(o.magFilter)),e.texParameteri(r,10241,x(o.minFilter)),o.minFilter!==NearestFilter&&o.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const l=t.get("EXT_texture_filter_anisotropic");if(l){if(o.type===FloatType&&null===t.get("OES_texture_float_linear"))return;if(o.type===HalfFloatType&&null===(s||t.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(e.texParameterf(r,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function C(t,r){void 0===t.__webglInit&&(t.__webglInit=!0,r.addEventListener("dispose",S),t.__webglTexture=e.createTexture(),a.memory.textures++)}function R(t,n,i){let a=3553;n.isDataTexture2DArray&&(a=35866),n.isDataTexture3D&&(a=32879),C(t,n),r.activeTexture(33984+i),r.bindTexture(a,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment);const l=function(e){return!s&&(e.wrapS!==ClampToEdgeWrapping||e.wrapT!==ClampToEdgeWrapping||e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter)}(n)&&!1===_(n.image),c=g(n.image,l,!1,u),d=_(c)||s,h=o.convert(n.format);let p,m=o.convert(n.type),f=b(n.internalFormat,h,m);E(a,n,d);const x=n.mipmaps;if(n.isDepthTexture)f=6402,s?f=n.type===FloatType?36012:n.type===UnsignedIntType?33190:n.type===UnsignedInt248Type?35056:33189:n.type===FloatType&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===DepthFormat&&6402===f&&n.type!==UnsignedShortType&&n.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=UnsignedShortType,m=o.convert(n.type)),n.format===DepthStencilFormat&&6402===f&&(f=34041,n.type!==UnsignedInt248Type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=UnsignedInt248Type,m=o.convert(n.type))),r.texImage2D(3553,0,f,c.width,c.height,0,h,m,null);else if(n.isDataTexture)if(x.length>0&&d){for(let e=0,t=x.length;e<t;e++)p=x[e],r.texImage2D(3553,e,f,p.width,p.height,0,h,m,p.data);n.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else r.texImage2D(3553,0,f,c.width,c.height,0,h,m,c.data),t.__maxMipLevel=0;else if(n.isCompressedTexture){for(let e=0,t=x.length;e<t;e++)p=x[e],n.format!==RGBAFormat&&n.format!==RGBFormat?null!==h?r.compressedTexImage2D(3553,e,f,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):r.texImage2D(3553,e,f,p.width,p.height,0,h,m,p.data);t.__maxMipLevel=x.length-1}else if(n.isDataTexture2DArray)r.texImage3D(35866,0,f,c.width,c.height,c.depth,0,h,m,c.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)r.texImage3D(32879,0,f,c.width,c.height,c.depth,0,h,m,c.data),t.__maxMipLevel=0;else if(x.length>0&&d){for(let e=0,t=x.length;e<t;e++)p=x[e],r.texImage2D(3553,e,f,h,m,p);n.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else r.texImage2D(3553,0,f,h,m,c),t.__maxMipLevel=0;v(n,d)&&y(a,n,c.width,c.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function P(t,i,a,s){const l=o.convert(i.texture.format),c=o.convert(i.texture.type),u=b(i.texture.internalFormat,l,c);r.texImage2D(s,0,u,i.width,i.height,0,l,c,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,a,s,n.get(i.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function B(t,r,n){if(e.bindRenderbuffer(36161,t),r.depthBuffer&&!r.stencilBuffer){let i=33189;if(n){const t=r.depthTexture;t&&t.isDepthTexture&&(t.type===FloatType?i=36012:t.type===UnsignedIntType&&(i=33190));const n=W(r);e.renderbufferStorageMultisample(36161,n,i,r.width,r.height)}else e.renderbufferStorage(36161,i,r.width,r.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(r.depthBuffer&&r.stencilBuffer){if(n){const t=W(r);e.renderbufferStorageMultisample(36161,t,35056,r.width,r.height)}else e.renderbufferStorage(36161,34041,r.width,r.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=o.convert(r.texture.format),i=o.convert(r.texture.type),a=b(r.texture.internalFormat,t,i);if(n){const t=W(r);e.renderbufferStorageMultisample(36161,t,a,r.width,r.height)}else e.renderbufferStorage(36161,a,r.width,r.height)}e.bindRenderbuffer(36161,null)}function k(t){const r=n.get(t),i=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),w(r.depthTexture,0);const i=n.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===DepthFormat)e.framebufferTexture2D(36160,36096,3553,i,0);else{if(r.depthTexture.format!==DepthStencilFormat)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,i,0)}}(r.__webglFramebuffer,t)}else if(i){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)e.bindFramebuffer(36160,r.__webglFramebuffer[n]),r.__webglDepthbuffer[n]=e.createRenderbuffer(),B(r.__webglDepthbuffer[n],t,!1)}else e.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),B(r.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function W(e){return s&&e.isWebGLMultisampleRenderTarget?Math.min(d,e.samples):0}let j=!1,I=!1;this.allocateTextureUnit=function(){const e=D;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),D+=1,e},this.resetTextureUnits=function(){D=0},this.setTexture2D=w,this.setTexture2DArray=function(e,t){const i=n.get(e);e.version>0&&i.__version!==e.version?R(i,e,t):(r.activeTexture(33984+t),r.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(e,t){const i=n.get(e);e.version>0&&i.__version!==e.version?R(i,e,t):(r.activeTexture(33984+t),r.bindTexture(32879,i.__webglTexture))},this.setTextureCube=T,this.setTextureCubeDynamic=G,this.setupRenderTarget=function(t){const i=n.get(t),l=n.get(t.texture);t.addEventListener("dispose",M),l.__webglTexture=e.createTexture(),a.memory.textures++;const c=!0===t.isWebGLCubeRenderTarget,u=!0===t.isWebGLMultisampleRenderTarget,d=_(t)||s;if(!s||t.texture.format!==RGBFormat||t.texture.type!==FloatType&&t.texture.type!==HalfFloatType||(t.texture.format=RGBAFormat,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){i.__webglFramebuffer=[];for(let t=0;t<6;t++)i.__webglFramebuffer[t]=e.createFramebuffer()}else if(i.__webglFramebuffer=e.createFramebuffer(),u)if(s){i.__webglMultisampledFramebuffer=e.createFramebuffer(),i.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const r=o.convert(t.texture.format),n=o.convert(t.texture.type),a=b(t.texture.internalFormat,r,n),s=W(t);e.renderbufferStorageMultisample(36161,s,a,t.width,t.height),e.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(i.__webglDepthRenderbuffer=e.createRenderbuffer(),B(i.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(c){r.bindTexture(34067,l.__webglTexture),E(34067,t.texture,d);for(let e=0;e<6;e++)P(i.__webglFramebuffer[e],t,36064,34069+e);v(t.texture,d)&&y(34067,t.texture,t.width,t.height),r.bindTexture(34067,null)}else r.bindTexture(3553,l.__webglTexture),E(3553,t.texture,d),P(i.__webglFramebuffer,t,36064,3553),v(t.texture,d)&&y(3553,t.texture,t.width,t.height),r.bindTexture(3553,null);t.depthBuffer&&k(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture;if(v(t,_(e)||s)){const i=e.isWebGLCubeRenderTarget?34067:3553,o=n.get(t).__webglTexture;r.bindTexture(i,o),y(i,t,e.width,e.height),r.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(s){const r=n.get(t);e.bindFramebuffer(36008,r.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,r.__webglFramebuffer);const i=t.width,o=t.height;let a=16384;t.depthBuffer&&(a|=256),t.stencilBuffer&&(a|=1024),e.blitFramebuffer(0,0,i,o,0,0,i,o,a,9728),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===j&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),j=!0),e=e.texture),w(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===I&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),I=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?T(e,t):G(e,t)}}function WebGLUtils(e,t,r){const n=r.isWebGL2;return{convert:function(e){let r;if(e===UnsignedByteType)return 5121;if(e===UnsignedShort4444Type)return 32819;if(e===UnsignedShort5551Type)return 32820;if(e===UnsignedShort565Type)return 33635;if(e===ByteType)return 5120;if(e===ShortType)return 5122;if(e===UnsignedShortType)return 5123;if(e===IntType)return 5124;if(e===UnsignedIntType)return 5125;if(e===FloatType)return 5126;if(e===HalfFloatType)return n?5131:(r=t.get("OES_texture_half_float"),null!==r?r.HALF_FLOAT_OES:null);if(e===AlphaFormat)return 6406;if(e===RGBFormat)return 6407;if(e===RGBAFormat)return 6408;if(e===LuminanceFormat)return 6409;if(e===LuminanceAlphaFormat)return 6410;if(e===DepthFormat)return 6402;if(e===DepthStencilFormat)return 34041;if(e===RedFormat)return 6403;if(e===RedIntegerFormat)return 36244;if(e===RGFormat)return 33319;if(e===RGIntegerFormat)return 33320;if(e===RGBIntegerFormat)return 36248;if(e===RGBAIntegerFormat)return 36249;if(e===RGB_S3TC_DXT1_Format||e===RGBA_S3TC_DXT1_Format||e===RGBA_S3TC_DXT3_Format||e===RGBA_S3TC_DXT5_Format){if(r=t.get("WEBGL_compressed_texture_s3tc"),null===r)return null;if(e===RGB_S3TC_DXT1_Format)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT1_Format)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT3_Format)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===RGBA_S3TC_DXT5_Format)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===RGB_PVRTC_4BPPV1_Format||e===RGB_PVRTC_2BPPV1_Format||e===RGBA_PVRTC_4BPPV1_Format||e===RGBA_PVRTC_2BPPV1_Format){if(r=t.get("WEBGL_compressed_texture_pvrtc"),null===r)return null;if(e===RGB_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===RGB_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===RGBA_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===RGBA_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===RGB_ETC1_Format)return r=t.get("WEBGL_compressed_texture_etc1"),null!==r?r.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===RGB_ETC2_Format||e===RGBA_ETC2_EAC_Format)&&(r=t.get("WEBGL_compressed_texture_etc"),null!==r)){if(e===RGB_ETC2_Format)return r.COMPRESSED_RGB8_ETC2;if(e===RGBA_ETC2_EAC_Format)return r.COMPRESSED_RGBA8_ETC2_EAC}return e===RGBA_ASTC_4x4_Format||e===RGBA_ASTC_5x4_Format||e===RGBA_ASTC_5x5_Format||e===RGBA_ASTC_6x5_Format||e===RGBA_ASTC_6x6_Format||e===RGBA_ASTC_8x5_Format||e===RGBA_ASTC_8x6_Format||e===RGBA_ASTC_8x8_Format||e===RGBA_ASTC_10x5_Format||e===RGBA_ASTC_10x6_Format||e===RGBA_ASTC_10x8_Format||e===RGBA_ASTC_10x10_Format||e===RGBA_ASTC_12x10_Format||e===RGBA_ASTC_12x12_Format||e===SRGB8_ALPHA8_ASTC_4x4_Format||e===SRGB8_ALPHA8_ASTC_5x4_Format||e===SRGB8_ALPHA8_ASTC_5x5_Format||e===SRGB8_ALPHA8_ASTC_6x5_Format||e===SRGB8_ALPHA8_ASTC_6x6_Format||e===SRGB8_ALPHA8_ASTC_8x5_Format||e===SRGB8_ALPHA8_ASTC_8x6_Format||e===SRGB8_ALPHA8_ASTC_8x8_Format||e===SRGB8_ALPHA8_ASTC_10x5_Format||e===SRGB8_ALPHA8_ASTC_10x6_Format||e===SRGB8_ALPHA8_ASTC_10x8_Format||e===SRGB8_ALPHA8_ASTC_10x10_Format||e===SRGB8_ALPHA8_ASTC_12x10_Format||e===SRGB8_ALPHA8_ASTC_12x12_Format?(r=t.get("WEBGL_compressed_texture_astc"),null!==r?e:null):e===RGBA_BPTC_Format?(r=t.get("EXT_texture_compression_bptc"),null!==r?e:null):e===UnsignedInt248Type?n?34042:(r=t.get("WEBGL_depth_texture"),null!==r?r.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function ArrayCamera(e){PerspectiveCamera.call(this),this.cameras=e||[]}function Group(){Object3D.call(this),this.type="Group"}function WebXRController(){this._targetRay=null,this._grip=null}function WebXRManager(e,t){const r=this;let n=null,i=1,o=null,a="local-floor",s=null;const l=[],c=new Map,u=new PerspectiveCamera;u.layers.enable(1),u.viewport=new Vector4;const d=new PerspectiveCamera;d.layers.enable(2),d.viewport=new Vector4;const h=[u,d],p=new ArrayCamera;p.layers.enable(1),p.layers.enable(2);let m=null,f=null;function g(e){const t=c.get(e.inputSource);t&&t.dispatchEvent({type:e.type})}function _(){c.forEach((function(e,t){e.disconnect(t)})),c.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),D.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}function v(e){o=e,D.setContext(n),D.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}function y(e){const t=n.inputSources;for(let e=0;e<l.length;e++)c.set(t[e],l[e]);for(let t=0;t<e.removed.length;t++){const r=e.removed[t],n=c.get(r);n&&(n.dispatchEvent({type:"disconnected",data:r}),c.delete(r))}for(let t=0;t<e.added.length;t++){const r=e.added[t],n=c.get(r);n&&n.dispatchEvent({type:"connected",data:r})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getGripSpace()},this.setFramebufferScaleFactor=function(e){i=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){a=e,!0===r.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return n},this.setSession=function(e){if(n=e,null!==n){n.addEventListener("select",g),n.addEventListener("selectstart",g),n.addEventListener("selectend",g),n.addEventListener("squeeze",g),n.addEventListener("squeezestart",g),n.addEventListener("squeezeend",g),n.addEventListener("end",_);const e=t.getContextAttributes();!0!==e.xrCompatible&&t.makeXRCompatible();const r={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:i},o=new XRWebGLLayer(n,t,r);n.updateRenderState({baseLayer:o}),n.requestReferenceSpace(a).then(v),n.addEventListener("inputsourceschange",y)}};const b=new Vector3,x=new Vector3;function S(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}this.getCamera=function(e){p.near=d.near=u.near=e.near,p.far=d.far=u.far=e.far,m===p.near&&f===p.far||(n.updateRenderState({depthNear:p.near,depthFar:p.far}),m=p.near,f=p.far);const t=e.parent,r=p.cameras;S(p,t);for(let e=0;e<r.length;e++)S(r[e],t);e.matrixWorld.copy(p.matrixWorld);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);return 2===r.length?function(e,t,r){b.setFromMatrixPosition(t.matrixWorld),x.setFromMatrixPosition(r.matrixWorld);const n=b.distanceTo(x),i=t.projectionMatrix.elements,o=r.projectionMatrix.elements,a=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],c=(i[9]-1)/i[5],u=(i[8]-1)/i[0],d=(o[8]+1)/o[0],h=a*u,p=a*d,m=n/(-u+d),f=m*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);const g=a+m,_=s+m,v=h-f,y=p+(n-f),S=l*s/_*g,M=c*s/_*g;e.projectionMatrix.makePerspective(v,y,S,M,g,_)}(p,u,d):p.projectionMatrix.copy(u.projectionMatrix),p};let M=null;const D=new WebGLAnimation;D.setAnimationLoop((function(t,r){if(s=r.getViewerPose(o),null!==s){const t=s.views,r=n.renderState.baseLayer;e.setFramebuffer(r.framebuffer);let i=!1;t.length!==p.cameras.length&&(p.cameras.length=0,i=!0);for(let e=0;e<t.length;e++){const n=t[e],o=r.getViewport(n),a=h[e];a.matrix.fromArray(n.transform.matrix),a.projectionMatrix.fromArray(n.projectionMatrix),a.viewport.set(o.x,o.y,o.width,o.height),0===e&&p.matrix.copy(a.matrix),!0===i&&p.cameras.push(a)}}const i=n.inputSources;for(let e=0;e<l.length;e++){const t=l[e],n=i[e];t.update(n,r,o)}M&&M(t,r)})),this.setAnimationLoop=function(e){M=e},this.dispose=function(){}}function WebGLMaterials(e){function t(t,r,n){t.opacity.value=r.opacity,r.color&&t.diffuse.value.copy(r.color),r.emissive&&t.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(t.map.value=r.map),r.alphaMap&&(t.alphaMap.value=r.alphaMap),r.specularMap&&(t.specularMap.value=r.specularMap);const i=r.envMap||n;let o,a;i&&(t.envMap.value=i,t.flipEnvMap.value=i.isCubeTexture?-1:1,t.reflectivity.value=r.reflectivity,t.refractionRatio.value=r.refractionRatio,t.maxMipLevel.value=e.get(i).__maxMipLevel),r.lightMap&&(t.lightMap.value=r.lightMap,t.lightMapIntensity.value=r.lightMapIntensity),r.aoMap&&(t.aoMap.value=r.aoMap,t.aoMapIntensity.value=r.aoMapIntensity),r.map?o=r.map:r.specularMap?o=r.specularMap:r.displacementMap?o=r.displacementMap:r.normalMap?o=r.normalMap:r.bumpMap?o=r.bumpMap:r.roughnessMap?o=r.roughnessMap:r.metalnessMap?o=r.metalnessMap:r.alphaMap?o=r.alphaMap:r.emissiveMap&&(o=r.emissiveMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),t.uvTransform.value.copy(o.matrix)),r.aoMap?a=r.aoMap:r.lightMap&&(a=r.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uv2Transform.value.copy(a.matrix))}function r(e,t,r){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),(t.envMap||r)&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,i,o,a){n.isMeshBasicMaterial?t(e,n):n.isMeshLambertMaterial?(t(e,n),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,n)):n.isMeshToonMaterial?(t(e,n),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshPhongMaterial?(t(e,n),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshStandardMaterial?(t(e,n,i),n.isMeshPhysicalMaterial?function(e,t,n){r(e,t,n),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===BackSide&&e.clearcoatNormalScale.value.negate());e.transparency.value=t.transparency}(e,n,i):r(e,n,i)):n.isMeshMatcapMaterial?(t(e,n),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDepthMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDistanceMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,n)):n.isMeshNormalMaterial?(t(e,n),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,n),n.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,n)):n.isPointsMaterial?function(e,t,r,n){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*r,e.scale.value=.5*n,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,n,o,a):n.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,n):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function WebGLRenderer(e){const t=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),r=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,i=void 0===e.depth||e.depth,o=void 0===e.stencil||e.stencil,a=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let d=null,h=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=LinearEncoding,this.physicallyCorrectLights=!1,this.toneMapping=NoToneMapping,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let m=!1,f=null,g=0,_=0,v=null,y=null,b=-1,x=null,S=null;const M=new Vector4,D=new Vector4;let w=null,T=t.width,G=t.height,A=1,L=null,E=null;const C=new Vector4(0,0,T,G),R=new Vector4(0,0,T,G);let P=!1;const B=new Frustum,k=new WebGLClipping;let W=!1,j=!1;const I=new Matrix4,O=new Vector3,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function N(){return null===v?A:1}let V,U,H,z,K,$,q,X,Q,Y,Z,J,ee,te,re,ne,ie,oe,ae,se=r;function le(e,r){for(let n=0;n<e.length;n++){const i=e[n],o=t.getContext(i,r);if(null!==o)return o}return null}try{const e={alpha:n,depth:i,stencil:o,antialias:a,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(t.addEventListener("webglcontextlost",he,!1),t.addEventListener("webglcontextrestored",pe,!1),null===se){const t=["webgl2","webgl","experimental-webgl"];if(!0===p.isWebGL1Renderer&&t.shift(),se=le(t,e),null===se)throw le(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===se.getShaderPrecisionFormat&&(se.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function ce(){V=new WebGLExtensions(se),U=new WebGLCapabilities(se,V,e),!1===U.isWebGL2&&(V.get("WEBGL_depth_texture"),V.get("OES_texture_float"),V.get("OES_texture_half_float"),V.get("OES_texture_half_float_linear"),V.get("OES_standard_derivatives"),V.get("OES_element_index_uint"),V.get("OES_vertex_array_object"),V.get("ANGLE_instanced_arrays")),V.get("OES_texture_float_linear"),oe=new WebGLUtils(se,V,U),H=new WebGLState(se,V,U),H.scissor(D.copy(R).multiplyScalar(A).floor()),H.viewport(M.copy(C).multiplyScalar(A).floor()),z=new WebGLInfo(se),K=new WebGLProperties,$=new WebGLTextures(se,V,H,K,U,oe,z),q=new WebGLAttributes(se,U),ae=new WebGLBindingStates(se,V,q,U),X=new WebGLGeometries(se,q,z,ae),Q=new WebGLObjects(se,X,q,z),re=new WebGLMorphtargets(se),Y=new WebGLPrograms(p,V,U,ae),Z=new WebGLMaterials(K),J=new WebGLRenderLists,ee=new WebGLRenderStates,te=new WebGLBackground(p,H,Q,s),ne=new WebGLBufferRenderer(se,V,z,U),ie=new WebGLIndexedBufferRenderer(se,V,z,U),z.programs=Y.programs,p.capabilities=U,p.extensions=V,p.properties=K,p.renderLists=J,p.state=H,p.info=z}ce();const ue=new WebXRManager(p,se);this.xr=ue;const de=new WebGLShadowMap(p,Q,U.maxTextureSize);function he(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function pe(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,ce()}function me(e){const t=e.target;t.removeEventListener("dispose",me),function(e){fe(e),K.remove(e)}(t)}function fe(e){const t=K.get(e).program;e.program=void 0,void 0!==t&&Y.releaseProgram(t)}this.shadowMap=de,this.getContext=function(){return se},this.getContextAttributes=function(){return se.getContextAttributes()},this.forceContextLoss=function(){const e=V.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=V.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(e){void 0!==e&&(A=e,this.setSize(T,G,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Vector2),e.set(T,G)},this.setSize=function(e,r,n){ue.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(T=e,G=r,t.width=Math.floor(e*A),t.height=Math.floor(r*A),!1!==n&&(t.style.width=e+"px",t.style.height=r+"px"),this.setViewport(0,0,e,r))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Vector2),e.set(T*A,G*A).floor()},this.setDrawingBufferSize=function(e,r,n){T=e,G=r,A=n,t.width=Math.floor(e*n),t.height=Math.floor(r*n),this.setViewport(0,0,e,r)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Vector4),e.copy(M)},this.getViewport=function(e){return e.copy(C)},this.setViewport=function(e,t,r,n){e.isVector4?C.set(e.x,e.y,e.z,e.w):C.set(e,t,r,n),H.viewport(M.copy(C).multiplyScalar(A).floor())},this.getScissor=function(e){return e.copy(R)},this.setScissor=function(e,t,r,n){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,t,r,n),H.scissor(D.copy(R).multiplyScalar(A).floor())},this.getScissorTest=function(){return P},this.setScissorTest=function(e){H.setScissorTest(P=e)},this.setOpaqueSort=function(e){L=e},this.setTransparentSort=function(e){E=e},this.getClearColor=function(){return te.getClearColor()},this.setClearColor=function(){te.setClearColor.apply(te,arguments)},this.getClearAlpha=function(){return te.getClearAlpha()},this.setClearAlpha=function(){te.setClearAlpha.apply(te,arguments)},this.clear=function(e,t,r){let n=0;(void 0===e||e)&&(n|=16384),(void 0===t||t)&&(n|=256),(void 0===r||r)&&(n|=1024),se.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",he,!1),t.removeEventListener("webglcontextrestored",pe,!1),J.dispose(),ee.dispose(),K.dispose(),Q.dispose(),ae.dispose(),ue.dispose(),_e.stop()},this.renderBufferImmediate=function(e,t){ae.initAttributes();const r=K.get(e);e.hasPositions&&!r.position&&(r.position=se.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=se.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=se.createBuffer()),e.hasColors&&!r.color&&(r.color=se.createBuffer());const n=t.getAttributes();e.hasPositions&&(se.bindBuffer(34962,r.position),se.bufferData(34962,e.positionArray,35048),ae.enableAttribute(n.position),se.vertexAttribPointer(n.position,3,5126,!1,0,0)),e.hasNormals&&(se.bindBuffer(34962,r.normal),se.bufferData(34962,e.normalArray,35048),ae.enableAttribute(n.normal),se.vertexAttribPointer(n.normal,3,5126,!1,0,0)),e.hasUvs&&(se.bindBuffer(34962,r.uv),se.bufferData(34962,e.uvArray,35048),ae.enableAttribute(n.uv),se.vertexAttribPointer(n.uv,2,5126,!1,0,0)),e.hasColors&&(se.bindBuffer(34962,r.color),se.bufferData(34962,e.colorArray,35048),ae.enableAttribute(n.color),se.vertexAttribPointer(n.color,3,5126,!1,0,0)),ae.disableUnusedAttributes(),se.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,n,i,o){null===t&&(t=F);const a=i.isMesh&&i.matrixWorld.determinant()<0,s=Se(e,t,n,i);H.setMaterial(n,a);let l=r.index;const c=r.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let u,d=1;!0===n.wireframe&&(l=X.getWireframeAttribute(r),d=2),(n.morphTargets||n.morphNormals)&&re.update(i,r,n,s),ae.setup(i,n,s,r,l);let h=ne;null!==l&&(u=q.get(l),h=ie,h.setIndex(u));const p=null!==l?l.count:c.count,m=r.drawRange.start*d,f=r.drawRange.count*d,g=null!==o?o.start*d:0,_=null!==o?o.count*d:1/0,v=Math.max(m,g),y=Math.min(p,m+f,g+_)-1,b=Math.max(0,y-v+1);if(0!==b){if(i.isMesh)!0===n.wireframe?(H.setLineWidth(n.wireframeLinewidth*N()),h.setMode(1)):h.setMode(4);else if(i.isLine){let e=n.linewidth;void 0===e&&(e=1),H.setLineWidth(e*N()),i.isLineSegments?h.setMode(1):i.isLineLoop?h.setMode(2):h.setMode(3)}else i.isPoints?h.setMode(0):i.isSprite&&h.setMode(4);if(i.isInstancedMesh)h.renderInstances(r,v,b,i.count);else if(r.isInstancedBufferGeometry){const e=Math.min(r.instanceCount,r._maxInstanceCount);h.renderInstances(r,v,b,e)}else h.render(v,b)}},this.compile=function(e,t){h=ee.get(e,t),h.init(),e.traverse((function(e){e.isLight&&(h.pushLight(e),e.castShadow&&h.pushShadow(e))})),h.setupLights(t);const r=new WeakMap;e.traverse((function(t){let n=t.material;if(n)if(Array.isArray(n))for(let i=0;i<n.length;i++){let o=n[i];!1===r.has(o)&&(xe(o,e,t),r.set(o))}else!1===r.has(n)&&(xe(n,e,t),r.set(n))}))};let ge=null;const _e=new WebGLAnimation;function ve(e,t,r,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)r=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)h.pushLight(e),e.castShadow&&h.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||B.intersectsSprite(e)){n&&O.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I);const t=Q.update(e),i=e.material;i.visible&&d.push(e,t,i,r,O.z,null)}}else if(e.isImmediateRenderObject)n&&O.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I),d.push(e,null,e.material,r,O.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==z.render.frame&&(e.skeleton.update(),e.skeleton.frame=z.render.frame),!e.frustumCulled||B.intersectsObject(e))){n&&O.setFromMatrixPosition(e.matrixWorld).applyMatrix4(I);const t=Q.update(e),i=e.material;if(Array.isArray(i)){const n=t.groups;for(let o=0,a=n.length;o<a;o++){const a=n[o],s=i[a.materialIndex];s&&s.visible&&d.push(e,t,s,r,O.z,a)}}else i.visible&&d.push(e,t,i,r,O.z,null)}const i=e.children;for(let e=0,o=i.length;e<o;e++)ve(i[e],t,r,n)}function ye(e,t,r){const n=!0===t.isScene?t.overrideMaterial:null;for(let i=0,o=e.length;i<o;i++){const o=e[i],a=o.object,s=o.geometry,l=null===n?o.material:n,c=o.group;if(r.isArrayCamera){S=r;const e=r.cameras;for(let r=0,n=e.length;r<n;r++){const n=e[r];a.layers.test(n.layers)&&(H.viewport(M.copy(n.viewport)),h.setupLights(n),be(a,t,n,s,l,c))}}else S=null,be(a,t,r,s,l,c)}}function be(e,t,r,n,i,o){if(e.onBeforeRender(p,t,r,n,i,o),h=ee.get(t,S||r),e.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const n=Se(r,t,i,e);H.setMaterial(i),ae.reset(),function(e,t){e.render((function(e){p.renderBufferImmediate(e,t)}))}(e,n)}else p.renderBufferDirect(r,t,n,i,e,o);e.onAfterRender(p,t,r,n,i,o),h=ee.get(t,S||r)}function xe(e,t,r){!0!==t.isScene&&(t=F);const n=K.get(e),i=h.state.lights,o=h.state.shadowsArray,a=i.state.version,s=Y.getParameters(e,i.state,o,t,k.numPlanes,k.numIntersection,r),l=Y.getProgramCacheKey(s);let c=n.program,u=!0;if(void 0===c)e.addEventListener("dispose",me);else if(c.cacheKey!==l)fe(e);else if(n.lightsStateVersion!==a)n.lightsStateVersion=a,u=!1;else{if(void 0!==s.shaderID)return;u=!1}u&&(c=Y.acquireProgram(s,l),n.program=c,n.uniforms=s.uniforms,n.outputEncoding=s.outputEncoding,e.program=c);const d=c.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(let t=0;t<p.maxMorphTargets;t++)d["morphTarget"+t]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(let t=0;t<p.maxMorphNormals;t++)d["morphNormal"+t]>=0&&e.numSupportedMorphNormals++}const m=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(n.numClippingPlanes=k.numPlanes,n.numIntersection=k.numIntersection,m.clippingPlanes=k.uniform),n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),n.lightsStateVersion=a,n.needsLights&&(m.ambientLightColor.value=i.state.ambient,m.lightProbe.value=i.state.probe,m.directionalLights.value=i.state.directional,m.directionalLightShadows.value=i.state.directionalShadow,m.spotLights.value=i.state.spot,m.spotLightShadows.value=i.state.spotShadow,m.rectAreaLights.value=i.state.rectArea,m.pointLights.value=i.state.point,m.pointLightShadows.value=i.state.pointShadow,m.hemisphereLights.value=i.state.hemi,m.directionalShadowMap.value=i.state.directionalShadowMap,m.directionalShadowMatrix.value=i.state.directionalShadowMatrix,m.spotShadowMap.value=i.state.spotShadowMap,m.spotShadowMatrix.value=i.state.spotShadowMatrix,m.pointShadowMap.value=i.state.pointShadowMap,m.pointShadowMatrix.value=i.state.pointShadowMatrix);const f=n.program.getUniforms(),g=WebGLUniforms.seqWithValue(f.seq,m);n.uniformsList=g}function Se(e,t,r,n){!0!==t.isScene&&(t=F),$.resetTextureUnits();const i=t.fog,o=r.isMeshStandardMaterial?t.environment:null,a=null===v?p.outputEncoding:v.texture.encoding,s=K.get(r),l=h.state.lights;if(!0===W&&(!0===j||e!==x)){const t=e===x&&r.id===b;k.setState(r.clippingPlanes,r.clipIntersection,r.clipShadows,e,s,t)}r.version===s.__version?void 0===s.program||r.fog&&s.fog!==i||s.environment!==o||s.needsLights&&s.lightsStateVersion!==l.state.version?xe(r,t,n):void 0===s.numClippingPlanes||s.numClippingPlanes===k.numPlanes&&s.numIntersection===k.numIntersection?s.outputEncoding!==a&&xe(r,t,n):xe(r,t,n):(xe(r,t,n),s.__version=r.version);let c=!1,u=!1,d=!1;const m=s.program,f=m.getUniforms(),g=s.uniforms;if(H.useProgram(m.program)&&(c=!0,u=!0,d=!0),r.id!==b&&(b=r.id,u=!0),c||x!==e){if(f.setValue(se,"projectionMatrix",e.projectionMatrix),U.logarithmicDepthBuffer&&f.setValue(se,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),x!==e&&(x=e,u=!0,d=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){const t=f.map.cameraPosition;void 0!==t&&t.setValue(se,O.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&f.setValue(se,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||r.skinning)&&f.setValue(se,"viewMatrix",e.matrixWorldInverse)}if(r.skinning){f.setOptional(se,n,"bindMatrix"),f.setOptional(se,n,"bindMatrixInverse");const e=n.skeleton;if(e){const t=e.bones;if(U.floatVertexTextures){if(void 0===e.boneTexture){let r=Math.sqrt(4*t.length);r=MathUtils.ceilPowerOfTwo(r),r=Math.max(r,4);const n=new Float32Array(r*r*4);n.set(e.boneMatrices);const i=new DataTexture(n,r,r,RGBAFormat,FloatType);e.boneMatrices=n,e.boneTexture=i,e.boneTextureSize=r}f.setValue(se,"boneTexture",e.boneTexture,$),f.setValue(se,"boneTextureSize",e.boneTextureSize)}else f.setOptional(se,e,"boneMatrices")}}var _,y;return(u||s.receiveShadow!==n.receiveShadow)&&(s.receiveShadow=n.receiveShadow,f.setValue(se,"receiveShadow",n.receiveShadow)),u&&(f.setValue(se,"toneMappingExposure",p.toneMappingExposure),s.needsLights&&(y=d,(_=g).ambientLightColor.needsUpdate=y,_.lightProbe.needsUpdate=y,_.directionalLights.needsUpdate=y,_.directionalLightShadows.needsUpdate=y,_.pointLights.needsUpdate=y,_.pointLightShadows.needsUpdate=y,_.spotLights.needsUpdate=y,_.spotLightShadows.needsUpdate=y,_.rectAreaLights.needsUpdate=y,_.hemisphereLights.needsUpdate=y),i&&r.fog&&Z.refreshFogUniforms(g,i),Z.refreshMaterialUniforms(g,r,o,A,G),void 0!==g.ltc_1&&(g.ltc_1.value=UniformsLib.LTC_1),void 0!==g.ltc_2&&(g.ltc_2.value=UniformsLib.LTC_2),WebGLUniforms.upload(se,s.uniformsList,g,$)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(WebGLUniforms.upload(se,s.uniformsList,g,$),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&f.setValue(se,"center",n.center),f.setValue(se,"modelViewMatrix",n.modelViewMatrix),f.setValue(se,"normalMatrix",n.normalMatrix),f.setValue(se,"modelMatrix",n.matrixWorld),m}_e.setAnimationLoop((function(e){ue.isPresenting||ge&&ge(e)})),"undefined"!=typeof window&&_e.setContext(window),this.setAnimationLoop=function(e){ge=e,ue.setAnimationLoop(e),null===e?_e.stop():_e.start()},this.render=function(e,t){let r,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;ae.resetDefaultState(),b=-1,x=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ue.enabled&&!0===ue.isPresenting&&(t=ue.getCamera(t)),!0===e.isScene&&e.onBeforeRender(p,e,t,r||v),h=ee.get(e,t),h.init(),I.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),B.setFromProjectionMatrix(I),j=this.localClippingEnabled,W=k.init(this.clippingPlanes,j,t),d=J.get(e,t),d.init(),ve(e,t,0,p.sortObjects),d.finish(),!0===p.sortObjects&&d.sort(L,E),!0===W&&k.beginShadows();const i=h.state.shadowsArray;de.render(i,e,t),h.setupLights(t),!0===W&&k.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==r&&this.setRenderTarget(r),te.render(d,e,t,n);const o=d.opaque,a=d.transparent;o.length>0&&ye(o,e,t),a.length>0&&ye(a,e,t),!0===e.isScene&&e.onAfterRender(p,e,t),null!==v&&($.updateRenderTargetMipmap(v),$.updateMultisampleRenderTarget(v)),H.buffers.depth.setTest(!0),H.buffers.depth.setMask(!0),H.buffers.color.setMask(!0),H.setPolygonOffset(!1),d=null,h=null},__signature__$2(Se,"useProgram{}"),this.setFramebuffer=function(e){f!==e&&null===v&&se.bindFramebuffer(36160,e),f=e},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return v},this.setRenderTarget=function(e,t,r){v=e,g=t,_=r,e&&void 0===K.get(e).__webglFramebuffer&&$.setupRenderTarget(e);let n=f,i=!1;if(e){const r=K.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=r[t||0],i=!0):n=e.isWebGLMultisampleRenderTarget?K.get(e).__webglMultisampledFramebuffer:r,M.copy(e.viewport),D.copy(e.scissor),w=e.scissorTest}else M.copy(C).multiplyScalar(A).floor(),D.copy(R).multiplyScalar(A).floor(),w=P;if(y!==n&&(se.bindFramebuffer(36160,n),y=n),H.viewport(M),H.scissor(D),H.setScissorTest(w),i){const n=K.get(e.texture);se.framebufferTexture2D(36160,36064,34069+(t||0),n.__webglTexture,r||0)}},this.readRenderTargetPixels=function(e,t,r,n,i,o,a){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let s=K.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==a&&(s=s[a]),s){let a=!1;s!==y&&(se.bindFramebuffer(36160,s),a=!0);try{const s=e.texture,l=s.format,c=s.type;if(l!==RGBAFormat&&oe.convert(l)!==se.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(c===UnsignedByteType||oe.convert(c)===se.getParameter(35738)||c===FloatType&&(U.isWebGL2||V.get("OES_texture_float")||V.get("WEBGL_color_buffer_float"))||c===HalfFloatType&&(U.isWebGL2?V.get("EXT_color_buffer_float"):V.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===se.checkFramebufferStatus(36160)?t>=0&&t<=e.width-n&&r>=0&&r<=e.height-i&&se.readPixels(t,r,n,i,oe.convert(l),oe.convert(c),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{a&&se.bindFramebuffer(36160,y)}}},this.copyFramebufferToTexture=function(e,t,r){void 0===r&&(r=0);const n=Math.pow(2,-r),i=Math.floor(t.image.width*n),o=Math.floor(t.image.height*n),a=oe.convert(t.format);$.setTexture2D(t,0),se.copyTexImage2D(3553,r,a,e.x,e.y,i,o,0),H.unbindTexture()},this.copyTextureToTexture=function(e,t,r,n){void 0===n&&(n=0);const i=t.image.width,o=t.image.height,a=oe.convert(r.format),s=oe.convert(r.type);$.setTexture2D(r,0),se.pixelStorei(37440,r.flipY),se.pixelStorei(37441,r.premultiplyAlpha),se.pixelStorei(3317,r.unpackAlignment),t.isDataTexture?se.texSubImage2D(3553,n,e.x,e.y,i,o,a,s,t.image.data):t.isCompressedTexture?se.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,a,t.mipmaps[0].data):se.texSubImage2D(3553,n,e.x,e.y,a,s,t.image),0===n&&r.generateMipmaps&&se.generateMipmap(3553),H.unbindTexture()},this.initTexture=function(e){$.setTexture2D(e,0),H.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function WebGL1Renderer(e){WebGLRenderer.call(this,e)}function FogExp2(e,t){this.name="",this.color=new Color(e),this.density=void 0!==t?t:25e-5}function Fog(e,t,r){this.name="",this.color=new Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3}function InterleavedBuffer(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=MathUtils.generateUUID()}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0}),Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:!0}),Object.assign(WebXRController.prototype,{constructor:WebXRController,getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),this},update:function(e,t,r){let n=null,i=null;const o=this._targetRay,a=this._grip;return e&&(null!==o&&(n=t.getPose(e.targetRaySpace,r),null!==n&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),null!==a&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)))),null!==o&&(o.visible=null!==n),null!==a&&(a.visible=null!==i),this}}),Object.assign(WebXRManager.prototype,EventDispatcher.prototype),WebGL1Renderer.prototype=Object.assign(Object.create(WebGLRenderer.prototype),{constructor:WebGL1Renderer,isWebGL1Renderer:!0}),Object.assign(FogExp2.prototype,{isFogExp2:!0,clone:function(){return new FogExp2(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}),Object.assign(Fog.prototype,{isFog:!0,clone:function(){return new Fog(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}),Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,r){e*=this.stride,r*=t.stride;for(let n=0,i=this.stride;n<i;n++)this.array[e+n]=t.array[r+n];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new InterleavedBuffer(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const _vector$6=new Vector3;function InterleavedBufferAttribute(e,t,r,n){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n}function SpriteMaterial(e){Material.call(this),this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}let _geometry;Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,r=this.data.count;t<r;t++)_vector$6.x=this.getX(t),_vector$6.y=this.getY(t),_vector$6.z=this.getZ(t),_vector$6.applyMatrix4(e),this.setXYZ(t,_vector$6.x,_vector$6.y,_vector$6.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this},setXYZ:function(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this},setXYZW:function(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this},clone:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return new BufferAttribute(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new InterleavedBufferAttribute(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const r=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[r+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),SpriteMaterial.prototype=Object.create(Material.prototype),SpriteMaterial.prototype.constructor=SpriteMaterial,SpriteMaterial.prototype.isSpriteMaterial=!0,SpriteMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};const _intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2;function Sprite(e){if(Object3D.call(this),this.type="Sprite",void 0===_geometry){_geometry=new BufferGeometry;const e=new InterleavedBuffer(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(e,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(e,2,3,!1))}this.geometry=_geometry,this.material=void 0!==e?e:new SpriteMaterial,this.center=new Vector2(.5,.5)}function transformVertex(e,t,r,n,i,o){_alignedPosition.subVectors(e,r).addScalar(.5).multiply(n),void 0!==i?(_rotatedPosition.x=o*_alignedPosition.x-i*_alignedPosition.y,_rotatedPosition.y=i*_alignedPosition.x+o*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition),e.copy(t),e.x+=_rotatedPosition.x,e.y+=_rotatedPosition.y,e.applyMatrix4(_viewWorldMatrix)}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);const r=this.material.rotation;let n,i;0!==r&&(i=Math.cos(r),n=Math.sin(r));const o=this.center;transformVertex(_vA$1.set(-.5,-.5,0),_mvPosition,o,_worldScale,n,i),transformVertex(_vB$1.set(.5,-.5,0),_mvPosition,o,_worldScale,n,i),transformVertex(_vC$1.set(.5,.5,0),_mvPosition,o,_worldScale,n,i),_uvA$1.set(0,0),_uvB$1.set(1,0),_uvC$1.set(1,1);let a=e.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,!1,_intersectPoint);if(null===a&&(transformVertex(_vB$1.set(-.5,.5,0),_mvPosition,o,_worldScale,n,i),_uvB$1.set(0,1),a=e.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,!1,_intersectPoint),null===a))return;const s=e.ray.origin.distanceTo(_intersectPoint);s<e.near||s>e.far||t.push({distance:s,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2),face:null,object:this})},copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const _v1$4=new Vector3,_v2$2=new Vector3;function LOD(){Object3D.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function SkinnedMesh(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:!0,copy:function(e){Object3D.prototype.copy.call(this,e,!1);const t=e.levels;for(let e=0,r=t.length;e<r;e++){const r=t[e];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);const r=this.levels;let n;for(n=0;n<r.length&&!(t<r[n].distance);n++);return r.splice(n,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let r,n;for(r=1,n=t.length;r<n&&!(e<t[r].distance);r++);return t[r-1].object}return null},raycast:function(e,t){if(this.levels.length>0){_v1$4.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(_v1$4);this.getObjectForDistance(r).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){_v1$4.setFromMatrixPosition(e.matrixWorld),_v2$2.setFromMatrixPosition(this.matrixWorld);const r=_v1$4.distanceTo(_v2$2)/e.zoom;let n,i;for(t[0].object.visible=!0,n=1,i=t.length;n<i&&r>=t[n].distance;n++)t[n-1].object.visible=!1,t[n].object.visible=!0;for(this._currentLevel=n-1;n<i;n++)t[n].object.visible=!1}},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const r=this.levels;for(let e=0,n=r.length;e<n;e++){const n=r[e];t.object.levels.push({object:n.object.uuid,distance:n.distance})}return t}}),SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,copy:function(e){return Mesh.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new Vector4,t=this.geometry.attributes.skinWeight;for(let r=0,n=t.count;r<n;r++){e.x=t.getX(r),e.y=t.getY(r),e.z=t.getZ(r),e.w=t.getW(r);const n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(r,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){Mesh.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const e=new Vector3,t=new Vector4,r=new Vector4,n=new Vector3,i=new Matrix4;return function(o,a){const s=this.skeleton,l=this.geometry;t.fromBufferAttribute(l.attributes.skinIndex,o),r.fromBufferAttribute(l.attributes.skinWeight,o),e.fromBufferAttribute(l.attributes.position,o).applyMatrix4(this.bindMatrix),a.set(0,0,0);for(let o=0;o<4;o++){const l=r.getComponent(o);if(0!==l){const r=t.getComponent(o);i.multiplyMatrices(s.bones[r].matrixWorld,s.boneInverses[r]),a.addScaledVector(n.copy(e).applyMatrix4(i),l)}}return a.applyMatrix4(this.bindMatrixInverse)}}()});const _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;function Skeleton(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Matrix4)}}function Bone(){Object3D.call(this),this.type="Bone"}Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const t=new Matrix4;this.bones[e]&&t.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,r=this.boneMatrices,n=this.boneTexture;for(let n=0,i=e.length;n<i;n++){const i=e[n]?e[n].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(i,t[n]),_offsetMatrix.toArray(r,16*n)}void 0!==n&&(n.needsUpdate=!0)},clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,r=this.bones.length;t<r;t++){const r=this.bones[t];if(r.name===e)return r}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:!0});const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;function InstancedMesh(e,t,r){Mesh.call(this,e,t),this.instanceMatrix=new BufferAttribute(new Float32Array(16*r),16),this.count=r,this.frustumCulled=!1}function LineBasicMaterial(e){Material.call(this),this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:!0,copy:function(e){return Mesh.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const r=this.matrixWorld,n=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0!==_mesh.material)for(let i=0;i<n;i++){this.getMatrixAt(i,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(r,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects);for(let e=0,r=_instanceIntersects.length;e<r;e++){const r=_instanceIntersects[e];r.instanceId=i,r.object=this,t.push(r)}_instanceIntersects.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){}}),LineBasicMaterial.prototype=Object.create(Material.prototype),LineBasicMaterial.prototype.constructor=LineBasicMaterial,LineBasicMaterial.prototype.isLineBasicMaterial=!0,LineBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const _start=new Vector3,_end=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$2=new Sphere;function Line(e,t,r){1===r&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new LineBasicMaterial,this.updateMorphTargets()}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,r=[0];for(let e=1,n=t.count;e<n;e++)_start.fromBufferAttribute(t,e-1),_end.fromBufferAttribute(t,e),r[e]=r[e-1],r[e]+=_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;r[0]=0;for(let e=1,n=t.length;e<n;e++)r[e]=r[e-1],r[e]+=t[e-1].distanceTo(t[e])}return this},raycast:function(e,t){const r=this.geometry,n=this.matrixWorld,i=e.params.Line.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere$2.copy(r.boundingSphere),_sphere$2.applyMatrix4(n),_sphere$2.radius+=i,!1===e.ray.intersectsSphere(_sphere$2))return;_inverseMatrix$1.getInverse(n),_ray$1.copy(e.ray).applyMatrix4(_inverseMatrix$1);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,s=new Vector3,l=new Vector3,c=new Vector3,u=new Vector3,d=this&&this.isLineSegments?2:1;if(r.isBufferGeometry){const n=r.index,i=r.attributes.position.array;if(null!==n){const r=n.array;for(let n=0,o=r.length-1;n<o;n+=d){const o=r[n],d=r[n+1];s.fromArray(i,3*o),l.fromArray(i,3*d);if(_ray$1.distanceSqToSegment(s,l,u,c)>a)continue;u.applyMatrix4(this.matrixWorld);const h=e.ray.origin.distanceTo(u);h<e.near||h>e.far||t.push({distance:h,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else for(let r=0,n=i.length/3-1;r<n;r+=d){s.fromArray(i,3*r),l.fromArray(i,3*r+3);if(_ray$1.distanceSqToSegment(s,l,u,c)>a)continue;u.applyMatrix4(this.matrixWorld);const n=e.ray.origin.distanceTo(u);n<e.near||n>e.far||t.push({distance:n,point:c.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else if(r.isGeometry){const n=r.vertices,i=n.length;for(let r=0;r<i-1;r+=d){if(_ray$1.distanceSqToSegment(n[r],n[r+1],u,c)>a)continue;u.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(u);i<e.near||i>e.far||t.push({distance:i,point:c.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const _start$1=new Vector3,_end$1=new Vector3;function LineSegments(e,t){Line.call(this,e,t),this.type="LineSegments"}function LineLoop(e,t){Line.call(this,e,t),this.type="LineLoop"}function PointsMaterial(e){Material.call(this),this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,r=[];for(let e=0,n=t.count;e<n;e+=2)_start$1.fromBufferAttribute(t,e),_end$1.fromBufferAttribute(t,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+_start$1.distanceTo(_end$1);e.setAttribute("lineDistance",new Float32BufferAttribute(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,r=e.lineDistances;for(let e=0,n=t.length;e<n;e+=2)_start$1.copy(t[e]),_end$1.copy(t[e+1]),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+_start$1.distanceTo(_end$1)}return this}}),LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0}),PointsMaterial.prototype=Object.create(Material.prototype),PointsMaterial.prototype.constructor=PointsMaterial,PointsMaterial.prototype.isPointsMaterial=!0,PointsMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_position$1=new Vector3;function Points(e,t){Object3D.call(this),this.type="Points",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new PointsMaterial,this.updateMorphTargets()}function testPoint(e,t,r,n,i,o,a){const s=_ray$2.distanceSqToPoint(e);if(s<r){const r=new Vector3;_ray$2.closestPointToPoint(e,r),r.applyMatrix4(n);const l=i.ray.origin.distanceTo(r);if(l<i.near||l>i.far)return;o.push({distance:l,distanceToRay:Math.sqrt(s),point:r,index:t,face:null,object:a})}}function VideoTexture(e,t,r,n,i,o,a,s,l){Texture.call(this,e,t,r,n,i,o,a,s,l),this.format=void 0!==a?a:RGBFormat,this.minFilter=void 0!==o?o:LinearFilter,this.magFilter=void 0!==i?i:LinearFilter,this.generateMipmaps=!1}function CompressedTexture(e,t,r,n,i,o,a,s,l,c,u,d){Texture.call(this,null,o,a,s,l,c,n,i,u,d),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function CanvasTexture(e,t,r,n,i,o,a,s,l){Texture.call(this,e,t,r,n,i,o,a,s,l),this.needsUpdate=!0}function DepthTexture(e,t,r,n,i,o,a,s,l,c){if((c=void 0!==c?c:DepthFormat)!==DepthFormat&&c!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===r&&c===DepthFormat&&(r=UnsignedShortType),void 0===r&&c===DepthStencilFormat&&(r=UnsignedInt248Type),Texture.call(this,null,n,i,o,a,s,c,r,l),this.image={width:e,height:t},this.magFilter=void 0!==a?a:NearestFilter,this.minFilter=void 0!==s?s:NearestFilter,this.flipY=!1,this.generateMipmaps=!1}function WireframeGeometry(e){BufferGeometry.call(this),this.type="WireframeGeometry";const t=[],r=[0,0],n={},i=["a","b","c"];if(e&&e.isGeometry){const o=e.faces;for(let e=0,t=o.length;e<t;e++){const t=o[e];for(let e=0;e<3;e++){const o=t[i[e]],a=t[i[(e+1)%3]];r[0]=Math.min(o,a),r[1]=Math.max(o,a);const s=r[0]+","+r[1];void 0===n[s]&&(n[s]={index1:r[0],index2:r[1]})}}for(const r in n){const i=n[r];let o=e.vertices[i.index1];t.push(o.x,o.y,o.z),o=e.vertices[i.index2],t.push(o.x,o.y,o.z)}}else if(e&&e.isBufferGeometry){let i=new Vector3;if(null!==e.index){const o=e.attributes.position,a=e.index;let s=e.groups;0===s.length&&(s=[{start:0,count:a.count,materialIndex:0}]);for(let e=0,t=s.length;e<t;++e){const t=s[e],i=t.start;for(let e=i,o=i+t.count;e<o;e+=3)for(let t=0;t<3;t++){const i=a.getX(e+t),o=a.getX(e+(t+1)%3);r[0]=Math.min(i,o),r[1]=Math.max(i,o);const s=r[0]+","+r[1];void 0===n[s]&&(n[s]={index1:r[0],index2:r[1]})}}for(const e in n){const r=n[e];i.fromBufferAttribute(o,r.index1),t.push(i.x,i.y,i.z),i.fromBufferAttribute(o,r.index2),t.push(i.x,i.y,i.z)}}else{const r=e.attributes.position;for(let e=0,n=r.count/3;e<n;e++)for(let n=0;n<3;n++){const o=3*e+n;i.fromBufferAttribute(r,o),t.push(i.x,i.y,i.z);const a=3*e+(n+1)%3;i.fromBufferAttribute(r,a),t.push(i.x,i.y,i.z)}}}this.setAttribute("position",new Float32BufferAttribute(t,3))}function ParametricGeometry(e,t,r){Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:r},this.fromBufferGeometry(new ParametricBufferGeometry(e,t,r)),this.mergeVertices()}function ParametricBufferGeometry(e,t,r){BufferGeometry.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:r};const n=[],i=[],o=[],a=[],s=1e-5,l=new Vector3,c=new Vector3,u=new Vector3,d=new Vector3,h=new Vector3;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=t+1;for(let n=0;n<=r;n++){const p=n/r;for(let r=0;r<=t;r++){const n=r/t;e(n,p,c),i.push(c.x,c.y,c.z),n-s>=0?(e(n-s,p,u),d.subVectors(c,u)):(e(n+s,p,u),d.subVectors(u,c)),p-s>=0?(e(n,p-s,u),h.subVectors(c,u)):(e(n,p+s,u),h.subVectors(u,c)),l.crossVectors(d,h).normalize(),o.push(l.x,l.y,l.z),a.push(n,p)}}for(let e=0;e<r;e++)for(let r=0;r<t;r++){const t=e*p+r,i=e*p+r+1,o=(e+1)*p+r+1,a=(e+1)*p+r;n.push(t,i,a),n.push(i,o,a)}this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(i,3)),this.setAttribute("normal",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(a,2))}function PolyhedronGeometry(e,t,r,n){Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n},this.fromBufferGeometry(new PolyhedronBufferGeometry(e,t,r,n)),this.mergeVertices()}function PolyhedronBufferGeometry(e,t,r,n){BufferGeometry.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:r,detail:n},r=r||1;const i=[],o=[];function a(e,t,r,n){const i=Math.pow(2,n),o=[];for(let n=0;n<=i;n++){o[n]=[];const a=e.clone().lerp(r,n/i),s=t.clone().lerp(r,n/i),l=i-n;for(let e=0;e<=l;e++)o[n][e]=0===e&&n===i?a:a.clone().lerp(s,e/l)}for(let e=0;e<i;e++)for(let t=0;t<2*(i-e)-1;t++){const r=Math.floor(t/2);t%2==0?(s(o[e][r+1]),s(o[e+1][r]),s(o[e][r])):(s(o[e][r+1]),s(o[e+1][r+1]),s(o[e+1][r]))}}function s(e){i.push(e.x,e.y,e.z)}function l(t,r){const n=3*t;r.x=e[n+0],r.y=e[n+1],r.z=e[n+2]}function c(e,t,r,n){n<0&&1===e.x&&(o[t]=e.x-1),0===r.x&&0===r.z&&(o[t]=n/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}!function(e){const r=new Vector3,n=new Vector3,i=new Vector3;for(let o=0;o<t.length;o+=3)l(t[o+0],r),l(t[o+1],n),l(t[o+2],i),a(r,n,i,e)}(n=n||0),function(e){const t=new Vector3;for(let r=0;r<i.length;r+=3)t.x=i[r+0],t.y=i[r+1],t.z=i[r+2],t.normalize().multiplyScalar(e),i[r+0]=t.x,i[r+1]=t.y,i[r+2]=t.z}(r),function(){const e=new Vector3;for(let r=0;r<i.length;r+=3){e.x=i[r+0],e.y=i[r+1],e.z=i[r+2];const n=u(e)/2/Math.PI+.5,a=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);o.push(n,1-a)}var t;(function(){const e=new Vector3,t=new Vector3,r=new Vector3,n=new Vector3,a=new Vector2,s=new Vector2,l=new Vector2;for(let d=0,h=0;d<i.length;d+=9,h+=6){e.set(i[d+0],i[d+1],i[d+2]),t.set(i[d+3],i[d+4],i[d+5]),r.set(i[d+6],i[d+7],i[d+8]),a.set(o[h+0],o[h+1]),s.set(o[h+2],o[h+3]),l.set(o[h+4],o[h+5]),n.copy(e).add(t).add(r).divideScalar(3);const p=u(n);c(a,h+0,e,p),c(s,h+2,t,p),c(l,h+4,r,p)}})(),function(){for(let e=0;e<o.length;e+=6){const t=o[e+0],r=o[e+2],n=o[e+4],i=Math.max(t,r,n),a=Math.min(t,r,n);i>.9&&a<.1&&(t<.2&&(o[e+0]+=1),r<.2&&(o[e+2]+=1),n<.2&&(o[e+4]+=1))}}()}(),this.setAttribute("position",new Float32BufferAttribute(i,3)),this.setAttribute("normal",new Float32BufferAttribute(i.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(o,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}function TetrahedronGeometry(e,t){Geometry.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new TetrahedronBufferGeometry(e,t)),this.mergeVertices()}function TetrahedronBufferGeometry(e,t){PolyhedronBufferGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}function OctahedronGeometry(e,t){Geometry.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new OctahedronBufferGeometry(e,t)),this.mergeVertices()}function OctahedronBufferGeometry(e,t){PolyhedronBufferGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}function IcosahedronGeometry(e,t){Geometry.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new IcosahedronBufferGeometry(e,t)),this.mergeVertices()}function IcosahedronBufferGeometry(e,t){const r=(1+Math.sqrt(5))/2,n=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1];PolyhedronBufferGeometry.call(this,n,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}function DodecahedronGeometry(e,t){Geometry.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new DodecahedronBufferGeometry(e,t)),this.mergeVertices()}function DodecahedronBufferGeometry(e,t){const r=(1+Math.sqrt(5))/2,n=1/r,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n];PolyhedronBufferGeometry.call(this,i,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}function TubeGeometry(e,t,r,n,i,o){Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i},void 0!==o&&console.warn("THREE.TubeGeometry: taper has been removed.");const a=new TubeBufferGeometry(e,t,r,n,i);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}function TubeBufferGeometry(e,t,r,n,i){BufferGeometry.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:r,radialSegments:n,closed:i},t=t||64,r=r||1,n=n||8,i=i||!1;const o=e.computeFrenetFrames(t,i);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new Vector3,s=new Vector3,l=new Vector2;let c=new Vector3;const u=[],d=[],h=[],p=[];function m(i){c=e.getPointAt(i/t,c);const l=o.normals[i],h=o.binormals[i];for(let e=0;e<=n;e++){const t=e/n*Math.PI*2,i=Math.sin(t),o=-Math.cos(t);s.x=o*l.x+i*h.x,s.y=o*l.y+i*h.y,s.z=o*l.z+i*h.z,s.normalize(),d.push(s.x,s.y,s.z),a.x=c.x+r*s.x,a.y=c.y+r*s.y,a.z=c.z+r*s.z,u.push(a.x,a.y,a.z)}}!function(){for(let e=0;e<t;e++)m(e);m(!1===i?t:0),function(){for(let e=0;e<=t;e++)for(let r=0;r<=n;r++)l.x=e/t,l.y=r/n,h.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){const r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),o=(n+1)*e+t,a=(n+1)*(e-1)+t;p.push(r,i,a),p.push(i,o,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(u,3)),this.setAttribute("normal",new Float32BufferAttribute(d,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}function TorusKnotGeometry(e,t,r,n,i,o,a){Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:o},void 0!==a&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new TorusKnotBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()}function TorusKnotBufferGeometry(e,t,r,n,i,o){BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:r,radialSegments:n,p:i,q:o},e=e||1,t=t||.4,r=Math.floor(r)||64,n=Math.floor(n)||8,i=i||2,o=o||3;const a=[],s=[],l=[],c=[],u=new Vector3,d=new Vector3,h=new Vector3,p=new Vector3,m=new Vector3,f=new Vector3,g=new Vector3;for(let a=0;a<=r;++a){const v=a/r*i*Math.PI*2;_(v,i,o,e,h),_(v+.01,i,o,e,p),f.subVectors(p,h),g.addVectors(p,h),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let e=0;e<=n;++e){const i=e/n*Math.PI*2,o=-t*Math.cos(i),p=t*Math.sin(i);u.x=h.x+(o*g.x+p*m.x),u.y=h.y+(o*g.y+p*m.y),u.z=h.z+(o*g.z+p*m.z),s.push(u.x,u.y,u.z),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(a/r),c.push(e/n)}}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){const r=(n+1)*(e-1)+(t-1),i=(n+1)*e+(t-1),o=(n+1)*e+t,s=(n+1)*(e-1)+t;a.push(r,i,s),a.push(i,o,s)}function _(e,t,r,n,i){const o=Math.cos(e),a=Math.sin(e),s=r/t*e,l=Math.cos(s);i.x=n*(2+l)*.5*o,i.y=n*(2+l)*a*.5,i.z=n*Math.sin(s)*.5}this.setIndex(a),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}function TorusGeometry(e,t,r,n,i){Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},this.fromBufferGeometry(new TorusBufferGeometry(e,t,r,n,i)),this.mergeVertices()}function TorusBufferGeometry(e,t,r,n,i){BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:r,tubularSegments:n,arc:i},e=e||1,t=t||.4,r=Math.floor(r)||8,n=Math.floor(n)||6,i=i||2*Math.PI;const o=[],a=[],s=[],l=[],c=new Vector3,u=new Vector3,d=new Vector3;for(let o=0;o<=r;o++)for(let h=0;h<=n;h++){const p=h/n*i,m=o/r*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(p),u.y=(e+t*Math.cos(m))*Math.sin(p),u.z=t*Math.sin(m),a.push(u.x,u.y,u.z),c.x=e*Math.cos(p),c.y=e*Math.sin(p),d.subVectors(u,c).normalize(),s.push(d.x,d.y,d.z),l.push(h/n),l.push(o/r)}for(let e=1;e<=r;e++)for(let t=1;t<=n;t++){const r=(n+1)*e+t-1,i=(n+1)*(e-1)+t-1,a=(n+1)*(e-1)+t,s=(n+1)*e+t;o.push(r,i,s),o.push(i,a,s)}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(a,3)),this.setAttribute("normal",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2))}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const r=this.geometry,n=this.matrixWorld,i=e.params.Points.threshold;if(null===r.boundingSphere&&r.computeBoundingSphere(),_sphere$3.copy(r.boundingSphere),_sphere$3.applyMatrix4(n),_sphere$3.radius+=i,!1===e.ray.intersectsSphere(_sphere$3))return;_inverseMatrix$2.getInverse(n),_ray$2.copy(e.ray).applyMatrix4(_inverseMatrix$2);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o;if(r.isBufferGeometry){const i=r.index,o=r.attributes.position.array;if(null!==i){const r=i.array;for(let i=0,s=r.length;i<s;i++){const s=r[i];_position$1.fromArray(o,3*s),testPoint(_position$1,s,a,n,e,t,this)}}else for(let r=0,i=o.length/3;r<i;r++)_position$1.fromArray(o,3*r),testPoint(_position$1,r,a,n,e,t,this)}else{const i=r.vertices;for(let r=0,o=i.length;r<o;r++)testPoint(i[r],r,a,n,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,r=Object.keys(t);if(r.length>0){const e=t[r[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,r=e.length;t<r;t++){const r=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:!0,update:function(){const e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),CompressedTexture.prototype=Object.create(Texture.prototype),CompressedTexture.prototype.constructor=CompressedTexture,CompressedTexture.prototype.isCompressedTexture=!0,CanvasTexture.prototype=Object.create(Texture.prototype),CanvasTexture.prototype.constructor=CanvasTexture,CanvasTexture.prototype.isCanvasTexture=!0,DepthTexture.prototype=Object.create(Texture.prototype),DepthTexture.prototype.constructor=DepthTexture,DepthTexture.prototype.isDepthTexture=!0,WireframeGeometry.prototype=Object.create(BufferGeometry.prototype),WireframeGeometry.prototype.constructor=WireframeGeometry,ParametricGeometry.prototype=Object.create(Geometry.prototype),ParametricGeometry.prototype.constructor=ParametricGeometry,ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry,PolyhedronGeometry.prototype=Object.create(Geometry.prototype),PolyhedronGeometry.prototype.constructor=PolyhedronGeometry,PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry,TetrahedronGeometry.prototype=Object.create(Geometry.prototype),TetrahedronGeometry.prototype.constructor=TetrahedronGeometry,TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry,OctahedronGeometry.prototype=Object.create(Geometry.prototype),OctahedronGeometry.prototype.constructor=OctahedronGeometry,OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry,IcosahedronGeometry.prototype=Object.create(Geometry.prototype),IcosahedronGeometry.prototype.constructor=IcosahedronGeometry,IcosahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry,DodecahedronGeometry.prototype=Object.create(Geometry.prototype),DodecahedronGeometry.prototype.constructor=DodecahedronGeometry,DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry,TubeGeometry.prototype=Object.create(Geometry.prototype),TubeGeometry.prototype.constructor=TubeGeometry,TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TubeBufferGeometry.prototype.constructor=TubeBufferGeometry,TubeBufferGeometry.prototype.toJSON=function(){const e=BufferGeometry.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e},TorusKnotGeometry.prototype=Object.create(Geometry.prototype),TorusKnotGeometry.prototype.constructor=TorusKnotGeometry,TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry,TorusGeometry.prototype=Object.create(Geometry.prototype),TorusGeometry.prototype.constructor=TorusGeometry,TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusBufferGeometry.prototype.constructor=TorusBufferGeometry;const Earcut={triangulate:function(e,t,r){r=r||2;let n,i,o,a,s,l,c,u=t&&t.length,d=u?t[0]*r:e.length,h=linkedList(e,0,d,r,!0),p=[];if(!h||h.next===h.prev)return p;if(u&&(h=eliminateHoles(e,t,h,r)),e.length>80*r){n=o=e[0],i=a=e[1];for(let t=r;t<d;t+=r)s=e[t],l=e[t+1],s<n&&(n=s),l<i&&(i=l),s>o&&(o=s),l>a&&(a=l);c=Math.max(o-n,a-i),c=0!==c?1/c:0}return earcutLinked(h,p,r,n,i,c),p}};function linkedList(e,t,r,n,i){let o,a;if(i===signedArea(e,t,r,n)>0)for(o=t;o<r;o+=n)a=insertNode(o,e[o],e[o+1],a);else for(o=r-n;o>=t;o-=n)a=insertNode(o,e[o],e[o+1],a);return a&&equals(a,a.next)&&(removeNode(a),a=a.next),a}function filterPoints(e,t){if(!e)return e;t||(t=e);let r,n=e;do{if(r=!1,n.steiner||!equals(n,n.next)&&0!==area(n.prev,n,n.next))n=n.next;else{if(removeNode(n),n=t=n.prev,n===n.next)break;r=!0}}while(r||n!==t);return t}function earcutLinked(e,t,r,n,i,o,a){if(!e)return;!a&&o&&indexCurve(e,n,i,o);let s,l,c=e;for(;e.prev!==e.next;)if(s=e.prev,l=e.next,o?isEarHashed(e,n,i,o):isEar(e))t.push(s.i/r),t.push(e.i/r),t.push(l.i/r),removeNode(e),e=l.next,c=l.next;else if((e=l)===c){a?1===a?earcutLinked(e=cureLocalIntersections(filterPoints(e),t,r),t,r,n,i,o,2):2===a&&splitEarcut(e,t,r,n,i,o):earcutLinked(filterPoints(e),t,r,n,i,o,1);break}}function isEar(e){let t=e.prev,r=e,n=e.next;if(area(t,r,n)>=0)return!1;let i=e.next.next;for(;i!==e.prev;){if(pointInTriangle(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&area(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function isEarHashed(e,t,r,n){let i=e.prev,o=e,a=e.next;if(area(i,o,a)>=0)return!1;let s=i.x<o.x?i.x<a.x?i.x:a.x:o.x<a.x?o.x:a.x,l=i.y<o.y?i.y<a.y?i.y:a.y:o.y<a.y?o.y:a.y,c=i.x>o.x?i.x>a.x?i.x:a.x:o.x>a.x?o.x:a.x,u=i.y>o.y?i.y>a.y?i.y:a.y:o.y>a.y?o.y:a.y,d=zOrder(s,l,t,r,n),h=zOrder(c,u,t,r,n),p=e.prevZ,m=e.nextZ;for(;p&&p.z>=d&&m&&m.z<=h;){if(p!==e.prev&&p!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=d;){if(p!==e.prev&&p!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=h;){if(m!==e.prev&&m!==e.next&&pointInTriangle(i.x,i.y,o.x,o.y,a.x,a.y,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function cureLocalIntersections(e,t,r){let n=e;do{let i=n.prev,o=n.next.next;!equals(i,o)&&intersects(i,n,n.next,o)&&locallyInside(i,o)&&locallyInside(o,i)&&(t.push(i.i/r),t.push(n.i/r),t.push(o.i/r),removeNode(n),removeNode(n.next),n=e=o),n=n.next}while(n!==e);return filterPoints(n)}function splitEarcut(e,t,r,n,i,o){let a=e;do{let e=a.next.next;for(;e!==a.prev;){if(a.i!==e.i&&isValidDiagonal(a,e)){let s=splitPolygon(a,e);return a=filterPoints(a,a.next),s=filterPoints(s,s.next),earcutLinked(a,t,r,n,i,o),void earcutLinked(s,t,r,n,i,o)}e=e.next}a=a.next}while(a!==e)}function eliminateHoles(e,t,r,n){let i,o,a,s,l,c=[];for(i=0,o=t.length;i<o;i++)a=t[i]*n,s=i<o-1?t[i+1]*n:e.length,l=linkedList(e,a,s,n,!1),l===l.next&&(l.steiner=!0),c.push(getLeftmost(l));for(c.sort(compareX),i=0;i<c.length;i++)eliminateHole(c[i],r),r=filterPoints(r,r.next);return r}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){if(t=findHoleBridge(e,t)){const r=splitPolygon(t,e);filterPoints(t,t.next),filterPoints(r,r.next)}}function findHoleBridge(e,t){let r,n=t,i=e.x,o=e.y,a=-1/0;do{if(o<=n.y&&o>=n.next.y&&n.next.y!==n.y){let e=n.x+(o-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(e<=i&&e>a){if(a=e,e===i){if(o===n.y)return n;if(o===n.next.y)return n.next}r=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!r)return null;if(i===a)return r;let s,l=r,c=r.x,u=r.y,d=1/0;n=r;do{i>=n.x&&n.x>=c&&i!==n.x&&pointInTriangle(o<u?i:a,o,c,u,o<u?a:i,o,n.x,n.y)&&(s=Math.abs(o-n.y)/(i-n.x),locallyInside(n,e)&&(s<d||s===d&&(n.x>r.x||n.x===r.x&&sectorContainsSector(r,n)))&&(r=n,d=s)),n=n.next}while(n!==l);return r}function sectorContainsSector(e,t){return area(e.prev,e,t.prev)<0&&area(t.next,e,e.next)<0}function indexCurve(e,t,r,n){let i=e;do{null===i.z&&(i.z=zOrder(i.x,i.y,t,r,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,sortLinked(i)}function sortLinked(e){let t,r,n,i,o,a,s,l,c=1;do{for(r=e,e=null,o=null,a=0;r;){for(a++,n=r,s=0,t=0;t<c&&(s++,n=n.nextZ,n);t++);for(l=c;s>0||l>0&&n;)0!==s&&(0===l||!n||r.z<=n.z)?(i=r,r=r.nextZ,s--):(i=n,n=n.nextZ,l--),o?o.nextZ=i:e=i,i.prevZ=o,o=i;r=n}o.nextZ=null,c*=2}while(a>1);return e}function zOrder(e,t,r,n,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function getLeftmost(e){let t=e,r=e;do{(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next}while(t!==e);return r}function pointInTriangle(e,t,r,n,i,o,a,s){return(i-a)*(t-s)-(e-a)*(o-s)>=0&&(e-a)*(n-s)-(r-a)*(t-s)>=0&&(r-a)*(o-s)-(i-a)*(n-s)>=0}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&(locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)&&(area(e.prev,e,t.prev)||area(e,t.prev,t))||equals(e,t)&&area(e.prev,e,e.next)>0&&area(t.prev,t,t.next)>0)}function area(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,r,n){const i=sign(area(e,t,r)),o=sign(area(e,t,n)),a=sign(area(r,n,e)),s=sign(area(r,n,t));return i!==o&&a!==s||(!(0!==i||!onSegment(e,r,t))||(!(0!==o||!onSegment(e,n,t))||(!(0!==a||!onSegment(r,e,n))||!(0!==s||!onSegment(r,t,n)))))}function onSegment(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function sign(e){return e>0?1:e<0?-1:0}function intersectsPolygon(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&intersects(r,r.next,e,t))return!0;r=r.next}while(r!==e);return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?area(e,t,e.next)>=0&&area(e,e.prev,t)>=0:area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){let r=e,n=!1,i=(e.x+t.x)/2,o=(e.y+t.y)/2;do{r.y>o!=r.next.y>o&&r.next.y!==r.y&&i<(r.next.x-r.x)*(o-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next}while(r!==e);return n}function splitPolygon(e,t){let r=new Node(e.i,e.x,e.y),n=new Node(t.i,t.x,t.y),i=e.next,o=t.prev;return e.next=t,t.prev=e,r.next=i,i.prev=r,n.next=r,r.prev=n,o.next=n,n.prev=o,n}function insertNode(e,t,r,n){const i=new Node(e,t,r);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(e,t,r,n){let i=0;for(let o=t,a=r-n;o<r;o+=n)i+=(e[a]-e[o])*(e[o+1]+e[a+1]),a=o;return i}const ShapeUtils={area:function(e){const t=e.length;let r=0;for(let n=t-1,i=0;i<t;n=i++)r+=e[n].x*e[i].y-e[i].x*e[n].y;return.5*r},isClockWise:function(e){return ShapeUtils.area(e)<0},triangulateShape:function(e,t){const r=[],n=[],i=[];removeDupEndPts(e),addContour(r,e);let o=e.length;t.forEach(removeDupEndPts);for(let e=0;e<t.length;e++)n.push(o),o+=t[e].length,addContour(r,t[e]);const a=Earcut.triangulate(r,n);for(let e=0;e<a.length;e+=3)i.push(a.slice(e,e+3));return i}};function removeDupEndPts(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function addContour(e,t){for(let r=0;r<t.length;r++)e.push(t[r].x),e.push(t[r].y)}function ExtrudeGeometry(e,t){Geometry.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new ExtrudeBufferGeometry(e,t)),this.mergeVertices()}function ExtrudeBufferGeometry(e,t){BufferGeometry.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const r=this,n=[],i=[];for(let t=0,r=e.length;t<r;t++){o(e[t])}function o(e){const o=[],a=void 0!==t.curveSegments?t.curveSegments:12,s=void 0!==t.steps?t.steps:1;let l=void 0!==t.depth?t.depth:100,c=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:6,d=void 0!==t.bevelSize?t.bevelSize:u-2,h=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:WorldUVGenerator;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,_,v,y,b,x=!1;m&&(g=m.getSpacedPoints(s),x=!0,c=!1,_=m.computeFrenetFrames(s,!1),v=new Vector3,y=new Vector3,b=new Vector3),c||(p=0,u=0,d=0,h=0);const S=e.extractPoints(a);let M=S.shape;const D=S.holes;if(!ShapeUtils.isClockWise(M)){M=M.reverse();for(let e=0,t=D.length;e<t;e++){const t=D[e];ShapeUtils.isClockWise(t)&&(D[e]=t.reverse())}}const w=ShapeUtils.triangulateShape(M,D),T=M;for(let e=0,t=D.length;e<t;e++){const t=D[e];M=M.concat(t)}function G(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}const A=M.length,L=w.length;function E(e,t,r){let n,i,o;const a=e.x-t.x,s=e.y-t.y,l=r.x-e.x,c=r.y-e.y,u=a*a+s*s,d=a*c-s*l;if(Math.abs(d)>Number.EPSILON){const d=Math.sqrt(u),h=Math.sqrt(l*l+c*c),p=t.x-s/d,m=t.y+a/d,f=((r.x-c/h-p)*c-(r.y+l/h-m)*l)/(a*c-s*l);n=p+a*f-e.x,i=m+s*f-e.y;const g=n*n+i*i;if(g<=2)return new Vector2(n,i);o=Math.sqrt(g/2)}else{let e=!1;a>Number.EPSILON?l>Number.EPSILON&&(e=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(s)===Math.sign(c)&&(e=!0),e?(n=-s,i=a,o=Math.sqrt(u)):(n=a,i=s,o=Math.sqrt(u/2))}return new Vector2(n/o,i/o)}const C=[];for(let e=0,t=T.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),C[e]=E(T[e],T[r],T[n]);const R=[];let P,B=C.concat();for(let e=0,t=D.length;e<t;e++){const t=D[e];P=[];for(let e=0,r=t.length,n=r-1,i=e+1;e<r;e++,n++,i++)n===r&&(n=0),i===r&&(i=0),P[e]=E(t[e],t[n],t[i]);R.push(P),B=B.concat(P)}for(let e=0;e<p;e++){const t=e/p,r=u*Math.cos(t*Math.PI/2),n=d*Math.sin(t*Math.PI/2)+h;for(let e=0,t=T.length;e<t;e++){const t=G(T[e],C[e],n);j(t.x,t.y,-r)}for(let e=0,t=D.length;e<t;e++){const t=D[e];P=R[e];for(let e=0,i=t.length;e<i;e++){const i=G(t[e],P[e],n);j(i.x,i.y,-r)}}}const k=d+h;for(let e=0;e<A;e++){const t=c?G(M[e],B[e],k):M[e];x?(y.copy(_.normals[0]).multiplyScalar(t.x),v.copy(_.binormals[0]).multiplyScalar(t.y),b.copy(g[0]).add(y).add(v),j(b.x,b.y,b.z)):j(t.x,t.y,0)}for(let e=1;e<=s;e++)for(let t=0;t<A;t++){const r=c?G(M[t],B[t],k):M[t];x?(y.copy(_.normals[e]).multiplyScalar(r.x),v.copy(_.binormals[e]).multiplyScalar(r.y),b.copy(g[e]).add(y).add(v),j(b.x,b.y,b.z)):j(r.x,r.y,l/s*e)}for(let e=p-1;e>=0;e--){const t=e/p,r=u*Math.cos(t*Math.PI/2),n=d*Math.sin(t*Math.PI/2)+h;for(let e=0,t=T.length;e<t;e++){const t=G(T[e],C[e],n);j(t.x,t.y,l+r)}for(let e=0,t=D.length;e<t;e++){const t=D[e];P=R[e];for(let e=0,i=t.length;e<i;e++){const i=G(t[e],P[e],n);x?j(i.x,i.y+g[s-1].y,g[s-1].x+r):j(i.x,i.y,l+r)}}}function W(e,t){let r=e.length;for(;--r>=0;){const n=r;let i=r-1;i<0&&(i=e.length-1);for(let e=0,r=s+2*p;e<r;e++){const r=A*e,o=A*(e+1);O(t+n+r,t+i+r,t+i+o,t+n+o)}}}function j(e,t,r){o.push(e),o.push(t),o.push(r)}function I(e,t,i){F(e),F(t),F(i);const o=n.length/3,a=f.generateTopUV(r,n,o-3,o-2,o-1);N(a[0]),N(a[1]),N(a[2])}function O(e,t,i,o){F(e),F(t),F(o),F(t),F(i),F(o);const a=n.length/3,s=f.generateSideWallUV(r,n,a-6,a-3,a-2,a-1);N(s[0]),N(s[1]),N(s[3]),N(s[1]),N(s[2]),N(s[3])}function F(e){n.push(o[3*e+0]),n.push(o[3*e+1]),n.push(o[3*e+2])}function N(e){i.push(e.x),i.push(e.y)}!function(){const e=n.length/3;if(c){let e=0,t=A*e;for(let e=0;e<L;e++){const r=w[e];I(r[2]+t,r[1]+t,r[0]+t)}e=s+2*p,t=A*e;for(let e=0;e<L;e++){const r=w[e];I(r[0]+t,r[1]+t,r[2]+t)}}else{for(let e=0;e<L;e++){const t=w[e];I(t[2],t[1],t[0])}for(let e=0;e<L;e++){const t=w[e];I(t[0]+A*s,t[1]+A*s,t[2]+A*s)}}r.addGroup(e,n.length/3-e,0)}(),function(){const e=n.length/3;let t=0;W(T,t),t+=T.length;for(let e=0,r=D.length;e<r;e++){const r=D[e];W(r,t),t+=r.length}r.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("uv",new Float32BufferAttribute(i,2)),this.computeVertexNormals()}ExtrudeGeometry.prototype=Object.create(Geometry.prototype),ExtrudeGeometry.prototype.constructor=ExtrudeGeometry,ExtrudeGeometry.prototype.toJSON=function(){const e=Geometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,this.parameters.options,e)},ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry,ExtrudeBufferGeometry.prototype.toJSON=function(){const e=BufferGeometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,this.parameters.options,e)};const WorldUVGenerator={generateTopUV:function(e,t,r,n,i){const o=t[3*r],a=t[3*r+1],s=t[3*n],l=t[3*n+1],c=t[3*i],u=t[3*i+1];return[new Vector2(o,a),new Vector2(s,l),new Vector2(c,u)]},generateSideWallUV:function(e,t,r,n,i,o){const a=t[3*r],s=t[3*r+1],l=t[3*r+2],c=t[3*n],u=t[3*n+1],d=t[3*n+2],h=t[3*i],p=t[3*i+1],m=t[3*i+2],f=t[3*o],g=t[3*o+1],_=t[3*o+2];return Math.abs(s-u)<.01?[new Vector2(a,1-l),new Vector2(c,1-d),new Vector2(h,1-m),new Vector2(f,1-_)]:[new Vector2(s,1-l),new Vector2(u,1-d),new Vector2(p,1-m),new Vector2(g,1-_)]}};function toJSON(e,t,r){if(r.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){const n=e[t];r.shapes.push(n.uuid)}else r.shapes.push(e.uuid);return void 0!==t.extrudePath&&(r.options.extrudePath=t.extrudePath.toJSON()),r}function TextGeometry(e,t){Geometry.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new TextBufferGeometry(e,t)),this.mergeVertices()}function TextBufferGeometry(e,t){const r=(t=t||{}).font;if(!r||!r.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Geometry;const n=r.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),ExtrudeBufferGeometry.call(this,n,t),this.type="TextBufferGeometry"}function SphereGeometry(e,t,r,n,i,o,a){Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new SphereBufferGeometry(e,t,r,n,i,o,a)),this.mergeVertices()}function SphereBufferGeometry(e,t,r,n,i,o,a){BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:r,phiStart:n,phiLength:i,thetaStart:o,thetaLength:a},e=e||1,t=Math.max(3,Math.floor(t)||8),r=Math.max(2,Math.floor(r)||6),n=void 0!==n?n:0,i=void 0!==i?i:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;const s=Math.min(o+a,Math.PI);let l=0;const c=[],u=new Vector3,d=new Vector3,h=[],p=[],m=[],f=[];for(let h=0;h<=r;h++){const g=[],_=h/r;let v=0;0==h&&0==o?v=.5/t:h==r&&s==Math.PI&&(v=-.5/t);for(let r=0;r<=t;r++){const s=r/t;u.x=-e*Math.cos(n+s*i)*Math.sin(o+_*a),u.y=e*Math.cos(o+_*a),u.z=e*Math.sin(n+s*i)*Math.sin(o+_*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),m.push(d.x,d.y,d.z),f.push(s+v,1-_),g.push(l++)}c.push(g)}for(let e=0;e<r;e++)for(let n=0;n<t;n++){const t=c[e][n+1],i=c[e][n],a=c[e+1][n],l=c[e+1][n+1];(0!==e||o>0)&&h.push(t,i,l),(e!==r-1||s<Math.PI)&&h.push(i,a,l)}this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}function RingGeometry(e,t,r,n,i,o){Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:o},this.fromBufferGeometry(new RingBufferGeometry(e,t,r,n,i,o)),this.mergeVertices()}function RingBufferGeometry(e,t,r,n,i,o){BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:o},e=e||.5,t=t||1,i=void 0!==i?i:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8;const a=[],s=[],l=[],c=[];let u=e;const d=(t-e)/(n=void 0!==n?Math.max(1,n):1),h=new Vector3,p=new Vector2;for(let e=0;e<=n;e++){for(let e=0;e<=r;e++){const n=i+e/r*o;h.x=u*Math.cos(n),h.y=u*Math.sin(n),s.push(h.x,h.y,h.z),l.push(0,0,1),p.x=(h.x/t+1)/2,p.y=(h.y/t+1)/2,c.push(p.x,p.y)}u+=d}for(let e=0;e<n;e++){const t=e*(r+1);for(let e=0;e<r;e++){const n=e+t,i=n,o=n+r+1,s=n+r+2,l=n+1;a.push(i,o,l),a.push(o,s,l)}}this.setIndex(a),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}function LatheGeometry(e,t,r,n){Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},this.fromBufferGeometry(new LatheBufferGeometry(e,t,r,n)),this.mergeVertices()}function LatheBufferGeometry(e,t,r,n){BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:r,phiLength:n},t=Math.floor(t)||12,r=r||0,n=n||2*Math.PI,n=MathUtils.clamp(n,0,2*Math.PI);const i=[],o=[],a=[],s=1/t,l=new Vector3,c=new Vector2;for(let i=0;i<=t;i++){const u=r+i*s*n,d=Math.sin(u),h=Math.cos(u);for(let r=0;r<=e.length-1;r++)l.x=e[r].x*d,l.y=e[r].y,l.z=e[r].x*h,o.push(l.x,l.y,l.z),c.x=i/t,c.y=r/(e.length-1),a.push(c.x,c.y)}for(let r=0;r<t;r++)for(let t=0;t<e.length-1;t++){const n=t+r*e.length,o=n,a=n+e.length,s=n+e.length+1,l=n+1;i.push(o,a,l),i.push(a,s,l)}if(this.setIndex(i),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(a,2)),this.computeVertexNormals(),n===2*Math.PI){const r=this.attributes.normal.array,n=new Vector3,i=new Vector3,o=new Vector3,a=t*e.length*3;for(let t=0,s=0;t<e.length;t++,s+=3)n.x=r[s+0],n.y=r[s+1],n.z=r[s+2],i.x=r[a+s+0],i.y=r[a+s+1],i.z=r[a+s+2],o.addVectors(n,i).normalize(),r[s+0]=r[a+s+0]=o.x,r[s+1]=r[a+s+1]=o.y,r[s+2]=r[a+s+2]=o.z}}function ShapeGeometry(e,t){Geometry.call(this),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ShapeBufferGeometry(e,t)),this.mergeVertices()}function ShapeBufferGeometry(e,t){BufferGeometry.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;const r=[],n=[],i=[],o=[];let a=0,s=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(a,s,t),a+=s,s=0;function l(e){const a=n.length/3,l=e.extractPoints(t);let c=l.shape;const u=l.holes;!1===ShapeUtils.isClockWise(c)&&(c=c.reverse());for(let e=0,t=u.length;e<t;e++){const t=u[e];!0===ShapeUtils.isClockWise(t)&&(u[e]=t.reverse())}const d=ShapeUtils.triangulateShape(c,u);for(let e=0,t=u.length;e<t;e++){const t=u[e];c=c.concat(t)}for(let e=0,t=c.length;e<t;e++){const t=c[e];n.push(t.x,t.y,0),i.push(0,0,1),o.push(t.x,t.y)}for(let e=0,t=d.length;e<t;e++){const t=d[e],n=t[0]+a,i=t[1]+a,o=t[2]+a;r.push(n,i,o),s+=3}}this.setIndex(r),this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("normal",new Float32BufferAttribute(i,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2))}function toJSON$1(e,t){if(t.shapes=[],Array.isArray(e))for(let r=0,n=e.length;r<n;r++){const n=e[r];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}function EdgesGeometry(e,t){BufferGeometry.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1;const r=[],n=Math.cos(MathUtils.DEG2RAD*t),i=[0,0],o={};let a,s,l;const c=["a","b","c"];let u;e.isBufferGeometry?(u=new Geometry,u.fromBufferGeometry(e)):u=e.clone(),u.mergeVertices(),u.computeFaceNormals();const d=u.vertices,h=u.faces;for(let e=0,t=h.length;e<t;e++){const t=h[e];for(let r=0;r<3;r++)a=t[c[r]],s=t[c[(r+1)%3]],i[0]=Math.min(a,s),i[1]=Math.max(a,s),l=i[0]+","+i[1],void 0===o[l]?o[l]={index1:i[0],index2:i[1],face1:e,face2:void 0}:o[l].face2=e}for(l in o){const e=o[l];if(void 0===e.face2||h[e.face1].normal.dot(h[e.face2].normal)<=n){let t=d[e.index1];r.push(t.x,t.y,t.z),t=d[e.index2],r.push(t.x,t.y,t.z)}}this.setAttribute("position",new Float32BufferAttribute(r,3))}function CylinderGeometry(e,t,r,n,i,o,a,s){Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new CylinderBufferGeometry(e,t,r,n,i,o,a,s)),this.mergeVertices()}function CylinderBufferGeometry(e,t,r,n,i,o,a,s){BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:r,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:a,thetaLength:s};const l=this;e=void 0!==e?e:1,t=void 0!==t?t:1,r=r||1,n=Math.floor(n)||8,i=Math.floor(i)||1,o=void 0!==o&&o,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;const c=[],u=[],d=[],h=[];let p=0;const m=[],f=r/2;let g=0;function _(r){let i,o;const m=new Vector2,_=new Vector3;let v=0;const y=!0===r?e:t,b=!0===r?1:-1;i=p;for(let e=1;e<=n;e++)u.push(0,f*b,0),d.push(0,b,0),h.push(.5,.5),p++;o=p;for(let e=0;e<=n;e++){const t=e/n*s+a,r=Math.cos(t),i=Math.sin(t);_.x=y*i,_.y=f*b,_.z=y*r,u.push(_.x,_.y,_.z),d.push(0,b,0),m.x=.5*r+.5,m.y=.5*i*b+.5,h.push(m.x,m.y),p++}for(let e=0;e<n;e++){const t=i+e,n=o+e;!0===r?c.push(n,n+1,t):c.push(n+1,n,t),v+=3}l.addGroup(g,v,!0===r?1:2),g+=v}!function(){const o=new Vector3,_=new Vector3;let v=0;const y=(t-e)/r;for(let l=0;l<=i;l++){const c=[],g=l/i,v=g*(t-e)+e;for(let e=0;e<=n;e++){const t=e/n,i=t*s+a,l=Math.sin(i),m=Math.cos(i);_.x=v*l,_.y=-g*r+f,_.z=v*m,u.push(_.x,_.y,_.z),o.set(l,y,m).normalize(),d.push(o.x,o.y,o.z),h.push(t,1-g),c.push(p++)}m.push(c)}for(let e=0;e<n;e++)for(let t=0;t<i;t++){const r=m[t][e],n=m[t+1][e],i=m[t+1][e+1],o=m[t][e+1];c.push(r,n,o),c.push(n,i,o),v+=6}l.addGroup(g,v,0),g+=v}(),!1===o&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(c),this.setAttribute("position",new Float32BufferAttribute(u,3)),this.setAttribute("normal",new Float32BufferAttribute(d,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}function ConeGeometry(e,t,r,n,i,o,a){CylinderGeometry.call(this,0,e,t,r,n,i,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:o,thetaLength:a}}function ConeBufferGeometry(e,t,r,n,i,o,a){CylinderBufferGeometry.call(this,0,e,t,r,n,i,o,a),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:o,thetaLength:a}}function CircleGeometry(e,t,r,n){Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},this.fromBufferGeometry(new CircleBufferGeometry(e,t,r,n)),this.mergeVertices()}function CircleBufferGeometry(e,t,r,n){BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:r,thetaLength:n},e=e||1,t=void 0!==t?Math.max(3,t):8,r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI;const i=[],o=[],a=[],s=[],l=new Vector3,c=new Vector2;o.push(0,0,0),a.push(0,0,1),s.push(.5,.5);for(let i=0,u=3;i<=t;i++,u+=3){const d=r+i/t*n;l.x=e*Math.cos(d),l.y=e*Math.sin(d),o.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(o[u]/e+1)/2,c.y=(o[u+1]/e+1)/2,s.push(c.x,c.y)}for(let e=1;e<=t;e++)i.push(e,e+1,0);this.setIndex(i),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(a,3)),this.setAttribute("uv",new Float32BufferAttribute(s,2))}TextGeometry.prototype=Object.create(Geometry.prototype),TextGeometry.prototype.constructor=TextGeometry,TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype),TextBufferGeometry.prototype.constructor=TextBufferGeometry,SphereGeometry.prototype=Object.create(Geometry.prototype),SphereGeometry.prototype.constructor=SphereGeometry,SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype),SphereBufferGeometry.prototype.constructor=SphereBufferGeometry,RingGeometry.prototype=Object.create(Geometry.prototype),RingGeometry.prototype.constructor=RingGeometry,RingBufferGeometry.prototype=Object.create(BufferGeometry.prototype),RingBufferGeometry.prototype.constructor=RingBufferGeometry,LatheGeometry.prototype=Object.create(Geometry.prototype),LatheGeometry.prototype.constructor=LatheGeometry,LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype),LatheBufferGeometry.prototype.constructor=LatheBufferGeometry,ShapeGeometry.prototype=Object.create(Geometry.prototype),ShapeGeometry.prototype.constructor=ShapeGeometry,ShapeGeometry.prototype.toJSON=function(){const e=Geometry.prototype.toJSON.call(this);return toJSON$1(this.parameters.shapes,e)},ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry,ShapeBufferGeometry.prototype.toJSON=function(){const e=BufferGeometry.prototype.toJSON.call(this);return toJSON$1(this.parameters.shapes,e)},EdgesGeometry.prototype=Object.create(BufferGeometry.prototype),EdgesGeometry.prototype.constructor=EdgesGeometry,CylinderGeometry.prototype=Object.create(Geometry.prototype),CylinderGeometry.prototype.constructor=CylinderGeometry,CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry,ConeGeometry.prototype=Object.create(CylinderGeometry.prototype),ConeGeometry.prototype.constructor=ConeGeometry,ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype),ConeBufferGeometry.prototype.constructor=ConeBufferGeometry,CircleGeometry.prototype=Object.create(Geometry.prototype),CircleGeometry.prototype.constructor=CircleGeometry,CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CircleBufferGeometry.prototype.constructor=CircleBufferGeometry;var Geometries=Object.freeze({__proto__:null,WireframeGeometry:WireframeGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,EdgesGeometry:EdgesGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry});function ShadowMaterial(e){Material.call(this),this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.setValues(e)}function RawShaderMaterial(e){ShaderMaterial.call(this,e),this.type="RawShaderMaterial"}function MeshStandardMaterial(e){Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function MeshPhysicalMaterial(e){MeshStandardMaterial.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}function MeshPhongMaterial(e){Material.call(this),this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshToonMaterial(e){Material.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshNormalMaterial(e){Material.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshLambertMaterial(e){Material.call(this),this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshMatcapMaterial(e){Material.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function LineDashedMaterial(e){LineBasicMaterial.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}ShadowMaterial.prototype=Object.create(Material.prototype),ShadowMaterial.prototype.constructor=ShadowMaterial,ShadowMaterial.prototype.isShadowMaterial=!0,ShadowMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this},RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype),RawShaderMaterial.prototype.constructor=RawShaderMaterial,RawShaderMaterial.prototype.isRawShaderMaterial=!0,MeshStandardMaterial.prototype=Object.create(Material.prototype),MeshStandardMaterial.prototype.constructor=MeshStandardMaterial,MeshStandardMaterial.prototype.isMeshStandardMaterial=!0,MeshStandardMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype),MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial,MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0,MeshPhysicalMaterial.prototype.copy=function(e){return MeshStandardMaterial.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new Color).copy(e.sheen):this.sheen=null,this.transparency=e.transparency,this},MeshPhongMaterial.prototype=Object.create(Material.prototype),MeshPhongMaterial.prototype.constructor=MeshPhongMaterial,MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshToonMaterial.prototype=Object.create(Material.prototype),MeshToonMaterial.prototype.constructor=MeshToonMaterial,MeshToonMaterial.prototype.isMeshToonMaterial=!0,MeshToonMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshNormalMaterial.prototype=Object.create(Material.prototype),MeshNormalMaterial.prototype.constructor=MeshNormalMaterial,MeshNormalMaterial.prototype.isMeshNormalMaterial=!0,MeshNormalMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshLambertMaterial.prototype=Object.create(Material.prototype),MeshLambertMaterial.prototype.constructor=MeshLambertMaterial,MeshLambertMaterial.prototype.isMeshLambertMaterial=!0,MeshLambertMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshMatcapMaterial.prototype=Object.create(Material.prototype),MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial,MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0,MeshMatcapMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype),LineDashedMaterial.prototype.constructor=LineDashedMaterial,LineDashedMaterial.prototype.isLineDashedMaterial=!0,LineDashedMaterial.prototype.copy=function(e){return LineBasicMaterial.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Materials=Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={arraySlice:function(e,t,r){return AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,r=new Array(t);for(let e=0;e!==t;++e)r[e]=e;return r.sort((function(t,r){return e[t]-e[r]})),r},sortedArray:function(e,t,r){const n=e.length,i=new e.constructor(n);for(let o=0,a=0;a!==n;++o){const n=r[o]*t;for(let r=0;r!==t;++r)i[a++]=e[n+r]}return i},flattenJSON:function(e,t,r,n){let i=1,o=e[0];for(;void 0!==o&&void 0===o[n];)o=e[i++];if(void 0===o)return;let a=o[n];if(void 0!==a)if(Array.isArray(a))do{a=o[n],void 0!==a&&(t.push(o.time),r.push.apply(r,a)),o=e[i++]}while(void 0!==o);else if(void 0!==a.toArray)do{a=o[n],void 0!==a&&(t.push(o.time),a.toArray(r,r.length)),o=e[i++]}while(void 0!==o);else do{a=o[n],void 0!==a&&(t.push(o.time),r.push(a)),o=e[i++]}while(void 0!==o)},subclip:function(e,t,r,n,i){i=i||30;const o=e.clone();o.name=t;const a=[];for(let e=0;e<o.tracks.length;++e){const t=o.tracks[e],s=t.getValueSize(),l=[],c=[];for(let e=0;e<t.times.length;++e){const o=t.times[e]*i;if(!(o<r||o>=n)){l.push(t.times[e]);for(let r=0;r<s;++r)c.push(t.values[e*s+r])}}0!==l.length&&(t.times=AnimationUtils.convertArray(l,t.times.constructor),t.values=AnimationUtils.convertArray(c,t.values.constructor),a.push(t))}o.tracks=a;let s=1/0;for(let e=0;e<o.tracks.length;++e)s>o.tracks[e].times[0]&&(s=o.tracks[e].times[0]);for(let e=0;e<o.tracks.length;++e)o.tracks[e].shift(-1*s);return o.resetDuration(),o},makeClipAdditive:function(e,t,r,n){void 0===t&&(t=0),void 0===r&&(r=e),(void 0===n||n<=0)&&(n=30);const i=e.tracks.length,o=t/n;for(let t=0;t<i;++t){const n=r.tracks[t],i=n.ValueTypeName;if("bool"===i||"string"===i)continue;const a=e.tracks.find((function(e){return e.name===n.name&&e.ValueTypeName===i}));if(void 0===a)continue;const s=n.getValueSize(),l=n.times.length-1;let c;if(o<=n.times[0])c=AnimationUtils.arraySlice(n.values,0,n.valueSize);else if(o>=n.times[l]){const e=l*s;c=AnimationUtils.arraySlice(n.values,e)}else{const e=n.createInterpolant();e.evaluate(o),c=e.resultBuffer}if("quaternion"===i){new Quaternion(c[0],c[1],c[2],c[3]).normalize().conjugate().toArray(c)}const u=a.times.length;for(let e=0;e<u;++e){const t=e*s;if("quaternion"===i)Quaternion.multiplyQuaternionsFlat(a.values,t,c,0,a.values,t);else for(let e=0;e<s;++e)a.values[t+e]-=c[e]}}return e.blendMode=AdditiveAnimationBlendMode,e}};function Interpolant(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r}function CubicInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function LinearInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function DiscreteInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function KeyframeTrack(e,t,r,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=AnimationUtils.convertArray(t,this.TimeBufferType),this.values=AnimationUtils.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function BooleanKeyframeTrack(e,t,r){KeyframeTrack.call(this,e,t,r)}function ColorKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function NumberKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function QuaternionLinearInterpolant(e,t,r,n){Interpolant.call(this,e,t,r,n)}function QuaternionKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function StringKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function VectorKeyframeTrack(e,t,r,n){KeyframeTrack.call(this,e,t,r,n)}function AnimationClip(e,t,r,n){this.name=e,this.tracks=r,this.duration=void 0!==t?t:-1,this.blendMode=void 0!==n?n:NormalAnimationBlendMode,this.uuid=MathUtils.generateUUID(),this.duration<0&&this.resetDuration()}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=getTrackTypeForValueTypeName(e.type);if(void 0===e.times){const t=[],r=[];AnimationUtils.flattenJSON(e.keys,t,r,"value"),e.times=t,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Interpolant.prototype,{evaluate:function(e){let t=this.parameterPositions,r=this._cachedIndex,n=t[r],i=t[r-1];e:{t:{let o;r:{n:if(!(e<n)){for(let o=r+2;;){if(void 0===n){if(e<i)break n;return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,e,i)}if(r===o)break;if(i=n,n=t[++r],e<n)break t}o=t.length;break r}if(e>=i)break e;{const a=t[1];e<a&&(r=2,i=a);for(let o=r-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(r===o)break;if(n=i,i=t[--r-1],e>=i)break t}o=r,r=0}}for(;r<o;){const n=r+o>>>1;e<t[n]?o=n:r=n+1}if(n=t[r],i=t[r-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return r=t.length,this._cachedIndex=r,this.afterEnd_(r-1,i,e)}this._cachedIndex=r,this.intervalChanged_(r,i,n)}return this.interpolate_(r,i,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(let e=0;e!==n;++e)t[e]=r[i+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_}),CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function(e,t,r){let n=this.parameterPositions,i=e-2,o=e+1,a=n[i],s=n[o];if(void 0===a)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:i=e,a=2*t-r;break;case WrapAroundEnding:i=n.length-2,a=t+n[i]-n[i+1];break;default:i=e,a=r}if(void 0===s)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:o=e,s=2*r-t;break;case WrapAroundEnding:o=1,s=r+n[1]-n[0];break;default:o=e-1,s=t}const l=.5*(r-t),c=this.valueSize;this._weightPrev=l/(t-a),this._weightNext=l/(s-r),this._offsetPrev=i*c,this._offsetNext=o*c},interpolate_:function(e,t,r,n){const i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,l=s-a,c=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,h=this._weightNext,p=(r-t)/(n-t),m=p*p,f=m*p,g=-d*f+2*d*m-d*p,_=(1+d)*f+(-1.5-2*d)*m+(-.5+d)*p+1,v=(-1-h)*f+(1.5+h)*m+.5*p,y=h*f-h*m;for(let e=0;e!==a;++e)i[e]=g*o[c+e]+_*o[l+e]+v*o[s+e]+y*o[u+e];return i}}),LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(e,t,r,n){const i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=e*a,l=s-a,c=(r-t)/(n-t),u=1-c;for(let e=0;e!==a;++e)i[e]=o[l+e]*u+o[s+e]*c;return i}}),DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(KeyframeTrack,{toJSON:function(e){const t=e.constructor;let r;if(void 0!==t.toJSON)r=t.toJSON(e);else{r={name:e.name,times:AnimationUtils.convertArray(e.times,Array),values:AnimationUtils.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(r.interpolation=t)}return r.type=e.ValueTypeName,r}}),Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let r=0,n=t.length;r!==n;++r)t[r]*=e}return this},trim:function(e,t){const r=this.times,n=r.length;let i=0,o=n-1;for(;i!==n&&r[i]<e;)++i;for(;-1!==o&&r[o]>t;)--o;if(++o,0!==i||o!==n){i>=o&&(o=Math.max(o,1),i=o-1);const e=this.getValueSize();this.times=AnimationUtils.arraySlice(r,i,o),this.values=AnimationUtils.arraySlice(this.values,i*e,o*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const r=this.times,n=this.values,i=r.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let t=0;t!==i;t++){const n=r[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==o&&o>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,o),e=!1;break}o=n}if(void 0!==n&&AnimationUtils.isTypedArray(n))for(let t=0,r=n.length;t!==r;++t){const r=n[t];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,r),e=!1;break}}return e},optimize:function(){const e=AnimationUtils.arraySlice(this.times),t=AnimationUtils.arraySlice(this.values),r=this.getValueSize(),n=this.getInterpolation()===InterpolateSmooth,i=e.length-1;let o=1;for(let a=1;a<i;++a){let i=!1;const s=e[a];if(s!==e[a+1]&&(1!==a||s!==s[0]))if(n)i=!0;else{const e=a*r,n=e-r,o=e+r;for(let a=0;a!==r;++a){const r=t[e+a];if(r!==t[n+a]||r!==t[o+a]){i=!0;break}}}if(i){if(a!==o){e[o]=e[a];const n=a*r,i=o*r;for(let e=0;e!==r;++e)t[i+e]=t[n+e]}++o}}if(i>0){e[o]=e[i];for(let e=i*r,n=o*r,a=0;a!==r;++a)t[n+a]=t[e+a];++o}return o!==e.length?(this.times=AnimationUtils.arraySlice(e,0,o),this.values=AnimationUtils.arraySlice(t,0,o*r)):(this.times=e,this.values=t),this},clone:function(){const e=AnimationUtils.arraySlice(this.times,0),t=AnimationUtils.arraySlice(this.values,0),r=new(0,this.constructor)(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}),BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:"color"}),NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"}),QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(e,t,r,n){const i=this.resultBuffer,o=this.sampleValues,a=this.valueSize,s=(r-t)/(n-t);let l=e*a;for(let e=l+a;l!==e;l+=4)Quaternion.slerpFlat(i,0,o,l-a,o,l,s);return i}}),QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"}),Object.assign(AnimationClip,{parse:function(e){const t=[],r=e.tracks,n=1/(e.fps||1);for(let e=0,i=r.length;e!==i;++e)t.push(parseKeyframeTrack(r[e]).scale(n));return new AnimationClip(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],r=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,n=r.length;e!==n;++e)t.push(KeyframeTrack.toJSON(r[e]));return n},CreateFromMorphTargetSequence:function(e,t,r,n){const i=t.length,o=[];for(let e=0;e<i;e++){let a=[],s=[];a.push((e+i-1)%i,e,(e+1)%i),s.push(0,1,0);const l=AnimationUtils.getKeyframeOrder(a);a=AnimationUtils.sortedArray(a,1,l),s=AnimationUtils.sortedArray(s,1,l),n||0!==a[0]||(a.push(i),s.push(s[0])),o.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[e].name+"]",a,s).scale(1/r))}return new AnimationClip(e,-1,o)},findByName:function(e,t){let r=e;if(!Array.isArray(e)){const t=e;r=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<r.length;e++)if(r[e].name===t)return r[e];return null},CreateClipsFromMorphTargetSequences:function(e,t,r){const n={},i=/^([\w-]*?)([\d]+)$/;for(let t=0,r=e.length;t<r;t++){const r=e[t],o=r.name.match(i);if(o&&o.length>1){const e=o[1];let t=n[e];t||(n[e]=t=[]),t.push(r)}}const o=[];for(const e in n)o.push(AnimationClip.CreateFromMorphTargetSequence(e,n[e],t,r));return o},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const r=function(e,t,r,n,i){if(0!==r.length){const o=[],a=[];AnimationUtils.flattenJSON(r,o,a,n),0!==o.length&&i.push(new e(t,o,a))}},n=[],i=e.name||"default",o=e.fps||30,a=e.blendMode;let s=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const i=l[e].keys;if(i&&0!==i.length)if(i[0].morphTargets){const e={};let t;for(t=0;t<i.length;t++)if(i[t].morphTargets)for(let r=0;r<i[t].morphTargets.length;r++)e[i[t].morphTargets[r]]=-1;for(const r in e){const e=[],o=[];for(let n=0;n!==i[t].morphTargets.length;++n){const n=i[t];e.push(n.time),o.push(n.morphTarget===r?1:0)}n.push(new NumberKeyframeTrack(".morphTargetInfluence["+r+"]",e,o))}s=e.length*(o||1)}else{const o=".bones["+t[e].name+"]";r(VectorKeyframeTrack,o+".position",i,"pos",n),r(QuaternionKeyframeTrack,o+".quaternion",i,"rot",n),r(VectorKeyframeTrack,o+".scale",i,"scl",n)}}if(0===n.length)return null;return new AnimationClip(i,s,n,a)}}),Object.assign(AnimationClip.prototype,{resetDuration:function(){let e=0;for(let t=0,r=this.tracks.length;t!==r;++t){const r=this.tracks[t];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new AnimationClip(this.name,this.duration,e,this.blendMode)}});const Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function LoadingManager(e,t,r){const n=this;let i=!1,o=0,a=0,s=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){a++,!1===i&&void 0!==n.onStart&&n.onStart(e,o,a),i=!0},this.itemEnd=function(e){o++,void 0!==n.onProgress&&n.onProgress(e,o,a),o===a&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,r=l.length;t<r;t+=2){const r=l[t],n=l[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return n}return null}}const DefaultLoadingManager=new LoadingManager;function Loader(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Loader.prototype,{load:function(){},loadAsync:function(e,t){const r=this;return new Promise((function(n,i){r.load(e,n,t,i)}))},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const loading={};function FileLoader(e){Loader.call(this,e)}function AnimationLoader(e){Loader.call(this,e)}function CompressedTextureLoader(e){Loader.call(this,e)}function DataTextureLoader(e){Loader.call(this,e)}function ImageLoader(e){Loader.call(this,e)}function CubeTextureLoader(e){Loader.call(this,e)}function TextureLoader(e){Loader.call(this,e)}function Curve(){this.type="Curve",this.arcLengthDivisions=200}function EllipseCurve(e,t,r,n,i,o,a,s){Curve.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=r||1,this.yRadius=n||1,this.aStartAngle=i||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=a||!1,this.aRotation=s||0}function ArcCurve(e,t,r,n,i,o){EllipseCurve.call(this,e,t,r,r,n,i,o),this.type="ArcCurve"}function CubicPoly(){let e=0,t=0,r=0,n=0;function i(i,o,a,s){e=i,t=a,r=-3*i+3*o-2*a-s,n=2*i-2*o+a+s}return{initCatmullRom:function(e,t,r,n,o){i(t,r,o*(r-e),o*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,o,a,s){let l=(t-e)/o-(r-e)/(o+a)+(r-t)/a,c=(r-t)/a-(n-t)/(a+s)+(n-r)/s;l*=a,c*=a,i(t,r,l,c)},calc:function(i){const o=i*i;return e+t*i+r*o+n*(o*i)}}}FileLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FileLoader,load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,o=Cache.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout((function(){t&&t(o),i.manager.itemEnd(e)}),0),o;if(void 0!==loading[e])return void loading[e].push({onLoad:t,onProgress:r,onError:n});const a=e.match(/^data:(.*?)(;base64)?,(.*)$/);let s;if(a){const r=a[1],o=!!a[2];let s=a[3];s=decodeURIComponent(s),o&&(s=atob(s));try{let n;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const e=new Uint8Array(s.length);for(let t=0;t<s.length;t++)e[t]=s.charCodeAt(t);n="blob"===o?new Blob([e.buffer],{type:r}):e.buffer;break;case"document":const t=new DOMParser;n=t.parseFromString(s,r);break;case"json":n=JSON.parse(s);break;default:n=s}setTimeout((function(){t&&t(n),i.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)}),0)}}else{loading[e]=[],loading[e].push({onLoad:t,onProgress:r,onError:n}),s=new XMLHttpRequest,s.open("GET",e,!0),s.addEventListener("load",(function(t){const r=this.response,n=loading[e];if(delete loading[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Cache.add(e,r);for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onLoad&&t.onLoad(r)}i.manager.itemEnd(e)}else{for(let e=0,r=n.length;e<r;e++){const r=n[e];r.onError&&r.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}}),!1),s.addEventListener("progress",(function(t){const r=loading[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onProgress&&n.onProgress(t)}}),!1),s.addEventListener("error",(function(t){const r=loading[e];delete loading[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}),!1),s.addEventListener("abort",(function(t){const r=loading[e];delete loading[e];for(let e=0,n=r.length;e<n;e++){const n=r[e];n.onError&&n.onError(t)}i.manager.itemError(e),i.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(s.responseType=this.responseType),void 0!==this.withCredentials&&(s.withCredentials=this.withCredentials),s.overrideMimeType&&s.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)s.setRequestHeader(e,this.requestHeader[e]);s.send(null)}return i.manager.itemStart(e),s},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}}),AnimationLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AnimationLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setPath(i.path),o.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},parse:function(e){const t=[];for(let r=0;r<e.length;r++){const n=AnimationClip.parse(e[r]);t.push(n)}return t}}),CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(e,t,r,n){const i=this,o=[],a=new CompressedTexture;a.image=o;const s=new FileLoader(this.manager);s.setPath(this.path),s.setResponseType("arraybuffer");let l=0;function c(c){s.load(e[c],(function(e){const r=i.parse(e,!0);o[c]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},l+=1,6===l&&(1===r.mipmapCount&&(a.minFilter=LinearFilter),a.format=r.format,a.needsUpdate=!0,t&&t(a))}),r,n)}if(Array.isArray(e))for(let t=0,r=e.length;t<r;++t)c(t);else s.load(e,(function(e){const r=i.parse(e,!0);if(r.isCubemap){const e=r.mipmaps.length/r.mipmapCount;for(let t=0;t<e;t++){o[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)o[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),o[t].format=r.format,o[t].width=r.width,o[t].height=r.height}}else a.image.width=r.width,a.image.height=r.height,a.mipmaps=r.mipmaps;1===r.mipmapCount&&(a.minFilter=LinearFilter),a.format=r.format,a.needsUpdate=!0,t&&t(a)}),r,n);return a}}),DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function(e,t,r,n){const i=this,o=new DataTexture,a=new FileLoader(this.manager);return a.setResponseType("arraybuffer"),a.setPath(this.path),a.load(e,(function(e){const r=i.parse(e);r&&(void 0!==r.image?o.image=r.image:void 0!==r.data&&(o.image.width=r.width,o.image.height=r.height,o.image.data=r.data),o.wrapS=void 0!==r.wrapS?r.wrapS:ClampToEdgeWrapping,o.wrapT=void 0!==r.wrapT?r.wrapT:ClampToEdgeWrapping,o.magFilter=void 0!==r.magFilter?r.magFilter:LinearFilter,o.minFilter=void 0!==r.minFilter?r.minFilter:LinearFilter,o.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.mipmaps&&(o.mipmaps=r.mipmaps,o.minFilter=LinearMipmapLinearFilter),1===r.mipmapCount&&(o.minFilter=LinearFilter),o.needsUpdate=!0,t&&t(o,r))}),r,n),o}}),ImageLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageLoader,load:function(e,t,r,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,o=Cache.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout((function(){t&&t(o),i.manager.itemEnd(e)}),0),o;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function s(){a.removeEventListener("load",s,!1),a.removeEventListener("error",l,!1),Cache.add(e,this),t&&t(this),i.manager.itemEnd(e)}function l(t){a.removeEventListener("load",s,!1),a.removeEventListener("error",l,!1),n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)}return a.addEventListener("load",s,!1),a.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),i.manager.itemStart(e),a.src=e,a}}),CubeTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CubeTextureLoader,load:function(e,t,r,n){const i=new CubeTexture,o=new ImageLoader(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function s(r){o.load(e[r],(function(e){i.images[r]=e,a++,6===a&&(i.needsUpdate=!0,t&&t(i))}),void 0,n)}for(let t=0;t<e.length;++t)s(t);return i}}),TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function(e,t,r,n){const i=new Texture,o=new ImageLoader(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,(function(r){i.image=r;const n=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);i.format=n?RGBFormat:RGBAFormat,i.needsUpdate=!0,void 0!==t&&t(i)}),r,n),i}}),Object.assign(Curve.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const r=this.getUtoTmapping(e);return this.getPoint(r,t)},getPoints:function(e){void 0===e&&(e=5);const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);const t=[];for(let r=0;r<=e;r++)t.push(this.getPointAt(r/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let r,n=this.getPoint(0),i=0;t.push(0);for(let o=1;o<=e;o++)r=this.getPoint(o/e),i+=r.distanceTo(n),t.push(i),n=r;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const r=this.getLengths();let n,i=0,o=r.length;n=t||e*r[o-1];let a,s=0,l=o-1;for(;s<=l;)if(i=Math.floor(s+(l-s)/2),a=r[i]-n,a<0)s=i+1;else{if(!(a>0)){l=i;break}l=i-1}if(i=l,r[i]===n)return i/(o-1);const c=r[i];return(i+(n-c)/(r[i+1]-c))/(o-1)},getTangent:function(e,t){let r=e-1e-4,n=e+1e-4;r<0&&(r=0),n>1&&(n=1);const i=this.getPoint(r),o=this.getPoint(n),a=t||(i.isVector2?new Vector2:new Vector3);return a.copy(o).sub(i).normalize(),a},getTangentAt:function(e,t){const r=this.getUtoTmapping(e);return this.getTangent(r,t)},computeFrenetFrames:function(e,t){const r=new Vector3,n=[],i=[],o=[],a=new Vector3,s=new Matrix4;for(let t=0;t<=e;t++){const r=t/e;n[t]=this.getTangentAt(r,new Vector3),n[t].normalize()}i[0]=new Vector3,o[0]=new Vector3;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);c<=l&&(l=c,r.set(1,0,0)),u<=l&&(l=u,r.set(0,1,0)),d<=l&&r.set(0,0,1),a.crossVectors(n[0],r).normalize(),i[0].crossVectors(n[0],a),o[0].crossVectors(n[0],i[0]);for(let t=1;t<=e;t++){if(i[t]=i[t-1].clone(),o[t]=o[t-1].clone(),a.crossVectors(n[t-1],n[t]),a.length()>Number.EPSILON){a.normalize();const e=Math.acos(MathUtils.clamp(n[t-1].dot(n[t]),-1,1));i[t].applyMatrix4(s.makeRotationAxis(a,e))}o[t].crossVectors(n[t],i[t])}if(!0===t){let t=Math.acos(MathUtils.clamp(i[0].dot(i[e]),-1,1));t/=e,n[0].dot(a.crossVectors(i[0],i[e]))>0&&(t=-t);for(let r=1;r<=e;r++)i[r].applyMatrix4(s.makeRotationAxis(n[r],t*r)),o[r].crossVectors(n[r],i[r])}return{tangents:n,normals:i,binormals:o}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),EllipseCurve.prototype=Object.create(Curve.prototype),EllipseCurve.prototype.constructor=EllipseCurve,EllipseCurve.prototype.isEllipseCurve=!0,EllipseCurve.prototype.getPoint=function(e,t){const r=t||new Vector2,n=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const o=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=o?0:n),!0!==this.aClockwise||o||(i===n?i=-n:i-=n);const a=this.aStartAngle+e*i;let s=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),r=s-this.aX,n=l-this.aY;s=r*e-n*t+this.aX,l=r*t+n*e+this.aY}return r.set(s,l)},EllipseCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},EllipseCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},EllipseCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},ArcCurve.prototype=Object.create(EllipseCurve.prototype),ArcCurve.prototype.constructor=ArcCurve,ArcCurve.prototype.isArcCurve=!0;const tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;function CatmullRomCurve3(e,t,r,n){Curve.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=r||"centripetal",this.tension=n||.5}function CatmullRom(e,t,r,n,i){const o=.5*(n-t),a=.5*(i-r),s=e*e;return(2*r-2*n+o+a)*(e*s)+(-3*r+3*n-2*o-a)*s+o*e+r}function QuadraticBezierP0(e,t){const r=1-e;return r*r*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,r,n){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,r)+QuadraticBezierP2(e,n)}function CubicBezierP0(e,t){const r=1-e;return r*r*r*t}function CubicBezierP1(e,t){const r=1-e;return 3*r*r*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,r,n,i){return CubicBezierP0(e,t)+CubicBezierP1(e,r)+CubicBezierP2(e,n)+CubicBezierP3(e,i)}function CubicBezierCurve(e,t,r,n){Curve.call(this),this.type="CubicBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=r||new Vector2,this.v3=n||new Vector2}function CubicBezierCurve3(e,t,r,n){Curve.call(this),this.type="CubicBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=r||new Vector3,this.v3=n||new Vector3}function LineCurve(e,t){Curve.call(this),this.type="LineCurve",this.v1=e||new Vector2,this.v2=t||new Vector2}function LineCurve3(e,t){Curve.call(this),this.type="LineCurve3",this.v1=e||new Vector3,this.v2=t||new Vector3}function QuadraticBezierCurve(e,t,r){Curve.call(this),this.type="QuadraticBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=r||new Vector2}function QuadraticBezierCurve3(e,t,r){Curve.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=r||new Vector3}function SplineCurve(e){Curve.call(this),this.type="SplineCurve",this.points=e||[]}CatmullRomCurve3.prototype=Object.create(Curve.prototype),CatmullRomCurve3.prototype.constructor=CatmullRomCurve3,CatmullRomCurve3.prototype.isCatmullRomCurve3=!0,CatmullRomCurve3.prototype.getPoint=function(e,t){const r=t||new Vector3,n=this.points,i=n.length,o=(i-(this.closed?0:1))*e;let a,s,l,c,u=Math.floor(o),d=o-u;if(this.closed?u+=u>0?0:(Math.floor(Math.abs(u)/i)+1)*i:0===d&&u===i-1&&(u=i-2,d=1),this.closed||u>0?a=n[(u-1)%i]:(tmp.subVectors(n[0],n[1]).add(n[0]),a=tmp),s=n[u%i],l=n[(u+1)%i],this.closed||u+2<i?c=n[(u+2)%i]:(tmp.subVectors(n[i-1],n[i-2]).add(n[i-1]),c=tmp),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(a.distanceToSquared(s),e),r=Math.pow(s.distanceToSquared(l),e),n=Math.pow(l.distanceToSquared(c),e);r<1e-4&&(r=1),t<1e-4&&(t=r),n<1e-4&&(n=r),px.initNonuniformCatmullRom(a.x,s.x,l.x,c.x,t,r,n),py.initNonuniformCatmullRom(a.y,s.y,l.y,c.y,t,r,n),pz.initNonuniformCatmullRom(a.z,s.z,l.z,c.z,t,r,n)}else"catmullrom"===this.curveType&&(px.initCatmullRom(a.x,s.x,l.x,c.x,this.tension),py.initCatmullRom(a.y,s.y,l.y,c.y,this.tension),pz.initCatmullRom(a.z,s.z,l.z,c.z,this.tension));return r.set(px.calc(d),py.calc(d),pz.calc(d)),r},CatmullRomCurve3.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CatmullRomCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},CatmullRomCurve3.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push((new Vector3).fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CubicBezierCurve.prototype=Object.create(Curve.prototype),CubicBezierCurve.prototype.constructor=CubicBezierCurve,CubicBezierCurve.prototype.isCubicBezierCurve=!0,CubicBezierCurve.prototype.getPoint=function(e,t){const r=t||new Vector2,n=this.v0,i=this.v1,o=this.v2,a=this.v3;return r.set(CubicBezier(e,n.x,i.x,o.x,a.x),CubicBezier(e,n.y,i.y,o.y,a.y)),r},CubicBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},CubicBezierCurve3.prototype=Object.create(Curve.prototype),CubicBezierCurve3.prototype.constructor=CubicBezierCurve3,CubicBezierCurve3.prototype.isCubicBezierCurve3=!0,CubicBezierCurve3.prototype.getPoint=function(e,t){const r=t||new Vector3,n=this.v0,i=this.v1,o=this.v2,a=this.v3;return r.set(CubicBezier(e,n.x,i.x,o.x,a.x),CubicBezier(e,n.y,i.y,o.y,a.y),CubicBezier(e,n.z,i.z,o.z,a.z)),r},CubicBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},LineCurve.prototype=Object.create(Curve.prototype),LineCurve.prototype.constructor=LineCurve,LineCurve.prototype.isLineCurve=!0,LineCurve.prototype.getPoint=function(e,t){const r=t||new Vector2;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve.prototype.getTangent=function(e,t){const r=t||new Vector2;return r.copy(this.v2).sub(this.v1).normalize(),r},LineCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},LineCurve3.prototype=Object.create(Curve.prototype),LineCurve3.prototype.constructor=LineCurve3,LineCurve3.prototype.isLineCurve3=!0,LineCurve3.prototype.getPoint=function(e,t){const r=t||new Vector3;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r},LineCurve3.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve.prototype=Object.create(Curve.prototype),QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve,QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0,QuadraticBezierCurve.prototype.getPoint=function(e,t){const r=t||new Vector2,n=this.v0,i=this.v1,o=this.v2;return r.set(QuadraticBezier(e,n.x,i.x,o.x),QuadraticBezier(e,n.y,i.y,o.y)),r},QuadraticBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve3.prototype=Object.create(Curve.prototype),QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3,QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0,QuadraticBezierCurve3.prototype.getPoint=function(e,t){const r=t||new Vector3,n=this.v0,i=this.v1,o=this.v2;return r.set(QuadraticBezier(e,n.x,i.x,o.x),QuadraticBezier(e,n.y,i.y,o.y),QuadraticBezier(e,n.z,i.z,o.z)),r},QuadraticBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},SplineCurve.prototype=Object.create(Curve.prototype),SplineCurve.prototype.constructor=SplineCurve,SplineCurve.prototype.isSplineCurve=!0,SplineCurve.prototype.getPoint=function(e,t){const r=t||new Vector2,n=this.points,i=(n.length-1)*e,o=Math.floor(i),a=i-o,s=n[0===o?o:o-1],l=n[o],c=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return r.set(CatmullRom(a,s.x,l.x,c.x,u.x),CatmullRom(a,s.y,l.y,c.y,u.y)),r},SplineCurve.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push(r.clone())}return this},SplineCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);e.points=[];for(let t=0,r=this.points.length;t<r;t++){const r=this.points[t];e.points.push(r.toArray())}return e},SplineCurve.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,r=e.points.length;t<r;t++){const r=e.points[t];this.points.push((new Vector2).fromArray(r))}return this};var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});function CurvePath(){Curve.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Path(e){CurvePath.call(this),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}function Shape(e){Path.call(this,e),this.uuid=MathUtils.generateUUID(),this.type="Shape",this.holes=[]}function Light(e,t){Object3D.call(this),this.type="Light",this.color=new Color(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0}function HemisphereLight(e,t,r){Light.call(this,e,r),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}function LightShadow(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500))}function SpotLight(e,t,r,n,i,o){Light.call(this,e,t),this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==r?r:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==o?o:1,this.shadow=new SpotLightShadow}function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,.5,500)),this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}function PointLight(e,t,r,n){Light.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==r?r:0,this.decay=void 0!==n?n:1,this.shadow=new PointLightShadow}function OrthographicCamera(e,t,r,n,i,o){Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==e?e:-1,this.right=void 0!==t?t:1,this.top=void 0!==r?r:1,this.bottom=void 0!==n?n:-1,this.near=void 0!==i?i:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()}function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))}function DirectionalLight(e,t){Light.call(this,e,t),this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}function AmbientLight(e,t){Light.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}function RectAreaLight(e,t,r,n){Light.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==r?r:10,this.height=void 0!==n?n:10}function SphericalHarmonics3(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Vector3)}function LightProbe(e,t){Light.call(this,void 0,t),this.type="LightProbe",this.sh=void 0!==e?e:new SphericalHarmonics3}function MaterialLoader(e){Loader.call(this,e),this.textures={}}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new LineCurve(t,e))},getPoint:function(e){const t=e*this.getLength(),r=this.getCurveLengths();let n=0;for(;n<r.length;){if(r[n]>=t){const e=r[n]-t,i=this.curves[n],o=i.getLength(),a=0===o?0:1-e/o;return i.getPointAt(a)}n++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let r=0,n=this.curves.length;r<n;r++)t+=this.curves[r].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);const t=[];for(let r=0;r<=e;r++)t.push(this.getPoint(r/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let r;for(let n=0,i=this.curves;n<i.length;n++){const o=i[n],a=o&&o.isEllipseCurve?2*e:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,s=o.getPoints(a);for(let e=0;e<s.length;e++){const n=s[e];r&&r.equals(n)||(t.push(n),r=n)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){Curve.prototype.copy.call(this,e),this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=Curve.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,r=this.curves.length;t<r;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e},fromJSON:function(e){Curve.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,r=e.curves.length;t<r;t++){const r=e.curves[t];this.curves.push((new Curves[r.type]).fromJSON(r))}return this}}),Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,r=e.length;t<r;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const r=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,r,n){const i=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,n));return this.curves.push(i),this.currentPoint.set(r,n),this},bezierCurveTo:function(e,t,r,n,i,o){const a=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(r,n),new Vector2(i,o));return this.curves.push(a),this.currentPoint.set(i,o),this},splineThru:function(e){const t=new SplineCurve([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,r,n,i,o){const a=this.currentPoint.x,s=this.currentPoint.y;return this.absarc(e+a,t+s,r,n,i,o),this},absarc:function(e,t,r,n,i,o){return this.absellipse(e,t,r,r,n,i,o),this},ellipse:function(e,t,r,n,i,o,a,s){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,r,n,i,o,a,s),this},absellipse:function(e,t,r,n,i,o,a,s){const l=new EllipseCurve(e,t,r,n,i,o,a,s);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(e){return CurvePath.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=CurvePath.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return CurvePath.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(e){const t=[];for(let r=0,n=this.holes.length;r<n;r++)t[r]=this.holes[r].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Path.prototype.copy.call(this,e),this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push(r.clone())}return this},toJSON:function(){const e=Path.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,r=this.holes.length;t<r;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e},fromJSON:function(e){Path.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,r=e.holes.length;t<r;t++){const r=e.holes[t];this.holes.push((new Path).fromJSON(r))}return this}}),Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4,_lightPositionWorld:new Vector3,_lookTarget:new Vector3,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,r=this.matrix,n=this._projScreenMatrix,i=this._lookTarget,o=this._lightPositionWorld;o.setFromMatrixPosition(e.matrixWorld),t.position.copy(o),i.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(i),t.updateMatrixWorld(),n.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(n),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,r=2*MathUtils.RAD2DEG*e.angle,n=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;r===t.fov&&n===t.aspect&&i===t.far||(t.fov=r,t.aspect=n,t.far=i,t.updateProjectionMatrix()),LightShadow.prototype.updateMatrices.call(this,e)}}),SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:!0,updateMatrices:function(e,t){void 0===t&&(t=0);const r=this.camera,n=this.matrix,i=this._lightPositionWorld,o=this._lookTarget,a=this._projScreenMatrix;i.setFromMatrixPosition(e.matrixWorld),r.position.copy(i),o.copy(r.position),o.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(o),r.updateMatrixWorld(),n.makeTranslation(-i.x,-i.y,-i.z),a.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a)}}),PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,r,n,i,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let i=r-e,o=r+e,a=n+t,s=n-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=e*this.view.offsetX,o=i+e*this.view.width,a-=t*this.view.offsetY,s=a-t*this.view.height}this.projectionMatrix.makeOrthographic(i,o,a,s,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:!0,updateMatrices:function(e){LightShadow.prototype.updateMatrices.call(this,e)}}),DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:!0}),RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=Light.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}),Object.assign(SphericalHarmonics3.prototype,{isSphericalHarmonics3:!0,set:function(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this},getAt:function(e,t){const r=e.x,n=e.y,i=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*n),t.addScaledVector(o[2],.488603*i),t.addScaledVector(o[3],.488603*r),t.addScaledVector(o[4],r*n*1.092548),t.addScaledVector(o[5],n*i*1.092548),t.addScaledVector(o[6],.315392*(3*i*i-1)),t.addScaledVector(o[7],r*i*1.092548),t.addScaledVector(o[8],.546274*(r*r-n*n)),t},getIrradianceAt:function(e,t){const r=e.x,n=e.y,i=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],1.023328*n),t.addScaledVector(o[2],1.023328*i),t.addScaledVector(o[3],1.023328*r),t.addScaledVector(o[4],.858086*r*n),t.addScaledVector(o[5],.858086*n*i),t.addScaledVector(o[6],.743125*i*i-.247708),t.addScaledVector(o[7],.858086*r*i),t.addScaledVector(o[8],.429043*(r*r-n*n)),t},add:function(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this},addScaledSH:function(e,t){for(let r=0;r<9;r++)this.coefficients[r].addScaledVector(e.coefficients[r],t);return this},scale:function(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(let r=0;r<9;r++)this.coefficients[r].lerp(e.coefficients[r],t);return this},equals:function(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(e,t){void 0===t&&(t=0);const r=this.coefficients;for(let n=0;n<9;n++)r[n].fromArray(e,t+3*n);return this},toArray:function(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const r=this.coefficients;for(let n=0;n<9;n++)r[n].toArray(e,t+3*n);return e}}),Object.assign(SphericalHarmonics3,{getBasisAt:function(e,t){const r=e.x,n=e.y,i=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*i,t[3]=.488603*r,t[4]=1.092548*r*n,t[5]=1.092548*n*i,t[6]=.315392*(3*i*i-1),t[7]=1.092548*r*i,t[8]=.546274*(r*r-n*n)}}),LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=Light.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setPath(i.path),o.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},parse:function(e){const t=this.textures;function r(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const n=new Materials[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=(new Color).setHex(e.sheen)),void 0!==e.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&n.specular.setHex(e.specular),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(n.skinning=e.skinning),void 0!==e.morphTargets&&(n.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(n.morphNormals=e.morphNormals),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.vertexTangents&&(n.vertexTangents=e.vertexTangents),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const i=e.uniforms[t];switch(n.uniforms[t]={},i.type){case"t":n.uniforms[t].value=r(i.value);break;case"c":n.uniforms[t].value=(new Color).setHex(i.value);break;case"v2":n.uniforms[t].value=(new Vector2).fromArray(i.value);break;case"v3":n.uniforms[t].value=(new Vector3).fromArray(i.value);break;case"v4":n.uniforms[t].value=(new Vector4).fromArray(i.value);break;case"m3":n.uniforms[t].value=(new Matrix3).fromArray(i.value);case"m4":n.uniforms[t].value=(new Matrix4).fromArray(i.value);break;default:n.uniforms[t].value=i.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)n.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=r(e.map)),void 0!==e.matcap&&(n.matcap=r(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=r(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=r(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=r(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),n.normalScale=(new Vector2).fromArray(t)}return void 0!==e.displacementMap&&(n.displacementMap=r(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=r(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=r(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=r(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=r(e.specularMap)),void 0!==e.envMap&&(n.envMap=r(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=r(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=r(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=r(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=r(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=r(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=r(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Vector2).fromArray(e.clearcoatNormalScale)),n},setTextures:function(e){return this.textures=e,this}});const LoaderUtils={decodeText:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let r=0,n=e.length;r<n;r++)t+=String.fromCharCode(e[r]);try{return decodeURIComponent(escape(t))}catch(e){return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function InstancedBufferGeometry(){BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function InstancedBufferAttribute(e,t,r,n){"number"==typeof r&&(n=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),BufferAttribute.call(this,e,t,r),this.meshPerAttribute=n||1}function BufferGeometryLoader(e){Loader.call(this,e)}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,copy:function(e){return BufferGeometry.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=BufferGeometry.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(e){return BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=BufferAttribute.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),BufferGeometryLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:BufferGeometryLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setPath(i.path),o.load(e,(function(r){try{t(i.parse(JSON.parse(r)))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)},parse:function(e){const t={},r={};function n(e,n){if(void 0!==t[n])return t[n];const i=e.interleavedBuffers[n],o=function(e,t){if(void 0!==r[t])return r[t];const n=e.arrayBuffers[t],i=new Uint32Array(n).buffer;return r[t]=i,i}(e,i.buffer),a=new InterleavedBuffer(new TYPED_ARRAYS[i.type](o),i.stride);return a.uuid=i.uuid,t[n]=a,a}const i=e.isInstancedBufferGeometry?new InstancedBufferGeometry:new BufferGeometry,o=e.data.index;if(void 0!==o){const e=new TYPED_ARRAYS[o.type](o.array);i.setIndex(new BufferAttribute(e,1))}const a=e.data.attributes;for(const t in a){const r=a[t];let o;if(r.isInterleavedBufferAttribute){o=new InterleavedBufferAttribute(n(e.data,r.data),r.itemSize,r.offset,r.normalized)}else{const e=new TYPED_ARRAYS[r.type](r.array);o=new(r.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(e,r.itemSize,r.normalized)}void 0!==r.name&&(o.name=r.name),i.setAttribute(t,o)}const s=e.data.morphAttributes;if(s)for(const t in s){const r=s[t],o=[];for(let t=0,i=r.length;t<i;t++){const i=r[t];let a;if(i.isInterleavedBufferAttribute){a=new InterleavedBufferAttribute(n(e.data,i.data),i.itemSize,i.offset,i.normalized)}else{a=new BufferAttribute(new TYPED_ARRAYS[i.type](i.array),i.itemSize,i.normalized)}void 0!==i.name&&(a.name=i.name),o.push(a)}i.morphAttributes[t]=o}e.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){const t=l[e];i.addGroup(t.start,t.count,t.materialIndex)}const c=e.data.boundingSphere;if(void 0!==c){const e=new Vector3;void 0!==c.center&&e.fromArray(c.center),i.boundingSphere=new Sphere(e,c.radius)}return e.name&&(i.name=e.name),e.userData&&(i.userData=e.userData),i}});const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function ObjectLoader(e){Loader.call(this,e)}ObjectLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ObjectLoader,load:function(e,t,r,n){const i=this,o=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new FileLoader(i.manager);a.setPath(this.path),a.load(e,(function(r){let o=null;try{o=JSON.parse(r)}catch(t){return void 0!==n&&n(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const a=o.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?i.parse(o,t):console.error("THREE.ObjectLoader: Can't load "+e)}),r,n)},parse:function(e,t){const r=this.parseShape(e.shapes),n=this.parseGeometries(e.geometries,r),i=this.parseImages(e.images,(function(){void 0!==t&&t(s)})),o=this.parseTextures(e.textures,i),a=this.parseMaterials(e.materials,o),s=this.parseObject(e.object,n,a);return e.animations&&(s.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(s),s},parseShape:function(e){const t={};if(void 0!==e)for(let r=0,n=e.length;r<n;r++){const n=(new Shape).fromJSON(e[r]);t[n.uuid]=n}return t},parseGeometries:function(e,t){const r={};let n;if(void 0!==e){const i=new BufferGeometryLoader;for(let o=0,a=e.length;o<a;o++){let a;const s=e[o];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new Geometries[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new Geometries[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new Geometries[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new Geometries[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new Geometries[s.type](s.radius,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new Geometries[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new Geometries[s.type](s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new Geometries[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new Geometries[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new Geometries[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new Geometries[s.type]((new Curves[s.path.type]).fromJSON(s.path),s.tubularSegments,s.radius,s.radialSegments,s.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new Geometries[s.type](s.points,s.segments,s.phiStart,s.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new Geometries[s.type](s.vertices,s.indices,s.radius,s.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":n=[];for(let e=0,r=s.shapes.length;e<r;e++){const r=t[s.shapes[e]];n.push(r)}a=new Geometries[s.type](n,s.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":n=[];for(let e=0,r=s.shapes.length;e<r;e++){const r=t[s.shapes[e]];n.push(r)}const e=s.options.extrudePath;void 0!==e&&(s.options.extrudePath=(new Curves[e.type]).fromJSON(e)),a=new Geometries[s.type](n,s.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(s);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),!0===a.isBufferGeometry&&void 0!==s.userData&&(a.userData=s.userData),r[s.uuid]=a}}return r},parseMaterials:function(e,t){const r={},n={};if(void 0!==e){const i=new MaterialLoader;i.setTextures(t);for(let t=0,o=e.length;t<o;t++){const o=e[t];if("MultiMaterial"===o.type){const e=[];for(let t=0;t<o.materials.length;t++){const n=o.materials[t];void 0===r[n.uuid]&&(r[n.uuid]=i.parse(n)),e.push(r[n.uuid])}n[o.uuid]=e}else void 0===r[o.uuid]&&(r[o.uuid]=i.parse(o)),n[o.uuid]=r[o.uuid]}}return n},parseAnimations:function(e){const t=[];for(let r=0;r<e.length;r++){const n=e[r],i=AnimationClip.parse(n);void 0!==n.uuid&&(i.uuid=n.uuid),t.push(i)}return t},parseImages:function(e,t){const r=this,n={};let i;function o(e){return r.manager.itemStart(e),i.load(e,(function(){r.manager.itemEnd(e)}),void 0,(function(){r.manager.itemError(e),r.manager.itemEnd(e)}))}if(void 0!==e&&e.length>0){const a=new LoadingManager(t);i=new ImageLoader(a),i.setCrossOrigin(this.crossOrigin);for(let t=0,i=e.length;t<i;t++){const i=e[t],a=i.url;if(Array.isArray(a)){n[i.uuid]=[];for(let e=0,t=a.length;e<t;e++){const t=a[e],s=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:r.resourcePath+t;n[i.uuid].push(o(s))}}else{const e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i.url)?i.url:r.resourcePath+i.url;n[i.uuid]=o(e)}}}return n},parseTextures:function(e,t){function r(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const n={};if(void 0!==e)for(let i=0,o=e.length;i<o;i++){const o=e[i];let a;void 0===o.image&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),void 0===t[o.image]&&console.warn("THREE.ObjectLoader: Undefined image",o.image),a=Array.isArray(t[o.image])?new CubeTexture(t[o.image]):new Texture(t[o.image]),a.needsUpdate=!0,a.uuid=o.uuid,void 0!==o.name&&(a.name=o.name),void 0!==o.mapping&&(a.mapping=r(o.mapping,TEXTURE_MAPPING)),void 0!==o.offset&&a.offset.fromArray(o.offset),void 0!==o.repeat&&a.repeat.fromArray(o.repeat),void 0!==o.center&&a.center.fromArray(o.center),void 0!==o.rotation&&(a.rotation=o.rotation),void 0!==o.wrap&&(a.wrapS=r(o.wrap[0],TEXTURE_WRAPPING),a.wrapT=r(o.wrap[1],TEXTURE_WRAPPING)),void 0!==o.format&&(a.format=o.format),void 0!==o.type&&(a.type=o.type),void 0!==o.encoding&&(a.encoding=o.encoding),void 0!==o.minFilter&&(a.minFilter=r(o.minFilter,TEXTURE_FILTER)),void 0!==o.magFilter&&(a.magFilter=r(o.magFilter,TEXTURE_FILTER)),void 0!==o.anisotropy&&(a.anisotropy=o.anisotropy),void 0!==o.flipY&&(a.flipY=o.flipY),void 0!==o.premultiplyAlpha&&(a.premultiplyAlpha=o.premultiplyAlpha),void 0!==o.unpackAlignment&&(a.unpackAlignment=o.unpackAlignment),n[o.uuid]=a}return n},parseObject:function(e,t,r){let n,i,o;function a(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function s(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];void 0===r[i]&&console.warn("THREE.ObjectLoader: Undefined material",i),t.push(r[i])}return t}return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e]}}switch(e.type){case"Scene":n=new Scene,void 0!==e.background&&Number.isInteger(e.background)&&(n.background=new Color(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":n=new DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=(new LightProbe).fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":i=a(e.geometry),o=s(e.material),n=new Mesh(i,o);break;case"InstancedMesh":i=a(e.geometry),o=s(e.material);const t=e.count,r=e.instanceMatrix;n=new InstancedMesh(i,o,t),n.instanceMatrix=new BufferAttribute(new Float32Array(r.array),16);break;case"LOD":n=new LOD;break;case"Line":n=new Line(a(e.geometry),s(e.material),e.mode);break;case"LineLoop":n=new LineLoop(a(e.geometry),s(e.material));break;case"LineSegments":n=new LineSegments(a(e.geometry),s(e.material));break;case"PointCloud":case"Points":n=new Points(a(e.geometry),s(e.material));break;case"Sprite":n=new Sprite(s(e.material));break;case"Group":n=new Group;break;default:n=new Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){const i=e.children;for(let e=0;e<i.length;e++)n.add(this.parseObject(i[e],t,r))}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const r=t[e],i=n.getObjectByProperty("uuid",r.object);void 0!==i&&n.addLevel(i,r.distance)}}return n}});const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};function ImageBitmapLoader(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Loader.call(this,e),this.options={premultiplyAlpha:"none"}}function ShapePath(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}function Font(e){this.type="Font",this.data=e}function createPaths(e,t,r){const n=Array.from?Array.from(e):String(e).split(""),i=t/r.resolution,o=(r.boundingBox.yMax-r.boundingBox.yMin+r.underlineThickness)*i,a=[];let s=0,l=0;for(let e=0;e<n.length;e++){const t=n[e];if("\n"===t)s=0,l-=o;else{const e=createPath(t,i,s,l,r);s+=e.offsetX,a.push(e.path)}}return a}function createPath(e,t,r,n,i){const o=i.glyphs[e]||i.glyphs["?"];if(!o)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+i.familyName+".");const a=new ShapePath;let s,l,c,u,d,h,p,m;if(o.o){const e=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let i=0,o=e.length;i<o;){switch(e[i++]){case"m":s=e[i++]*t+r,l=e[i++]*t+n,a.moveTo(s,l);break;case"l":s=e[i++]*t+r,l=e[i++]*t+n,a.lineTo(s,l);break;case"q":c=e[i++]*t+r,u=e[i++]*t+n,d=e[i++]*t+r,h=e[i++]*t+n,a.quadraticCurveTo(d,h,c,u);break;case"b":c=e[i++]*t+r,u=e[i++]*t+n,d=e[i++]*t+r,h=e[i++]*t+n,p=e[i++]*t+r,m=e[i++]*t+n,a.bezierCurveTo(d,h,p,m,c,u)}}}return{offsetX:o.ha*t,path:a}}function FontLoader(e){Loader.call(this,e)}let _context;ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(e,t,r,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const i=this,o=Cache.get(e);if(void 0!==o)return i.manager.itemStart(e),setTimeout((function(){t&&t(o),i.manager.itemEnd(e)}),0),o;fetch(e).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,i.options)})).then((function(r){Cache.add(e,r),t&&t(r),i.manager.itemEnd(e)})).catch((function(t){n&&n(t),i.manager.itemError(e),i.manager.itemEnd(e)})),i.manager.itemStart(e)}}),Object.assign(ShapePath.prototype,{moveTo:function(e,t){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,r,n){return this.currentPath.quadraticCurveTo(e,t,r,n),this},bezierCurveTo:function(e,t,r,n,i,o){return this.currentPath.bezierCurveTo(e,t,r,n,i,o),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function r(e){const t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r],i=new Shape;i.curves=n.curves,t.push(i)}return t}function n(e,t){const r=t.length;let n=!1;for(let i=r-1,o=0;o<r;i=o++){let r=t[i],a=t[o],s=a.x-r.x,l=a.y-r.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(r=t[o],s=-s,a=t[i],l=-l),e.y<r.y||e.y>a.y)continue;if(e.y===r.y){if(e.x===r.x)return!0}else{const t=l*(e.x-r.x)-s*(e.y-r.y);if(0===t)return!0;if(t<0)continue;n=!n}}else{if(e.y!==r.y)continue;if(a.x<=e.x&&e.x<=r.x||r.x<=e.x&&e.x<=a.x)return!0}}return n}const i=ShapeUtils.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===t)return r(o);let a,s,l,c=[];if(1===o.length)return s=o[0],l=new Shape,l.curves=s.curves,c.push(l),c;let u=!i(o[0].getPoints());u=e?!u:u;const d=[],h=[];let p,m,f=[],g=0;h[g]=void 0,f[g]=[];for(let t=0,r=o.length;t<r;t++)s=o[t],p=s.getPoints(),a=i(p),a=e?!a:a,a?(!u&&h[g]&&g++,h[g]={s:new Shape,p:p},h[g].s.curves=s.curves,u&&g++,f[g]=[]):f[g].push({h:s,p:p[0]});if(!h[0])return r(o);if(h.length>1){let e=!1;const t=[];for(let e=0,t=h.length;e<t;e++)d[e]=[];for(let r=0,i=h.length;r<i;r++){const i=f[r];for(let o=0;o<i.length;o++){const a=i[o];let s=!0;for(let i=0;i<h.length;i++)n(a.p,h[i].p)&&(r!==i&&t.push({froms:r,tos:i,hole:o}),s?(s=!1,d[i].push(a)):e=!0);s&&d[r].push(a)}}t.length>0&&(e||(f=d))}for(let e=0,t=h.length;e<t;e++){l=h[e].s,c.push(l),m=f[e];for(let e=0,t=m.length;e<t;e++)l.holes.push(m[e].h)}return c}}),Object.assign(Font.prototype,{isFont:!0,generateShapes:function(e,t){void 0===t&&(t=100);const r=[],n=createPaths(e,t,this.data);for(let e=0,t=n.length;e<t;e++)Array.prototype.push.apply(r,n[e].toShapes());return r}}),FontLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FontLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(this.manager);o.setPath(this.path),o.load(e,(function(e){let r;try{r=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),r=JSON.parse(e.substring(65,e.length-2))}const n=i.parse(r);t&&t(n)}),r,n)},parse:function(e){return new Font(e)}});const AudioContext={getContext:function(){return void 0===_context&&(_context=new(window.AudioContext||window.webkitAudioContext)),_context},setContext:function(e){_context=e}};function AudioLoader(e){Loader.call(this,e)}function HemisphereLightProbe(e,t,r){LightProbe.call(this,void 0,r);const n=(new Color).set(e),i=(new Color).set(t),o=new Vector3(n.r,n.g,n.b),a=new Vector3(i.r,i.g,i.b),s=Math.sqrt(Math.PI),l=s*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(s),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(l)}function AmbientLightProbe(e,t){LightProbe.call(this,void 0,t);const r=(new Color).set(e);this.sh.coefficients[0].set(r.r,r.g,r.b).multiplyScalar(2*Math.sqrt(Math.PI))}AudioLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AudioLoader,load:function(e,t,r,n){const i=this,o=new FileLoader(i.manager);o.setResponseType("arraybuffer"),o.setPath(i.path),o.load(e,(function(r){try{const e=r.slice(0);AudioContext.getContext().decodeAudioData(e,(function(e){t(e)}))}catch(t){n?n(t):console.error(t),i.manager.itemError(e)}}),r,n)}}),HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,isHemisphereLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){return LightProbe.prototype.toJSON.call(this,e)}}),AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){return LightProbe.prototype.toJSON.call(this,e)}});const _eyeRight=new Matrix4,_eyeLeft=new Matrix4;function StereoCamera(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}function Clock(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(StereoCamera.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const r=e.projectionMatrix.clone(),n=t.eyeSep/2,i=n*t.near/t.focus,o=t.near*Math.tan(MathUtils.DEG2RAD*t.fov*.5)/t.zoom;let a,s;_eyeLeft.elements[12]=-n,_eyeRight.elements[12]=n,a=-o*t.aspect+i,s=o*t.aspect+i,r.elements[0]=2*t.near/(s-a),r.elements[8]=(s+a)/(s-a),this.cameraL.projectionMatrix.copy(r),a=-o*t.aspect-i,s=o*t.aspect-i,r.elements[0]=2*t.near/(s-a),r.elements[8]=(s+a)/(s-a),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_eyeRight)}}),Object.assign(Clock.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});const _position$2=new Vector3,_quaternion$3=new Quaternion,_scale$1=new Vector3,_orientation=new Vector3;function AudioListener(){Object3D.call(this),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}function Audio(e){Object3D.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._progress=0,this.filters=[]}AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function(){return this.gain},removeFilter:function(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e);const t=this.context.listener,r=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1),_orientation.set(0,0,-1).applyQuaternion(_quaternion$3),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(_position$2.x,e),t.positionY.linearRampToValueAtTime(_position$2.y,e),t.positionZ.linearRampToValueAtTime(_position$2.z,e),t.forwardX.linearRampToValueAtTime(_orientation.x,e),t.forwardY.linearRampToValueAtTime(_orientation.y,e),t.forwardZ.linearRampToValueAtTime(_orientation.z,e),t.upX.linearRampToValueAtTime(r.x,e),t.upY.linearRampToValueAtTime(r.y,e),t.upZ.linearRampToValueAtTime(r.z,e)}else t.setPosition(_position$2.x,_position$2.y,_position$2.z),t.setOrientation(_orientation.x,_orientation.y,_orientation.z,r.x,r.y,r.z)}}),Audio.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Audio,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(void 0===e&&(e=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")},stop:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),!0===this.isPlaying?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});const _position$3=new Vector3,_quaternion$4=new Quaternion,_scale$2=new Vector3,_orientation$1=new Vector3;function PositionalAudio(e){Audio.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}function AudioAnalyser(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}function PropertyMixer(e,t,r){let n,i,o;switch(this.binding=e,this.valueSize=r,t){case"quaternion":n=this._slerp,i=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":n=this._select,i=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:n=this._lerp,i=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=i,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}PositionalAudio.prototype=Object.assign(Object.create(Audio.prototype),{constructor:PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this},updateMatrixWorld:function(e){if(Object3D.prototype.updateMatrixWorld.call(this,e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2),_orientation$1.set(0,0,1).applyQuaternion(_quaternion$4);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(_position$3.x,e),t.positionY.linearRampToValueAtTime(_position$3.y,e),t.positionZ.linearRampToValueAtTime(_position$3.z,e),t.orientationX.linearRampToValueAtTime(_orientation$1.x,e),t.orientationY.linearRampToValueAtTime(_orientation$1.y,e),t.orientationZ.linearRampToValueAtTime(_orientation$1.z,e)}else t.setPosition(_position$3.x,_position$3.y,_position$3.z),t.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z)}}),Object.assign(AudioAnalyser.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){let e=0;const t=this.getFrequencyData();for(let r=0;r<t.length;r++)e+=t[r];return e/t.length}}),Object.assign(PropertyMixer.prototype,{accumulate:function(e,t){const r=this.buffer,n=this.valueSize,i=e*n+n;let o=this.cumulativeWeight;if(0===o){for(let e=0;e!==n;++e)r[i+e]=r[e];o=t}else{o+=t;const e=t/o;this._mixBufferRegion(r,i,0,e,n)}this.cumulativeWeight=o},accumulateAdditive:function(e){const t=this.buffer,r=this.valueSize,n=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,r),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,r=this.buffer,n=e*t+t,i=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const e=t*this._origIndex;this._mixBufferRegion(r,n,e,1-i,t)}o>0&&this._mixBufferRegionAdditive(r,n,this._addIndex*t,1,t);for(let e=t,i=t+t;e!==i;++e)if(r[e]!==r[e+t]){a.setValue(r,n);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,r=this.valueSize,n=r*this._origIndex;e.getValue(t,n);for(let e=r,i=n;e!==i;++e)t[e]=t[n+e%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let r=e;r<t;r++)this.buffer[r]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[4*this._addIndex+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let r=0;r<this.valueSize;r++)this.buffer[t+r]=this.buffer[e+r]},_select:function(e,t,r,n,i){if(n>=.5)for(let n=0;n!==i;++n)e[t+n]=e[r+n]},_slerp:function(e,t,r,n){Quaternion.slerpFlat(e,t,e,t,e,r,n)},_slerpAdditive:function(e,t,r,n,i){const o=this._workIndex*i;Quaternion.multiplyQuaternionsFlat(e,o,e,t,e,r),Quaternion.slerpFlat(e,t,e,t,e,o,n)},_lerp:function(e,t,r,n,i){const o=1-n;for(let a=0;a!==i;++a){const i=t+a;e[i]=e[i]*o+e[r+a]*n}},_lerpAdditive:function(e,t,r,n,i){for(let o=0;o!==i;++o){const i=t+o;e[i]=e[i]+e[r+o]*n}}});const _RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=new RegExp("["+_RESERVED_CHARS_RE+"]","g"),_wordChar="[^"+_RESERVED_CHARS_RE+"]",_wordCharOrDot="[^"+_RESERVED_CHARS_RE.replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];function Composite(e,t,r){const n=r||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}function PropertyBinding(e,t,r){this.path=t,this.parsedPath=r||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,r=arguments.length;t!==r;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}function AnimationAction(e,t,r,n){this._mixer=e,this._clip=t,this._localRoot=r||null,this.blendMode=n||t.blendMode;const i=t.tracks,o=i.length,a=new Array(o),s={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let e=0;e!==o;++e){const t=i[e].createInterpolant(null);a[e]=t,t.settings=s}this._interpolantSettings=s,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function AnimationMixer(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function Uniform(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}function InstancedInterleavedBuffer(e,t,r){InterleavedBuffer.call(this,e,t),this.meshPerAttribute=r||1}function Raycaster(e,t,r,n){this.ray=new Ray(e,t),this.near=r||0,this.far=n||1/0,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ascSort(e,t){return e.distance-t.distance}function intersectObject(e,t,r,n){if(e.layers.test(t.layers)&&e.raycast(t,r),!0===n){const n=e.children;for(let e=0,i=n.length;e<i;e++)intersectObject(n[e],t,r,!0)}}function Spherical(e,t,r){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==r?r:0,this}function Cylindrical(e,t,r){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==r?r:0,this}Object.assign(Composite.prototype,{getValue:function(e,t){this.bind();const r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)},setValue:function(e,t){const r=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=r.length;n!==i;++n)r[n].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,r=e.length;t!==r;++t)e[t].unbind()}}),Object.assign(PropertyBinding,{Composite:Composite,create:function(e,t,r){return e&&e.isAnimationObjectGroup?new PropertyBinding.Composite(e,t,r):new PropertyBinding(e,t,r)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")},parseTrackName:function(e){const t=_trackRe.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const e=r.nodeName.substring(n+1);-1!==_supportedObjectNames.indexOf(e)&&(r.nodeName=r.nodeName.substring(0,n),r.objectName=e)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const r=e.skeleton.getBoneByName(t);if(void 0!==r)return r}if(e.children){const r=function(e){for(let n=0;n<e.length;n++){const i=e[n];if(i.name===t||i.uuid===t)return i;const o=r(i.children);if(o)return o}return null},n=r(e.children);if(n)return n}return null}}),Object.assign(PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)e[t++]=r[n]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++]},function(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const r=this.resolvedProperty;for(let n=0,i=r.length;n!==i;++n)r[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node,t=this.parsedPath,r=t.objectName,n=t.propertyName,i=t.propertyIndex;if(e||(e=PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(r){let n=t.objectIndex;switch(r){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;default:if(void 0===e[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[r]}if(void 0!==n){if(void 0===e[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[n]}}const o=e[n];if(void 0===o){const r=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+r+"."+n+" but it wasn't found.",e)}let a=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let s=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===n){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[i]&&(i=e.morphTargetDictionary[i])}s=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=i}else void 0!==o.fromArray&&void 0!==o.toArray?(s=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(s=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[s],this.setValue=this.SetterByBindingTypeAndVersioning[s][a]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(PropertyBinding.prototype,{_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue}),Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,r=this._paths,n=this._parsedPaths,i=this._bindings,o=i.length;let a=void 0,s=e.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const u=arguments[c],d=u.uuid;let h=t[d];if(void 0===h){h=s++,t[d]=h,e.push(u);for(let e=0,t=o;e!==t;++e)i[e].push(new PropertyBinding(u,r[e],n[e]))}else if(h<l){a=e[h];const s=--l,c=e[s];t[c.uuid]=h,e[h]=c,t[d]=s,e[s]=u;for(let e=0,t=o;e!==t;++e){const t=i[e],o=t[s];let a=t[h];t[h]=o,void 0===a&&(a=new PropertyBinding(u,r[e],n[e])),t[s]=a}}else e[h]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;let i=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const a=arguments[o],s=a.uuid,l=t[s];if(void 0!==l&&l>=i){const o=i++,c=e[o];t[c.uuid]=l,e[l]=c,t[s]=o,e[o]=a;for(let e=0,t=n;e!==t;++e){const t=r[e],n=t[o],i=t[l];t[l]=n,t[o]=i}}}this.nCachedObjects_=i},uncache:function(){const e=this._objects,t=this._indicesByUUID,r=this._bindings,n=r.length;let i=this.nCachedObjects_,o=e.length;for(let a=0,s=arguments.length;a!==s;++a){const s=arguments[a].uuid,l=t[s];if(void 0!==l)if(delete t[s],l<i){const a=--i,s=e[a],c=--o,u=e[c];t[s.uuid]=l,e[l]=s,t[u.uuid]=a,e[a]=u,e.pop();for(let e=0,t=n;e!==t;++e){const t=r[e],n=t[a],i=t[c];t[l]=n,t[a]=i,t.pop()}}else{const i=--o,a=e[i];t[a.uuid]=l,e[l]=a,e.pop();for(let e=0,t=n;e!==t;++e){const t=r[e];t[l]=t[i],t.pop()}}}this.nCachedObjects_=i},subscribe_:function(e,t){let r=this._bindingsIndicesByPath,n=r[e],i=this._bindings;if(void 0!==n)return i[n];const o=this._paths,a=this._parsedPaths,s=this._objects,l=s.length,c=this.nCachedObjects_,u=new Array(l);n=i.length,r[e]=n,o.push(e),a.push(t),i.push(u);for(let r=c,n=s.length;r!==n;++r){const n=s[r];u[r]=new PropertyBinding(n,e,t)}return u},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,r=t[e];if(void 0!==r){const n=this._paths,i=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];t[e[a]]=r,o[r]=s,o.pop(),i[r]=i[a],i.pop(),n[r]=n[a],n.pop()}}}),Object.assign(AnimationAction.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,r){if(e.fadeOut(t),this.fadeIn(t),r){const r=this._clip.duration,n=e._clip.duration,i=n/r,o=r/n;e.warp(1,i,t),this.warp(o,1,t)}return this},crossFadeTo:function(e,t,r){return e.crossFadeFrom(this,t,r)},stopFading:function(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,r){const n=this._mixer,i=n.time,o=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const s=a.parameterPositions,l=a.sampleValues;return s[0]=i,s[1]=i+r,l[0]=e/o,l[1]=t/o,this},stopWarping:function(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,r,n){if(!this.enabled)return void this._updateWeight(e);const i=this._startTime;if(null!==i){const n=(e-i)*r;if(n<0||0===r)return;this._startTime=null,t=r*n}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const e=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(let r=0,n=e.length;r!==n;++r)e[r].evaluate(o),t[r].accumulateAdditive(a);break;case NormalAnimationBlendMode:default:for(let r=0,i=e.length;r!==i;++r)e[r].evaluate(o),t[r].accumulate(n,a)}}},_updateWeight:function(e){let t=0;if(this.enabled){t=this.weight;const r=this._weightInterpolant;if(null!==r){const n=r.evaluate(e)[0];t*=n,e>r.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){let t=0;if(!this.paused){t=this.timeScale;const r=this._timeScaleInterpolant;if(null!==r){t*=r.evaluate(e)[0],e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){const t=this._clip.duration,r=this.loop;let n=this.time+e,i=this._loopCount;const o=r===LoopPingPong;if(0===e)return-1===i?n:o&&1==(1&i)?t-n:n;if(r===LoopOnce){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===i&&(e>=0?(i=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),n>=t||n<0){const r=Math.floor(n/t);n-=t*r,i+=Math.abs(r);const a=this.repetitions-i;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===a){const t=e<0;this._setEndings(t,!t,o)}else this._setEndings(!1,!1,o);this._loopCount=i,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r})}}else this.time=n;if(o&&1==(1&i))return t-n}return n},_setEndings:function(e,t,r){const n=this._interpolantSettings;r?(n.endingStart=ZeroSlopeEnding,n.endingEnd=ZeroSlopeEnding):(n.endingStart=e?this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding,n.endingEnd=t?this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding:WrapAroundEnding)},_scheduleFading:function(e,t,r){const n=this._mixer,i=n.time;let o=this._weightInterpolant;null===o&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,s=o.sampleValues;return a[0]=i,s[0]=t,a[1]=i+e,s[1]=r,this}}),AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(e,t){const r=e._localRoot||this._root,n=e._clip.tracks,i=n.length,o=e._propertyBindings,a=e._interpolants,s=r.uuid,l=this._bindingsByRootAndName;let c=l[s];void 0===c&&(c={},l[s]=c);for(let e=0;e!==i;++e){const i=n[e],l=i.name;let u=c[l];if(void 0!==u)o[e]=u;else{if(u=o[e],void 0!==u){null===u._cacheIndex&&(++u.referenceCount,this._addInactiveBinding(u,s,l));continue}const n=t&&t._propertyBindings[e].binding.parsedPath;u=new PropertyMixer(PropertyBinding.create(r,l,n),i.ValueTypeName,i.getValueSize()),++u.referenceCount,this._addInactiveBinding(u,s,l),o[e]=u}a[e].resultBuffer=u.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,r,t)}const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==r.useCount++&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,r){const n=this._actions,i=this._actionsByClip;let o=i[t];if(void 0===o)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=o;else{const t=o.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=n.length,n.push(e),o.actionByRoot[r]=e},_removeInactiveAction:function(e){const t=this._actions,r=t[t.length-1],n=e._cacheIndex;r._cacheIndex=n,t[n]=r,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,o=this._actionsByClip,a=o[i],s=a.knownActions,l=s[s.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,s[c]=l,s.pop(),e._byClipCacheIndex=null;delete a.actionByRoot[(e._localRoot||this._root).uuid],0===s.length&&delete o[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let e=0,r=t.length;e!==r;++e){const r=t[e];0==--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(e){const t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_takeBackAction:function(e){const t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_addInactiveBinding:function(e,t,r){const n=this._bindingsByRootAndName,i=this._bindings;let o=n[t];void 0===o&&(o={},n[t]=o),o[r]=e,e._cacheIndex=i.length,i.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,o=this._bindingsByRootAndName,a=o[n],s=t[t.length-1],l=e._cacheIndex;s._cacheIndex=l,t[l]=s,t.pop(),delete a[i],0===Object.keys(a).length&&delete o[n]},_lendBinding:function(e){const t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_takeBackBinding:function(e){const t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&(r=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),r.__cacheIndex=t,e[t]=r),r},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n,t[n]=e,i.__cacheIndex=r,t[r]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,r){const n=t||this._root,i=n.uuid;let o="string"==typeof e?AnimationClip.findByName(n,e):e;const a=null!==o?o.uuid:e;let s=this._actionsByClip[a],l=null;if(void 0===r&&(r=null!==o?o.blendMode:NormalAnimationBlendMode),void 0!==s){const e=s.actionByRoot[i];if(void 0!==e&&e.blendMode===r)return e;l=s.knownActions[0],null===o&&(o=l._clip)}if(null===o)return null;const c=new AnimationAction(this,o,t,r);return this._bindAction(c,l),this._addInactiveAction(c,a,i),c},existingAction:function(e,t){const r=t||this._root,n=r.uuid,i="string"==typeof e?AnimationClip.findByName(r,e):e,o=i?i.uuid:e,a=this._actionsByClip[o];return void 0!==a&&a.actionByRoot[n]||null},stopAllAction:function(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,r=this._nActiveActions,n=this.time+=e,i=Math.sign(e),o=this._accuIndex^=1;for(let a=0;a!==r;++a){t[a]._update(n,e,i,o)}const a=this._bindings,s=this._nActiveBindings;for(let e=0;e!==s;++e)a[e].apply(o);return this},setTime:function(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,r=e.uuid,n=this._actionsByClip,i=n[r];if(void 0!==i){const e=i.knownActions;for(let r=0,n=e.length;r!==n;++r){const n=e[r];this._deactivateAction(n);const i=n._cacheIndex,o=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,o._cacheIndex=i,t[i]=o,t.pop(),this._removeInactiveBindingsForAction(n)}delete n[r]}},uncacheRoot:function(e){const t=e.uuid,r=this._actionsByClip;for(const e in r){const n=r[e].actionByRoot[t];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[t];if(void 0!==n)for(const e in n){const t=n[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const r=this.existingAction(e,t);null!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}}),Uniform.prototype.clone=function(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())},InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(e){return InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=InterleavedBuffer.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=InterleavedBuffer.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.assign(Raycaster.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,r){const n=r||[];return intersectObject(e,this,n,t),n.sort(ascSort),n},intersectObjects:function(e,t,r){const n=r||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(let r=0,i=e.length;r<i;r++)intersectObject(e[r],this,n,t);return n.sort(ascSort),n}}),Object.assign(Spherical.prototype,{set:function(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(MathUtils.clamp(t/this.radius,-1,1))),this}}),Object.assign(Cylindrical.prototype,{set:function(e,t,r){return this.radius=e,this.theta=t,this.y=r,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}});const _vector$7=new Vector2;function Box2(e,t){this.min=void 0!==e?e:new Vector2(1/0,1/0),this.max=void 0!==t?t:new Vector2(-1/0,-1/0)}Object.assign(Box2.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const r=_vector$7.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Vector2),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Vector2),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return _vector$7.copy(e).clamp(this.min,this.max).sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});const _startP=new Vector3,_startEnd=new Vector3;function Line3(e,t){this.start=void 0!==e?e:new Vector3,this.end=void 0!==t?t:new Vector3}function ImmediateRenderObject(e){Object3D.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Object.assign(Line3.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Vector3),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Vector3),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new Vector3),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,t){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);const r=_startEnd.dot(_startEnd);let n=_startEnd.dot(_startP)/r;return t&&(n=MathUtils.clamp(n,0,1)),n},closestPointToPoint:function(e,t,r){const n=this.closestPointToPointParameter(e,t);return void 0===r&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),r=new Vector3),this.delta(r).multiplyScalar(n).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}),ImmediateRenderObject.prototype=Object.create(Object3D.prototype),ImmediateRenderObject.prototype.constructor=ImmediateRenderObject,ImmediateRenderObject.prototype.isImmediateRenderObject=!0;const _vector$8=new Vector3;function SpotLightHelper(e,t){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const r=new BufferGeometry,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,r=32;e<r;e++,t++){const i=e/r*Math.PI*2,o=t/r*Math.PI*2;n.push(Math.cos(i),Math.sin(i),1,Math.cos(o),Math.sin(o),1)}r.setAttribute("position",new Float32BufferAttribute(n,3));const i=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(r,i),this.add(this.cone),this.update()}SpotLightHelper.prototype=Object.create(Object3D.prototype),SpotLightHelper.prototype.constructor=SpotLightHelper,SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},SpotLightHelper.prototype.update=function(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),_vector$8.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$8),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};const _vector$9=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;function getBoneList(e){const t=[];e&&e.isBone&&t.push(e);for(let r=0;r<e.children.length;r++)t.push.apply(t,getBoneList(e.children[r]));return t}function SkeletonHelper(e){const t=getBoneList(e),r=new BufferGeometry,n=[],i=[],o=new Color(0,0,1),a=new Color(0,1,0);for(let e=0;e<t.length;e++){const r=t[e];r.parent&&r.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),i.push(o.r,o.g,o.b),i.push(a.r,a.g,a.b))}r.setAttribute("position",new Float32BufferAttribute(n,3)),r.setAttribute("color",new Float32BufferAttribute(i,3));const s=new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});LineSegments.call(this,r,s),this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}function PointLightHelper(e,t,r){this.light=e,this.light.updateMatrixWorld(),this.color=r;const n=new SphereBufferGeometry(t,4,2),i=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1});Mesh.call(this,n,i),this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}SkeletonHelper.prototype=Object.create(LineSegments.prototype),SkeletonHelper.prototype.constructor=SkeletonHelper,SkeletonHelper.prototype.isSkeletonHelper=!0,SkeletonHelper.prototype.updateMatrixWorld=function(e){const t=this.bones,r=this.geometry,n=r.getAttribute("position");_matrixWorldInv.getInverse(this.root.matrixWorld);for(let e=0,r=0;e<t.length;e++){const i=t[e];i.parent&&i.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,i.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),n.setXYZ(r,_vector$9.x,_vector$9.y,_vector$9.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,i.parent.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),n.setXYZ(r+1,_vector$9.x,_vector$9.y,_vector$9.z),r+=2)}r.getAttribute("position").needsUpdate=!0,Object3D.prototype.updateMatrixWorld.call(this,e)},PointLightHelper.prototype=Object.create(Mesh.prototype),PointLightHelper.prototype.constructor=PointLightHelper,PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},PointLightHelper.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)};const _vector$a=new Vector3,_color1=new Color,_color2=new Color;function HemisphereLightHelper(e,t,r){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;const n=new OctahedronBufferGeometry(t);n.rotateY(.5*Math.PI),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const i=n.getAttribute("position"),o=new Float32Array(3*i.count);n.setAttribute("color",new BufferAttribute(o,3)),this.add(new Mesh(n,this.material)),this.update()}function GridHelper(e,t,r,n){e=e||10,t=t||10,r=new Color(void 0!==r?r:4473924),n=new Color(void 0!==n?n:8947848);const i=t/2,o=e/t,a=e/2,s=[],l=[];for(let e=0,c=0,u=-a;e<=t;e++,u+=o){s.push(-a,0,u,a,0,u),s.push(u,0,-a,u,0,a);const t=e===i?r:n;t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3}const c=new BufferGeometry;c.setAttribute("position",new Float32BufferAttribute(s,3)),c.setAttribute("color",new Float32BufferAttribute(l,3));const u=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,c,u),this.type="GridHelper"}function PolarGridHelper(e,t,r,n,i,o){e=e||10,t=t||16,r=r||8,n=n||64,i=new Color(void 0!==i?i:4473924),o=new Color(void 0!==o?o:8947848);const a=[],s=[];for(let r=0;r<=t;r++){const n=r/t*(2*Math.PI),l=Math.sin(n)*e,c=Math.cos(n)*e;a.push(0,0,0),a.push(l,0,c);const u=1&r?i:o;s.push(u.r,u.g,u.b),s.push(u.r,u.g,u.b)}for(let t=0;t<=r;t++){const l=1&t?i:o,c=e-e/r*t;for(let e=0;e<n;e++){let t=e/n*(2*Math.PI),r=Math.sin(t)*c,i=Math.cos(t)*c;a.push(r,0,i),s.push(l.r,l.g,l.b),t=(e+1)/n*(2*Math.PI),r=Math.sin(t)*c,i=Math.cos(t)*c,a.push(r,0,i),s.push(l.r,l.g,l.b)}}const l=new BufferGeometry;l.setAttribute("position",new Float32BufferAttribute(a,3)),l.setAttribute("color",new Float32BufferAttribute(s,3));const c=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,l,c),this.type="PolarGridHelper"}HemisphereLightHelper.prototype=Object.create(Object3D.prototype),HemisphereLightHelper.prototype.constructor=HemisphereLightHelper,HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},HemisphereLightHelper.prototype.update=function(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(let e=0,r=t.count;e<r;e++){const n=e<r/2?_color1:_color2;t.setXYZ(e,n.r,n.g,n.b)}t.needsUpdate=!0}e.lookAt(_vector$a.setFromMatrixPosition(this.light.matrixWorld).negate())},GridHelper.prototype=Object.assign(Object.create(LineSegments.prototype),{constructor:GridHelper,copy:function(e){return LineSegments.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return(new this.constructor).copy(this)}}),PolarGridHelper.prototype=Object.create(LineSegments.prototype),PolarGridHelper.prototype.constructor=PolarGridHelper;const _v1$5=new Vector3,_v2$3=new Vector3,_v3$1=new Vector3;function DirectionalLightHelper(e,t,r){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);let n=new BufferGeometry;n.setAttribute("position",new Float32BufferAttribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const i=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(n,i),this.add(this.lightPlane),n=new BufferGeometry,n.setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(n,i),this.add(this.targetLine),this.update()}DirectionalLightHelper.prototype=Object.create(Object3D.prototype),DirectionalLightHelper.prototype.constructor=DirectionalLightHelper,DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},DirectionalLightHelper.prototype.update=function(){_v1$5.setFromMatrixPosition(this.light.matrixWorld),_v2$3.setFromMatrixPosition(this.light.target.matrixWorld),_v3$1.subVectors(_v2$3,_v1$5),this.lightPlane.lookAt(_v2$3),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(_v2$3),this.targetLine.scale.z=_v3$1.length()};const _vector$b=new Vector3,_camera=new Camera;function CameraHelper(e){const t=new BufferGeometry,r=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],i=[],o={},a=new Color(16755200),s=new Color(16711680),l=new Color(43775),c=new Color(16777215),u=new Color(3355443);function d(e,t,r){h(e,r),h(t,r)}function h(e,t){n.push(0,0,0),i.push(t.r,t.g,t.b),void 0===o[e]&&(o[e]=[]),o[e].push(n.length/3-1)}d("n1","n2",a),d("n2","n4",a),d("n4","n3",a),d("n3","n1",a),d("f1","f2",a),d("f2","f4",a),d("f4","f3",a),d("f3","f1",a),d("n1","f1",a),d("n2","f2",a),d("n3","f3",a),d("n4","f4",a),d("p","n1",s),d("p","n2",s),d("p","n3",s),d("p","n4",s),d("u1","u2",l),d("u2","u3",l),d("u3","u1",l),d("c","t",c),d("p","c",u),d("cn1","cn2",u),d("cn3","cn4",u),d("cf1","cf2",u),d("cf3","cf4",u),t.setAttribute("position",new Float32BufferAttribute(n,3)),t.setAttribute("color",new Float32BufferAttribute(i,3)),LineSegments.call(this,t,r),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}function setPoint(e,t,r,n,i,o,a){_vector$b.set(i,o,a).unproject(n);const s=t[e];if(void 0!==s){const e=r.getAttribute("position");for(let t=0,r=s.length;t<r;t++)e.setXYZ(s[t],_vector$b.x,_vector$b.y,_vector$b.z)}}CameraHelper.prototype=Object.create(LineSegments.prototype),CameraHelper.prototype.constructor=CameraHelper,CameraHelper.prototype.update=function(){const e=this.geometry,t=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-1,-1,-1),setPoint("n2",t,e,_camera,1,-1,-1),setPoint("n3",t,e,_camera,-1,1,-1),setPoint("n4",t,e,_camera,1,1,-1),setPoint("f1",t,e,_camera,-1,-1,1),setPoint("f2",t,e,_camera,1,-1,1),setPoint("f3",t,e,_camera,-1,1,1),setPoint("f4",t,e,_camera,1,1,1),setPoint("u1",t,e,_camera,.7,1.1,-1),setPoint("u2",t,e,_camera,-.7,1.1,-1),setPoint("u3",t,e,_camera,0,2,-1),setPoint("cf1",t,e,_camera,-1,0,1),setPoint("cf2",t,e,_camera,1,0,1),setPoint("cf3",t,e,_camera,0,-1,1),setPoint("cf4",t,e,_camera,0,1,1),setPoint("cn1",t,e,_camera,-1,0,-1),setPoint("cn2",t,e,_camera,1,0,-1),setPoint("cn3",t,e,_camera,0,-1,-1),setPoint("cn4",t,e,_camera,0,1,-1),e.getAttribute("position").needsUpdate=!0};const _box$3=new Box3;function BoxHelper(e,t){this.object=e,void 0===t&&(t=16776960);const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),i=new BufferGeometry;i.setIndex(new BufferAttribute(r,1)),i.setAttribute("position",new BufferAttribute(n,3)),LineSegments.call(this,i,new LineBasicMaterial({color:t,toneMapped:!1})),this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}function Box3Helper(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new BufferGeometry;n.setIndex(new BufferAttribute(r,1)),n.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),LineSegments.call(this,n,new LineBasicMaterial({color:t,toneMapped:!1})),this.type="Box3Helper",this.geometry.computeBoundingSphere()}function PlaneHelper(e,t,r){this.plane=e,this.size=void 0===t?1:t;const n=void 0!==r?r:16776960,i=new BufferGeometry;i.setAttribute("position",new Float32BufferAttribute([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),i.computeBoundingSphere(),Line.call(this,i,new LineBasicMaterial({color:n,toneMapped:!1})),this.type="PlaneHelper";const o=new BufferGeometry;o.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),o.computeBoundingSphere(),this.add(new Mesh(o,new MeshBasicMaterial({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}BoxHelper.prototype=Object.create(LineSegments.prototype),BoxHelper.prototype.constructor=BoxHelper,BoxHelper.prototype.update=function(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_box$3.setFromObject(this.object),_box$3.isEmpty())return;const t=_box$3.min,r=_box$3.max,n=this.geometry.attributes.position,i=n.array;i[0]=r.x,i[1]=r.y,i[2]=r.z,i[3]=t.x,i[4]=r.y,i[5]=r.z,i[6]=t.x,i[7]=t.y,i[8]=r.z,i[9]=r.x,i[10]=t.y,i[11]=r.z,i[12]=r.x,i[13]=r.y,i[14]=t.z,i[15]=t.x,i[16]=r.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=r.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()},BoxHelper.prototype.setFromObject=function(e){return this.object=e,this.update(),this},BoxHelper.prototype.copy=function(e){return LineSegments.prototype.copy.call(this,e),this.object=e.object,this},BoxHelper.prototype.clone=function(){return(new this.constructor).copy(this)},Box3Helper.prototype=Object.create(LineSegments.prototype),Box3Helper.prototype.constructor=Box3Helper,Box3Helper.prototype.updateMatrixWorld=function(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),Object3D.prototype.updateMatrixWorld.call(this,e))},PlaneHelper.prototype=Object.create(Line.prototype),PlaneHelper.prototype.constructor=PlaneHelper,PlaneHelper.prototype.updateMatrixWorld=function(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?BackSide:FrontSide,this.lookAt(this.plane.normal),Object3D.prototype.updateMatrixWorld.call(this,e)};const _axis=new Vector3;let _lineGeometry,_coneGeometry;function ArrowHelper(e,t,r,n,i,o){Object3D.call(this),this.type="ArrowHelper",void 0===e&&(e=new Vector3(0,0,1)),void 0===t&&(t=new Vector3(0,0,0)),void 0===r&&(r=1),void 0===n&&(n=16776960),void 0===i&&(i=.2*r),void 0===o&&(o=.2*i),void 0===_lineGeometry&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new CylinderBufferGeometry(0,.5,1,5,1),_coneGeometry.translate(0,-.5,0)),this.position.copy(t),this.line=new Line(_lineGeometry,new LineBasicMaterial({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,i,o)}function AxesHelper(e){const t=[0,0,0,e=e||1,0,0,0,0,0,0,e,0,0,0,0,0,0,e],r=new BufferGeometry;r.setAttribute("position",new Float32BufferAttribute(t,3)),r.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));const n=new LineBasicMaterial({vertexColors:!0,toneMapped:!1});LineSegments.call(this,r,n),this.type="AxesHelper"}ArrowHelper.prototype=Object.create(Object3D.prototype),ArrowHelper.prototype.constructor=ArrowHelper,ArrowHelper.prototype.setDirection=function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_axis.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_axis,t)}},ArrowHelper.prototype.setLength=function(e,t,r){void 0===t&&(t=.2*e),void 0===r&&(r=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()},ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},ArrowHelper.prototype.copy=function(e){return Object3D.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},ArrowHelper.prototype.clone=function(){return(new this.constructor).copy(this)},AxesHelper.prototype=Object.create(LineSegments.prototype),AxesHelper.prototype.constructor=AxesHelper;const LOD_MIN=4,LOD_MAX=8,SIZE_MAX=Math.pow(2,LOD_MAX),EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length,MAX_SAMPLES=20,ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6},_flatCamera=new OrthographicCamera,{_lodPlanes:_lodPlanes,_sizeLods:_sizeLods,_sigmas:_sigmas}=_createPlanes();let _oldTarget=null;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];function PMREMGenerator(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_getBlurShader(MAX_SAMPLES),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}function _isLDR(e){return void 0!==e&&e.type===UnsignedByteType&&(e.encoding===LinearEncoding||e.encoding===sRGBEncoding||e.encoding===GammaEncoding)}function _createPlanes(){const e=[],t=[],r=[];let n=LOD_MAX;for(let i=0;i<TOTAL_LODS;i++){const o=Math.pow(2,n);t.push(o);let a=1/o;i>LOD_MAX-LOD_MIN?a=EXTRA_LOD_SIGMA[i-LOD_MAX+LOD_MIN-1]:0==i&&(a=0),r.push(a);const s=1/(o-1),l=-s/2,c=1+s/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],d=6,h=6,p=3,m=2,f=1,g=new Float32Array(p*h*d),_=new Float32Array(m*h*d),v=new Float32Array(f*h*d);for(let e=0;e<d;e++){const t=e%3*2/3-1,r=e>2?0:-1,n=[t,r,0,t+2/3,r,0,t+2/3,r+1,0,t,r,0,t+2/3,r+1,0,t,r+1,0];g.set(n,p*h*e),_.set(u,m*h*e);const i=[e,e,e,e,e,e];v.set(i,f*h*e)}const y=new BufferGeometry;y.setAttribute("position",new BufferAttribute(g,p)),y.setAttribute("uv",new BufferAttribute(_,m)),y.setAttribute("faceIndex",new BufferAttribute(v,f)),e.push(y),n>LOD_MIN&&n--}return{_lodPlanes:e,_sizeLods:t,_sigmas:r}}function _createRenderTarget(e){const t=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,e);return t.texture.mapping=CubeUVReflectionMapping,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function _setViewport(e,t,r,n,i){e.viewport.set(t,r,n,i),e.scissor.set(t,r,n,i)}function _getBlurShader(e){return new RawShaderMaterial({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(e)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new Vector3(0,1,0)},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n${_getEncodings()}\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getEquirectShader(){return new RawShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:new Vector2(1,1)},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n${_getEncodings()}\n\n#include <common>\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv = equirectUv( outputDirection );\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCubemapShader(){return new RawShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n${_getEncodings()}\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t`,blending:NoBlending,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return"\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\n\n// RH coordinate system; PMREM face-indexing convention\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\t} else if (face == 2.0) {\n\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\t} else if (face == 5.0) {\n\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\t}\n\treturn direction;\n}\n\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t"}function _getEncodings(){return"\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t"}function Face4(e,t,r,n,i,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Face3(e,t,r,i,o,a)}PMREMGenerator.prototype={constructor:PMREMGenerator,fromScene:function(e,t=0,r=.1,n=100){_oldTarget=this._renderer.getRenderTarget();const i=this._allocateTargets();return this._sceneToCubeUV(e,r,n,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i},fromEquirectangular:function(e){return this._fromTexture(e)},fromCubemap:function(e){return this._fromTexture(e)},compileCubemapShader:function(){null===this._cubemapShader&&(this._cubemapShader=_getCubemapShader(),this._compileMaterial(this._cubemapShader))},compileEquirectangularShader:function(){null===this._equirectShader&&(this._equirectShader=_getEquirectShader(),this._compileMaterial(this._equirectShader))},dispose:function(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<_lodPlanes.length;e++)_lodPlanes[e].dispose()},_cleanup:function(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,_setViewport(e,0,0,e.width,e.height)},_fromTexture:function(e){_oldTarget=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t},_allocateTargets:function(e){const t={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:!1,type:UnsignedByteType,format:RGBEFormat,encoding:_isLDR(e)?e.encoding:RGBEEncoding,depthBuffer:!1,stencilBuffer:!1},r=_createRenderTarget(t);return r.depthBuffer=!e,this._pingPongRenderTarget=_createRenderTarget(t),r},_compileMaterial:function(e){const t=new Mesh(_lodPlanes[0],e);this._renderer.compile(t,_flatCamera)},_sceneToCubeUV:function(e,t,r,n){const i=new PerspectiveCamera(90,1,t,r),o=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],s=this._renderer,l=s.outputEncoding,c=s.toneMapping,u=s.getClearColor(),d=s.getClearAlpha();s.toneMapping=NoToneMapping,s.outputEncoding=LinearEncoding;let h=e.background;if(h&&h.isColor){h.convertSRGBToLinear();const t=Math.max(h.r,h.g,h.b),r=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);h=h.multiplyScalar(Math.pow(2,-r));const n=(r+128)/255;s.setClearColor(h,n),e.background=null}for(let t=0;t<6;t++){const r=t%3;0==r?(i.up.set(0,o[t],0),i.lookAt(a[t],0,0)):1==r?(i.up.set(0,0,o[t]),i.lookAt(0,a[t],0)):(i.up.set(0,o[t],0),i.lookAt(0,0,a[t])),_setViewport(n,r*SIZE_MAX,t>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX),s.setRenderTarget(n),s.render(e,i)}s.toneMapping=c,s.outputEncoding=l,s.setClearColor(u,d)},_textureToCubeUV:function(e,t){const r=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=_getCubemapShader()):null==this._equirectShader&&(this._equirectShader=_getEquirectShader());const n=e.isCubeTexture?this._cubemapShader:this._equirectShader,i=new Mesh(_lodPlanes[0],n),o=n.uniforms;o.envMap.value=e,e.isCubeTexture||o.texelSize.value.set(1/e.image.width,1/e.image.height),o.inputEncoding.value=ENCODINGS[e.encoding],o.outputEncoding.value=ENCODINGS[t.texture.encoding],_setViewport(t,0,0,3*SIZE_MAX,2*SIZE_MAX),r.setRenderTarget(t),r.render(i,_flatCamera)},_applyPMREM:function(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let t=1;t<TOTAL_LODS;t++){const r=Math.sqrt(_sigmas[t]*_sigmas[t]-_sigmas[t-1]*_sigmas[t-1]),n=_axisDirections[(t-1)%_axisDirections.length];this._blur(e,t-1,t,r,n)}t.autoClear=r},_blur:function(e,t,r,n,i){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,r,n,"latitudinal",i),this._halfBlur(o,e,r,r,n,"longitudinal",i)},_halfBlur:function(e,t,r,n,i,o,a){const s=this._renderer,l=this._blurMaterial;"latitudinal"!==o&&"longitudinal"!==o&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Mesh(_lodPlanes[n],l),u=l.uniforms,d=_sizeLods[r]-1,h=isFinite(i)?Math.PI/(2*d):2*Math.PI/(2*MAX_SAMPLES-1),p=i/h,m=isFinite(i)?1+Math.floor(3*p):MAX_SAMPLES;m>MAX_SAMPLES&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${MAX_SAMPLES}`);const f=[];let g=0;for(let e=0;e<MAX_SAMPLES;++e){const t=e/p,r=Math.exp(-t*t/2);f.push(r),0==e?g+=r:e<m&&(g+=2*r)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;u.envMap.value=e.texture,u.samples.value=m,u.weights.value=f,u.latitudinal.value="latitudinal"===o,a&&(u.poleAxis.value=a),u.dTheta.value=h,u.mipInt.value=LOD_MAX-r,u.inputEncoding.value=ENCODINGS[e.texture.encoding],u.outputEncoding.value=ENCODINGS[e.texture.encoding];const _=_sizeLods[n];_setViewport(t,3*Math.max(0,SIZE_MAX-2*_),(0===n?0:2*SIZE_MAX)+2*_*(n>LOD_MAX-LOD_MIN?n-LOD_MAX+LOD_MIN:0),3*_,2*_),s.setRenderTarget(t),s.render(c,_flatCamera)}};const LineStrip=0,LinePieces=1,NoColors=0,FaceColors=1,VertexColors=2;function MeshFaceMaterial(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function MultiMaterial(e){return void 0===e&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function PointCloud(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Points(e,t)}function Particle(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Sprite(e)}function ParticleSystem(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Points(e,t)}function PointCloudMaterial(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleBasicMaterial(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleSystemMaterial(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function Vertex(e,t,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Vector3(e,t,r)}function DynamicBufferAttribute(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new BufferAttribute(e,t).setUsage(DynamicDrawUsage)}function Int8Attribute(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Int8BufferAttribute(e,t)}function Uint8Attribute(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Uint8BufferAttribute(e,t)}function Uint8ClampedAttribute(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Uint8ClampedBufferAttribute(e,t)}function Int16Attribute(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Int16BufferAttribute(e,t)}function Uint16Attribute(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Uint16BufferAttribute(e,t)}function Int32Attribute(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Int32BufferAttribute(e,t)}function Uint32Attribute(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Uint32BufferAttribute(e,t)}function Float32Attribute(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Float32BufferAttribute(e,t)}function Float64Attribute(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Float64BufferAttribute(e,t)}function ClosedSplineCurve3(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0}function SplineCurve3(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}function Spline(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}function AxisHelper(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new AxesHelper(e)}function BoundingBoxHelper(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new BoxHelper(e,t)}function EdgesHelper(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new LineSegments(new EdgesGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function WireframeHelper(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new LineSegments(new WireframeGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function XHRLoader(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new FileLoader(e)}function BinaryTextureLoader(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new DataTextureLoader(e)}function WebGLRenderTargetCube(e,t,r){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new WebGLCubeRenderTarget(e,r)}Curve.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(CurvePath.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Geometry;for(let r=0,n=e.length;r<n;r++){const n=e[r];t.vertices.push(new Vector3(n.x,n.y,n.z||0))}return t}}),Object.assign(Path.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype),SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype),Spline.prototype=Object.create(CatmullRomCurve3.prototype),Object.assign(Spline.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},SkeletonHelper.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Loader.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),LoaderUtils.extractUrlBase(e)}}),Loader.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(ObjectLoader.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Box2.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Box3.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Sphere.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Frustum.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Line3.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(MathUtils,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),MathUtils.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),MathUtils.ceilPowerOfTwo(e)}}),Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Matrix4.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Vector3).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,r,n,i,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,r,i,o)}}),Plane.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Quaternion.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(Ray.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Triangle.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(Triangle,{barycoordFromPoint:function(e,t,r,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Triangle.getBarycoord(e,t,r,n,i)},normal:function(e,t,r,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Triangle.getNormal(e,t,r,n)}}),Object.assign(Shape.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ExtrudeGeometry(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ShapeGeometry(this,e)}}),Object.assign(Vector2.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector4.prototype,{fromAttribute:function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Geometry.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Object3D.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Mesh.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),TrianglesDrawMode},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Skeleton.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Curve.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===DynamicDrawUsage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(DynamicDrawUsage)}}}),Object.assign(BufferAttribute.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?DynamicDrawUsage:StaticDrawUsage),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(BufferGeometry.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new BufferAttribute(arguments[1],arguments[2])))},addDrawCall:function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(InstancedBufferGeometry.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===DynamicDrawUsage},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(InterleavedBuffer.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?DynamicDrawUsage:StaticDrawUsage),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Color}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===FlatShading}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(WebGLRenderer.prototype,{clearTarget:function(e,t,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,n)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?sRGBEncoding:LinearEncoding}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(Audio.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new AudioLoader).load(e,(function(e){t.setBuffer(e)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),AudioAnalyser.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},CubeCamera.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};const GeometryUtils={merge:function(e,t,r){let n;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),n=t.matrix,t=t.geometry),e.merge(t,n,r)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};function CanvasRenderer(){console.error("THREE.CanvasRenderer has been removed")}function JSONLoader(){console.error("THREE.JSONLoader has been removed.")}ImageUtils.crossOrigin=void 0,ImageUtils.loadTexture=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new TextureLoader;i.setCrossOrigin(this.crossOrigin);const o=i.load(e,r,void 0,n);return t&&(o.mapping=t),o},ImageUtils.loadTextureCube=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new CubeTextureLoader;i.setCrossOrigin(this.crossOrigin);const o=i.load(e,r,void 0,n);return t&&(o.mapping=t),o},ImageUtils.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function LensFlare(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION}})),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;if(e){e.register(REVISION,"REVISION","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MOUSE,"MOUSE","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TOUCH,"TOUCH","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CullFaceNone,"CullFaceNone","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CullFaceBack,"CullFaceBack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CullFaceFront,"CullFaceFront","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CullFaceFrontBack,"CullFaceFrontBack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FrontFaceDirectionCW,"FrontFaceDirectionCW","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FrontFaceDirectionCCW,"FrontFaceDirectionCCW","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BasicShadowMap,"BasicShadowMap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PCFShadowMap,"PCFShadowMap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PCFSoftShadowMap,"PCFSoftShadowMap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(VSMShadowMap,"VSMShadowMap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FrontSide,"FrontSide","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BackSide,"BackSide","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DoubleSide,"DoubleSide","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FlatShading,"FlatShading","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SmoothShading,"SmoothShading","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NoBlending,"NoBlending","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NormalBlending,"NormalBlending","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AdditiveBlending,"AdditiveBlending","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SubtractiveBlending,"SubtractiveBlending","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MultiplyBlending,"MultiplyBlending","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CustomBlending,"CustomBlending","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AddEquation,"AddEquation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SubtractEquation,"SubtractEquation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ReverseSubtractEquation,"ReverseSubtractEquation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MinEquation,"MinEquation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MaxEquation,"MaxEquation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ZeroFactor,"ZeroFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OneFactor,"OneFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SrcColorFactor,"SrcColorFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OneMinusSrcColorFactor,"OneMinusSrcColorFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SrcAlphaFactor,"SrcAlphaFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OneMinusSrcAlphaFactor,"OneMinusSrcAlphaFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DstAlphaFactor,"DstAlphaFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OneMinusDstAlphaFactor,"OneMinusDstAlphaFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DstColorFactor,"DstColorFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OneMinusDstColorFactor,"OneMinusDstColorFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SrcAlphaSaturateFactor,"SrcAlphaSaturateFactor","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NeverDepth,"NeverDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AlwaysDepth,"AlwaysDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LessDepth,"LessDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LessEqualDepth,"LessEqualDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EqualDepth,"EqualDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(GreaterEqualDepth,"GreaterEqualDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(GreaterDepth,"GreaterDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NotEqualDepth,"NotEqualDepth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MultiplyOperation,"MultiplyOperation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MixOperation,"MixOperation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AddOperation,"AddOperation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NoToneMapping,"NoToneMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearToneMapping,"LinearToneMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ReinhardToneMapping,"ReinhardToneMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CineonToneMapping,"CineonToneMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ACESFilmicToneMapping,"ACESFilmicToneMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CustomToneMapping,"CustomToneMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UVMapping,"UVMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubeReflectionMapping,"CubeReflectionMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubeRefractionMapping,"CubeRefractionMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EquirectangularReflectionMapping,"EquirectangularReflectionMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EquirectangularRefractionMapping,"EquirectangularRefractionMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubeUVReflectionMapping,"CubeUVReflectionMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubeUVRefractionMapping,"CubeUVRefractionMapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RepeatWrapping,"RepeatWrapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ClampToEdgeWrapping,"ClampToEdgeWrapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MirroredRepeatWrapping,"MirroredRepeatWrapping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NearestFilter,"NearestFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NearestMipmapNearestFilter,"NearestMipmapNearestFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NearestMipMapNearestFilter,"NearestMipMapNearestFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NearestMipmapLinearFilter,"NearestMipmapLinearFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NearestMipMapLinearFilter,"NearestMipMapLinearFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearFilter,"LinearFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearMipmapNearestFilter,"LinearMipmapNearestFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearMipMapNearestFilter,"LinearMipMapNearestFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearMipmapLinearFilter,"LinearMipmapLinearFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearMipMapLinearFilter,"LinearMipMapLinearFilter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UnsignedByteType,"UnsignedByteType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ByteType,"ByteType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShortType,"ShortType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UnsignedShortType,"UnsignedShortType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(IntType,"IntType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UnsignedIntType,"UnsignedIntType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FloatType,"FloatType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(HalfFloatType,"HalfFloatType","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UnsignedShort4444Type,"UnsignedShort4444Type","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UnsignedShort5551Type,"UnsignedShort5551Type","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UnsignedShort565Type,"UnsignedShort565Type","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UnsignedInt248Type,"UnsignedInt248Type","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AlphaFormat,"AlphaFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBFormat,"RGBFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBAFormat,"RGBAFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LuminanceFormat,"LuminanceFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LuminanceAlphaFormat,"LuminanceAlphaFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBEFormat,"RGBEFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DepthFormat,"DepthFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DepthStencilFormat,"DepthStencilFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RedFormat,"RedFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RedIntegerFormat,"RedIntegerFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGFormat,"RGFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGIntegerFormat,"RGIntegerFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBIntegerFormat,"RGBIntegerFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBAIntegerFormat,"RGBAIntegerFormat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGB_S3TC_DXT1_Format,"RGB_S3TC_DXT1_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_S3TC_DXT1_Format,"RGBA_S3TC_DXT1_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_S3TC_DXT3_Format,"RGBA_S3TC_DXT3_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_S3TC_DXT5_Format,"RGBA_S3TC_DXT5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGB_PVRTC_4BPPV1_Format,"RGB_PVRTC_4BPPV1_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGB_PVRTC_2BPPV1_Format,"RGB_PVRTC_2BPPV1_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_PVRTC_4BPPV1_Format,"RGBA_PVRTC_4BPPV1_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_PVRTC_2BPPV1_Format,"RGBA_PVRTC_2BPPV1_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGB_ETC1_Format,"RGB_ETC1_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGB_ETC2_Format,"RGB_ETC2_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ETC2_EAC_Format,"RGBA_ETC2_EAC_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_4x4_Format,"RGBA_ASTC_4x4_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_5x4_Format,"RGBA_ASTC_5x4_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_5x5_Format,"RGBA_ASTC_5x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_6x5_Format,"RGBA_ASTC_6x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_6x6_Format,"RGBA_ASTC_6x6_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_8x5_Format,"RGBA_ASTC_8x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_8x6_Format,"RGBA_ASTC_8x6_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_8x8_Format,"RGBA_ASTC_8x8_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_10x5_Format,"RGBA_ASTC_10x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_10x6_Format,"RGBA_ASTC_10x6_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_10x8_Format,"RGBA_ASTC_10x8_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_10x10_Format,"RGBA_ASTC_10x10_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_12x10_Format,"RGBA_ASTC_12x10_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_ASTC_12x12_Format,"RGBA_ASTC_12x12_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBA_BPTC_Format,"RGBA_BPTC_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_4x4_Format,"SRGB8_ALPHA8_ASTC_4x4_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_5x4_Format,"SRGB8_ALPHA8_ASTC_5x4_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_5x5_Format,"SRGB8_ALPHA8_ASTC_5x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_6x5_Format,"SRGB8_ALPHA8_ASTC_6x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_6x6_Format,"SRGB8_ALPHA8_ASTC_6x6_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_8x5_Format,"SRGB8_ALPHA8_ASTC_8x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_8x6_Format,"SRGB8_ALPHA8_ASTC_8x6_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_8x8_Format,"SRGB8_ALPHA8_ASTC_8x8_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_10x5_Format,"SRGB8_ALPHA8_ASTC_10x5_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_10x6_Format,"SRGB8_ALPHA8_ASTC_10x6_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_10x8_Format,"SRGB8_ALPHA8_ASTC_10x8_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_10x10_Format,"SRGB8_ALPHA8_ASTC_10x10_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_12x10_Format,"SRGB8_ALPHA8_ASTC_12x10_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGB8_ALPHA8_ASTC_12x12_Format,"SRGB8_ALPHA8_ASTC_12x12_Format","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LoopOnce,"LoopOnce","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LoopRepeat,"LoopRepeat","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LoopPingPong,"LoopPingPong","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InterpolateDiscrete,"InterpolateDiscrete","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InterpolateLinear,"InterpolateLinear","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InterpolateSmooth,"InterpolateSmooth","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ZeroCurvatureEnding,"ZeroCurvatureEnding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ZeroSlopeEnding,"ZeroSlopeEnding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WrapAroundEnding,"WrapAroundEnding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NormalAnimationBlendMode,"NormalAnimationBlendMode","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AdditiveAnimationBlendMode,"AdditiveAnimationBlendMode","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TrianglesDrawMode,"TrianglesDrawMode","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TriangleStripDrawMode,"TriangleStripDrawMode","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TriangleFanDrawMode,"TriangleFanDrawMode","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearEncoding,"LinearEncoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(sRGBEncoding,"sRGBEncoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(GammaEncoding,"GammaEncoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBEEncoding,"RGBEEncoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LogLuvEncoding,"LogLuvEncoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBM7Encoding,"RGBM7Encoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBM16Encoding,"RGBM16Encoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBDEncoding,"RGBDEncoding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BasicDepthPacking,"BasicDepthPacking","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RGBADepthPacking,"RGBADepthPacking","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TangentSpaceNormalMap,"TangentSpaceNormalMap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ObjectSpaceNormalMap,"ObjectSpaceNormalMap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ZeroStencilOp,"ZeroStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(KeepStencilOp,"KeepStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ReplaceStencilOp,"ReplaceStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(IncrementStencilOp,"IncrementStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DecrementStencilOp,"DecrementStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(IncrementWrapStencilOp,"IncrementWrapStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DecrementWrapStencilOp,"DecrementWrapStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InvertStencilOp,"InvertStencilOp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NeverStencilFunc,"NeverStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LessStencilFunc,"LessStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EqualStencilFunc,"EqualStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LessEqualStencilFunc,"LessEqualStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(GreaterStencilFunc,"GreaterStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NotEqualStencilFunc,"NotEqualStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(GreaterEqualStencilFunc,"GreaterEqualStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AlwaysStencilFunc,"AlwaysStencilFunc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StaticDrawUsage,"StaticDrawUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DynamicDrawUsage,"DynamicDrawUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StreamDrawUsage,"StreamDrawUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StaticReadUsage,"StaticReadUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DynamicReadUsage,"DynamicReadUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StreamReadUsage,"StreamReadUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StaticCopyUsage,"StaticCopyUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DynamicCopyUsage,"DynamicCopyUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StreamCopyUsage,"StreamCopyUsage","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EventDispatcher,"EventDispatcher","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_lut,"_lut","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MathUtils,"MathUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Vector2,"Vector2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Matrix3,"Matrix3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_canvas,"_canvas","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ImageUtils,"ImageUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(textureId,"textureId","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Texture,"Texture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Vector4,"Vector4","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLRenderTarget,"WebGLRenderTarget","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLMultisampleRenderTarget,"WebGLMultisampleRenderTarget","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Quaternion,"Quaternion","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector,"_vector","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_quaternion,"_quaternion","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Vector3,"Vector3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v1,"_v1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_m1,"_m1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_zero,"_zero","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_one,"_one","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_x,"_x","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_y,"_y","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_z,"_z","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Matrix4,"Matrix4","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_matrix,"_matrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_quaternion$1,"_quaternion$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Euler,"Euler","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Layers,"Layers","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_object3DId,"_object3DId","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v1$1,"_v1$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_q1,"_q1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_m1$1,"_m1$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_target,"_target","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_position,"_position","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_scale,"_scale","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_quaternion$2,"_quaternion$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_xAxis,"_xAxis","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_yAxis,"_yAxis","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_zAxis,"_zAxis","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_addedEvent,"_addedEvent","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_removedEvent,"_removedEvent","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Object3D,"Object3D","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Scene,"Scene","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_points,"_points","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$1,"_vector$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_box,"_box","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v0,"_v0","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v1$2,"_v1$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v2,"_v2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_f0,"_f0","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_f1,"_f1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_f2,"_f2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_center,"_center","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_extents,"_extents","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_triangleNormal,"_triangleNormal","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_testAxis,"_testAxis","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Box3,"Box3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(satForAxes,"satForAxes","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_box$1,"_box$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Sphere,"Sphere","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$2,"_vector$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_segCenter,"_segCenter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_segDir,"_segDir","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_diff,"_diff","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_edge1,"_edge1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_edge2,"_edge2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_normal,"_normal","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Ray,"Ray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector1,"_vector1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector2,"_vector2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_normalMatrix,"_normalMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Plane,"Plane","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v0$1,"_v0$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v1$3,"_v1$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v2$1,"_v2$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v3,"_v3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vab,"_vab","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vac,"_vac","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vbc,"_vbc","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vap,"_vap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vbp,"_vbp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vcp,"_vcp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Triangle,"Triangle","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_colorKeywords,"_colorKeywords","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_hslA,"_hslA","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_hslB,"_hslB","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Color,"Color","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(hue2rgb,"hue2rgb","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SRGBToLinear,"SRGBToLinear","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearToSRGB,"LinearToSRGB","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Face3,"Face3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(materialId,"materialId","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Material,"Material","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshBasicMaterial,"MeshBasicMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$3,"_vector$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector2$1,"_vector2$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BufferAttribute,"BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Int8BufferAttribute,"Int8BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint8BufferAttribute,"Uint8BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint8ClampedBufferAttribute,"Uint8ClampedBufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Int16BufferAttribute,"Int16BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint16BufferAttribute,"Uint16BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Int32BufferAttribute,"Int32BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint32BufferAttribute,"Uint32BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Float32BufferAttribute,"Float32BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Float64BufferAttribute,"Float64BufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DirectGeometry,"DirectGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(arrayMax,"arrayMax","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_bufferGeometryId,"_bufferGeometryId","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_m1$2,"_m1$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_obj,"_obj","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_offset,"_offset","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_box$2,"_box$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_boxMorphTargets,"_boxMorphTargets","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$4,"_vector$4","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BufferGeometry,"BufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_inverseMatrix,"_inverseMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_ray,"_ray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_sphere,"_sphere","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vA,"_vA","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vB,"_vB","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vC,"_vC","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_tempA,"_tempA","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_tempB,"_tempB","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_tempC,"_tempC","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_morphA,"_morphA","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_morphB,"_morphB","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_morphC,"_morphC","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_uvA,"_uvA","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_uvB,"_uvB","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_uvC,"_uvC","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_intersectionPoint,"_intersectionPoint","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_intersectionPointWorld,"_intersectionPointWorld","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Mesh,"Mesh","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(checkIntersection,"checkIntersection","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(checkBufferGeometryIntersection,"checkBufferGeometryIntersection","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_geometryId,"_geometryId","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_m1$3,"_m1$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_obj$1,"_obj$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_offset$1,"_offset$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Geometry,"Geometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BoxGeometry,"BoxGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BoxBufferGeometry,"BoxBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(cloneUniforms,"cloneUniforms","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(mergeUniforms,"mergeUniforms","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UniformsUtils,"UniformsUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(default_vertex,"default_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(default_fragment,"default_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShaderMaterial,"ShaderMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Camera,"Camera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PerspectiveCamera,"PerspectiveCamera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(fov,"fov","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(aspect,"aspect","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubeCamera,"CubeCamera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLCubeRenderTarget,"WebGLCubeRenderTarget","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DataTexture,"DataTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_sphere$1,"_sphere$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$5,"_vector$5","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Frustum,"Frustum","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UniformsLib,"UniformsLib","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLAnimation,"WebGLAnimation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLAttributes,"WebGLAttributes","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PlaneGeometry,"PlaneGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PlaneBufferGeometry,"PlaneBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(alphamap_fragment,"alphamap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(alphamap_pars_fragment,"alphamap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(alphatest_fragment,"alphatest_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(aomap_fragment,"aomap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(aomap_pars_fragment,"aomap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(begin_vertex,"begin_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(beginnormal_vertex,"beginnormal_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(bsdfs,"bsdfs","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(bumpmap_pars_fragment,"bumpmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(clipping_planes_fragment,"clipping_planes_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(clipping_planes_pars_fragment,"clipping_planes_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(clipping_planes_pars_vertex,"clipping_planes_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(clipping_planes_vertex,"clipping_planes_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(color_fragment,"color_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(color_pars_fragment,"color_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(color_pars_vertex,"color_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(color_vertex,"color_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(common,"common","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(cube_uv_reflection_fragment,"cube_uv_reflection_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(defaultnormal_vertex,"defaultnormal_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(displacementmap_pars_vertex,"displacementmap_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(displacementmap_vertex,"displacementmap_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(emissivemap_fragment,"emissivemap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(emissivemap_pars_fragment,"emissivemap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(encodings_fragment,"encodings_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(encodings_pars_fragment,"encodings_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(envmap_fragment,"envmap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(envmap_common_pars_fragment,"envmap_common_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(envmap_pars_fragment,"envmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(envmap_pars_vertex,"envmap_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(envmap_vertex,"envmap_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(fog_vertex,"fog_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(fog_pars_vertex,"fog_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(fog_fragment,"fog_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(fog_pars_fragment,"fog_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(gradientmap_pars_fragment,"gradientmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lightmap_fragment,"lightmap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lightmap_pars_fragment,"lightmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_lambert_vertex,"lights_lambert_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_pars_begin,"lights_pars_begin","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(envmap_physical_pars_fragment,"envmap_physical_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_toon_fragment,"lights_toon_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_toon_pars_fragment,"lights_toon_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_phong_fragment,"lights_phong_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_phong_pars_fragment,"lights_phong_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_physical_fragment,"lights_physical_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_physical_pars_fragment,"lights_physical_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_fragment_begin,"lights_fragment_begin","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_fragment_maps,"lights_fragment_maps","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(lights_fragment_end,"lights_fragment_end","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(logdepthbuf_fragment,"logdepthbuf_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(logdepthbuf_pars_fragment,"logdepthbuf_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(logdepthbuf_pars_vertex,"logdepthbuf_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(logdepthbuf_vertex,"logdepthbuf_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(map_fragment,"map_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(map_pars_fragment,"map_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(map_particle_fragment,"map_particle_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(map_particle_pars_fragment,"map_particle_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(metalnessmap_fragment,"metalnessmap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(metalnessmap_pars_fragment,"metalnessmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(morphnormal_vertex,"morphnormal_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(morphtarget_pars_vertex,"morphtarget_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(morphtarget_vertex,"morphtarget_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(normal_fragment_begin,"normal_fragment_begin","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(normal_fragment_maps,"normal_fragment_maps","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(normalmap_pars_fragment,"normalmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(clearcoat_normal_fragment_begin,"clearcoat_normal_fragment_begin","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(clearcoat_normal_fragment_maps,"clearcoat_normal_fragment_maps","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(clearcoat_pars_fragment,"clearcoat_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(packing,"packing","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(premultiplied_alpha_fragment,"premultiplied_alpha_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(project_vertex,"project_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(dithering_fragment,"dithering_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(dithering_pars_fragment,"dithering_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(roughnessmap_fragment,"roughnessmap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(roughnessmap_pars_fragment,"roughnessmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(shadowmap_pars_fragment,"shadowmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(shadowmap_pars_vertex,"shadowmap_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(shadowmap_vertex,"shadowmap_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(shadowmask_pars_fragment,"shadowmask_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(skinbase_vertex,"skinbase_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(skinning_pars_vertex,"skinning_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(skinning_vertex,"skinning_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(skinnormal_vertex,"skinnormal_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(specularmap_fragment,"specularmap_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(specularmap_pars_fragment,"specularmap_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(tonemapping_fragment,"tonemapping_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(tonemapping_pars_fragment,"tonemapping_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(uv_pars_fragment,"uv_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(uv_pars_vertex,"uv_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(uv_vertex,"uv_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(uv2_pars_fragment,"uv2_pars_fragment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(uv2_pars_vertex,"uv2_pars_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(uv2_vertex,"uv2_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(worldpos_vertex,"worldpos_vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(background_frag,"background_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(background_vert,"background_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(cube_frag,"cube_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(cube_vert,"cube_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(depth_frag,"depth_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(depth_vert,"depth_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(distanceRGBA_frag,"distanceRGBA_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(distanceRGBA_vert,"distanceRGBA_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(equirect_frag,"equirect_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(equirect_vert,"equirect_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(linedashed_frag,"linedashed_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(linedashed_vert,"linedashed_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshbasic_frag,"meshbasic_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshbasic_vert,"meshbasic_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshlambert_frag,"meshlambert_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshlambert_vert,"meshlambert_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshmatcap_frag,"meshmatcap_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshmatcap_vert,"meshmatcap_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshtoon_frag,"meshtoon_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshtoon_vert,"meshtoon_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshphong_frag,"meshphong_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshphong_vert,"meshphong_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshphysical_frag,"meshphysical_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(meshphysical_vert,"meshphysical_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(normal_frag,"normal_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(normal_vert,"normal_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(points_frag,"points_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(points_vert,"points_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(shadow_frag,"shadow_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(shadow_vert,"shadow_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(sprite_frag,"sprite_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(sprite_vert,"sprite_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShaderChunk,"ShaderChunk","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShaderLib,"ShaderLib","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLBackground,"WebGLBackground","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLBindingStates,"WebGLBindingStates","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLBufferRenderer,"WebGLBufferRenderer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLCapabilities,"WebGLCapabilities","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLClipping,"WebGLClipping","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLExtensions,"WebGLExtensions","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLGeometries,"WebGLGeometries","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLIndexedBufferRenderer,"WebGLIndexedBufferRenderer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLInfo,"WebGLInfo","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(numericalSort,"numericalSort","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(absNumericalSort,"absNumericalSort","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLMorphtargets,"WebGLMorphtargets","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLObjects,"WebGLObjects","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubeTexture,"CubeTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DataTexture2DArray,"DataTexture2DArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DataTexture3D,"DataTexture3D","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(emptyTexture,"emptyTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(emptyTexture2dArray,"emptyTexture2dArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(emptyTexture3d,"emptyTexture3d","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(emptyCubeTexture,"emptyCubeTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(arrayCacheF32,"arrayCacheF32","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(arrayCacheI32,"arrayCacheI32","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(mat4array,"mat4array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(mat3array,"mat3array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(mat2array,"mat2array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(flatten,"flatten","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(arraysEqual,"arraysEqual","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(copyArray,"copyArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(allocTexUnits,"allocTexUnits","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV1f,"setValueV1f","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV2f,"setValueV2f","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV3f,"setValueV3f","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV4f,"setValueV4f","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueM2,"setValueM2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueM3,"setValueM3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueM4,"setValueM4","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueT1,"setValueT1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueT2DArray1,"setValueT2DArray1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueT3D1,"setValueT3D1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueT6,"setValueT6","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV1i,"setValueV1i","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV2i,"setValueV2i","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV3i,"setValueV3i","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV4i,"setValueV4i","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV1ui,"setValueV1ui","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getSingularSetter,"getSingularSetter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV1fArray,"setValueV1fArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV1iArray,"setValueV1iArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV2iArray,"setValueV2iArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV3iArray,"setValueV3iArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV4iArray,"setValueV4iArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV2fArray,"setValueV2fArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV3fArray,"setValueV3fArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueV4fArray,"setValueV4fArray","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueM2Array,"setValueM2Array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueM3Array,"setValueM3Array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueM4Array,"setValueM4Array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueT1Array,"setValueT1Array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setValueT6Array,"setValueT6Array","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getPureArraySetter,"getPureArraySetter","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SingleUniform,"SingleUniform","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PureArrayUniform,"PureArrayUniform","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StructuredUniform,"StructuredUniform","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RePathPart,"RePathPart","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(addUniform,"addUniform","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(parseUniform,"parseUniform","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLUniforms,"WebGLUniforms","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLShader,"WebGLShader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(programIdCount,"programIdCount","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(addLineNumbers,"addLineNumbers","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getEncodingComponents,"getEncodingComponents","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getShaderErrors,"getShaderErrors","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getTexelDecodingFunction,"getTexelDecodingFunction","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getTexelEncodingFunction,"getTexelEncodingFunction","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getToneMappingFunction,"getToneMappingFunction","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(generateExtensions,"generateExtensions","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(generateDefines,"generateDefines","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(fetchAttributeLocations,"fetchAttributeLocations","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(filterEmptyLine,"filterEmptyLine","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(replaceLightNums,"replaceLightNums","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(replaceClippingPlaneNums,"replaceClippingPlaneNums","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(includePattern,"includePattern","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(resolveIncludes,"resolveIncludes","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(includeReplacer,"includeReplacer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(deprecatedUnrollLoopPattern,"deprecatedUnrollLoopPattern","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(unrollLoopPattern,"unrollLoopPattern","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(unrollLoops,"unrollLoops","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(deprecatedLoopReplacer,"deprecatedLoopReplacer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(loopReplacer,"loopReplacer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(generatePrecision,"generatePrecision","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(generateShadowMapTypeDefine,"generateShadowMapTypeDefine","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(generateEnvMapTypeDefine,"generateEnvMapTypeDefine","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(generateEnvMapModeDefine,"generateEnvMapModeDefine","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(generateEnvMapBlendingDefine,"generateEnvMapBlendingDefine","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLProgram,"WebGLProgram","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLPrograms,"WebGLPrograms","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLProperties,"WebGLProperties","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(painterSortStable,"painterSortStable","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(reversePainterSortStable,"reversePainterSortStable","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLRenderList,"WebGLRenderList","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLRenderLists,"WebGLRenderLists","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(UniformsCache,"UniformsCache","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShadowUniformsCache,"ShadowUniformsCache","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(nextVersion,"nextVersion","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(shadowCastingLightsFirst,"shadowCastingLightsFirst","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLLights,"WebGLLights","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLRenderState,"WebGLRenderState","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLRenderStates,"WebGLRenderStates","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshDepthMaterial,"MeshDepthMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshDistanceMaterial,"MeshDistanceMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(vsm_frag,"vsm_frag","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(vsm_vert,"vsm_vert","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLShadowMap,"WebGLShadowMap","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLState,"WebGLState","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLTextures,"WebGLTextures","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLUtils,"WebGLUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ArrayCamera,"ArrayCamera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Group,"Group","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebXRController,"WebXRController","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebXRManager,"WebXRManager","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLMaterials,"WebGLMaterials","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLRenderer,"WebGLRenderer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGL1Renderer,"WebGL1Renderer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FogExp2,"FogExp2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Fog,"Fog","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InterleavedBuffer,"InterleavedBuffer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$6,"_vector$6","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InterleavedBufferAttribute,"InterleavedBufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SpriteMaterial,"SpriteMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_geometry,"_geometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_intersectPoint,"_intersectPoint","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_worldScale,"_worldScale","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_mvPosition,"_mvPosition","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_alignedPosition,"_alignedPosition","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_rotatedPosition,"_rotatedPosition","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_viewWorldMatrix,"_viewWorldMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vA$1,"_vA$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vB$1,"_vB$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vC$1,"_vC$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_uvA$1,"_uvA$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_uvB$1,"_uvB$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_uvC$1,"_uvC$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Sprite,"Sprite","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(transformVertex,"transformVertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v1$4,"_v1$4","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v2$2,"_v2$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LOD,"LOD","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SkinnedMesh,"SkinnedMesh","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_offsetMatrix,"_offsetMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_identityMatrix,"_identityMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Skeleton,"Skeleton","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Bone,"Bone","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_instanceLocalMatrix,"_instanceLocalMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_instanceWorldMatrix,"_instanceWorldMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_instanceIntersects,"_instanceIntersects","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_mesh,"_mesh","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InstancedMesh,"InstancedMesh","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LineBasicMaterial,"LineBasicMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_start,"_start","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_end,"_end","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_inverseMatrix$1,"_inverseMatrix$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_ray$1,"_ray$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_sphere$2,"_sphere$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Line,"Line","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_start$1,"_start$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_end$1,"_end$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LineSegments,"LineSegments","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LineLoop,"LineLoop","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PointsMaterial,"PointsMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_inverseMatrix$2,"_inverseMatrix$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_ray$2,"_ray$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_sphere$3,"_sphere$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_position$1,"_position$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Points,"Points","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(testPoint,"testPoint","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(VideoTexture,"VideoTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CompressedTexture,"CompressedTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CanvasTexture,"CanvasTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DepthTexture,"DepthTexture","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WireframeGeometry,"WireframeGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ParametricGeometry,"ParametricGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ParametricBufferGeometry,"ParametricBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PolyhedronGeometry,"PolyhedronGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PolyhedronBufferGeometry,"PolyhedronBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TetrahedronGeometry,"TetrahedronGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TetrahedronBufferGeometry,"TetrahedronBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OctahedronGeometry,"OctahedronGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OctahedronBufferGeometry,"OctahedronBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(IcosahedronGeometry,"IcosahedronGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(IcosahedronBufferGeometry,"IcosahedronBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DodecahedronGeometry,"DodecahedronGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DodecahedronBufferGeometry,"DodecahedronBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TubeGeometry,"TubeGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TubeBufferGeometry,"TubeBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TorusKnotGeometry,"TorusKnotGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TorusKnotBufferGeometry,"TorusKnotBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TorusGeometry,"TorusGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TorusBufferGeometry,"TorusBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Earcut,"Earcut","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(linkedList,"linkedList","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(filterPoints,"filterPoints","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(earcutLinked,"earcutLinked","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(isEar,"isEar","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(isEarHashed,"isEarHashed","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(cureLocalIntersections,"cureLocalIntersections","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(splitEarcut,"splitEarcut","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(eliminateHoles,"eliminateHoles","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(compareX,"compareX","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(eliminateHole,"eliminateHole","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(findHoleBridge,"findHoleBridge","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(sectorContainsSector,"sectorContainsSector","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(indexCurve,"indexCurve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(sortLinked,"sortLinked","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(zOrder,"zOrder","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getLeftmost,"getLeftmost","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(pointInTriangle,"pointInTriangle","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(isValidDiagonal,"isValidDiagonal","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(area,"area","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(equals,"equals","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(intersects,"intersects","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(onSegment,"onSegment","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(sign,"sign","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(intersectsPolygon,"intersectsPolygon","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(locallyInside,"locallyInside","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(middleInside,"middleInside","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(splitPolygon,"splitPolygon","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(insertNode,"insertNode","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(removeNode,"removeNode","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Node,"Node","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(signedArea,"signedArea","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShapeUtils,"ShapeUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(removeDupEndPts,"removeDupEndPts","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(addContour,"addContour","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ExtrudeGeometry,"ExtrudeGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ExtrudeBufferGeometry,"ExtrudeBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WorldUVGenerator,"WorldUVGenerator","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(toJSON,"toJSON","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TextGeometry,"TextGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TextBufferGeometry,"TextBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SphereGeometry,"SphereGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SphereBufferGeometry,"SphereBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RingGeometry,"RingGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RingBufferGeometry,"RingBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LatheGeometry,"LatheGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LatheBufferGeometry,"LatheBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShapeGeometry,"ShapeGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShapeBufferGeometry,"ShapeBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(toJSON$1,"toJSON$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EdgesGeometry,"EdgesGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CylinderGeometry,"CylinderGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CylinderBufferGeometry,"CylinderBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ConeGeometry,"ConeGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ConeBufferGeometry,"ConeBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CircleGeometry,"CircleGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CircleBufferGeometry,"CircleBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Geometries,"Geometries","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShadowMaterial,"ShadowMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RawShaderMaterial,"RawShaderMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshStandardMaterial,"MeshStandardMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshPhysicalMaterial,"MeshPhysicalMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshPhongMaterial,"MeshPhongMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshToonMaterial,"MeshToonMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshNormalMaterial,"MeshNormalMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshLambertMaterial,"MeshLambertMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshMatcapMaterial,"MeshMatcapMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LineDashedMaterial,"LineDashedMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Materials,"Materials","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AnimationUtils,"AnimationUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Interpolant,"Interpolant","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicInterpolant,"CubicInterpolant","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinearInterpolant,"LinearInterpolant","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DiscreteInterpolant,"DiscreteInterpolant","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(KeyframeTrack,"KeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BooleanKeyframeTrack,"BooleanKeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ColorKeyframeTrack,"ColorKeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NumberKeyframeTrack,"NumberKeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuaternionLinearInterpolant,"QuaternionLinearInterpolant","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuaternionKeyframeTrack,"QuaternionKeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StringKeyframeTrack,"StringKeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(VectorKeyframeTrack,"VectorKeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AnimationClip,"AnimationClip","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getTrackTypeForValueTypeName,"getTrackTypeForValueTypeName","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(parseKeyframeTrack,"parseKeyframeTrack","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Cache,"Cache","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LoadingManager,"LoadingManager","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DefaultLoadingManager,"DefaultLoadingManager","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Loader,"Loader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(loading,"loading","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FileLoader,"FileLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AnimationLoader,"AnimationLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CompressedTextureLoader,"CompressedTextureLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DataTextureLoader,"DataTextureLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ImageLoader,"ImageLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubeTextureLoader,"CubeTextureLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TextureLoader,"TextureLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Curve,"Curve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EllipseCurve,"EllipseCurve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ArcCurve,"ArcCurve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicPoly,"CubicPoly","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(tmp,"tmp","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(px,"px","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(py,"py","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(pz,"pz","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CatmullRomCurve3,"CatmullRomCurve3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CatmullRom,"CatmullRom","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuadraticBezierP0,"QuadraticBezierP0","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuadraticBezierP1,"QuadraticBezierP1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuadraticBezierP2,"QuadraticBezierP2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuadraticBezier,"QuadraticBezier","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicBezierP0,"CubicBezierP0","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicBezierP1,"CubicBezierP1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicBezierP2,"CubicBezierP2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicBezierP3,"CubicBezierP3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js");e.register(CubicBezier,"CubicBezier","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicBezierCurve,"CubicBezierCurve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CubicBezierCurve3,"CubicBezierCurve3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LineCurve,"LineCurve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LineCurve3,"LineCurve3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuadraticBezierCurve,"QuadraticBezierCurve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(QuadraticBezierCurve3,"QuadraticBezierCurve3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SplineCurve,"SplineCurve","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Curves,"Curves","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CurvePath,"CurvePath","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Path,"Path","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Shape,"Shape","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Light,"Light","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(HemisphereLight,"HemisphereLight","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LightShadow,"LightShadow","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SpotLightShadow,"SpotLightShadow","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SpotLight,"SpotLight","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PointLightShadow,"PointLightShadow","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PointLight,"PointLight","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(OrthographicCamera,"OrthographicCamera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DirectionalLightShadow,"DirectionalLightShadow","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DirectionalLight,"DirectionalLight","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AmbientLight,"AmbientLight","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(RectAreaLight,"RectAreaLight","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SphericalHarmonics3,"SphericalHarmonics3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LightProbe,"LightProbe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MaterialLoader,"MaterialLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LoaderUtils,"LoaderUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InstancedBufferGeometry,"InstancedBufferGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InstancedBufferAttribute,"InstancedBufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BufferGeometryLoader,"BufferGeometryLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TYPED_ARRAYS,"TYPED_ARRAYS","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ObjectLoader,"ObjectLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TEXTURE_MAPPING,"TEXTURE_MAPPING","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TEXTURE_WRAPPING,"TEXTURE_WRAPPING","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TEXTURE_FILTER,"TEXTURE_FILTER","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ImageBitmapLoader,"ImageBitmapLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ShapePath,"ShapePath","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Font,"Font","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(createPaths,"createPaths","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(createPath,"createPath","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FontLoader,"FontLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_context,"_context","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AudioContext,"AudioContext","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AudioLoader,"AudioLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(HemisphereLightProbe,"HemisphereLightProbe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AmbientLightProbe,"AmbientLightProbe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_eyeRight,"_eyeRight","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_eyeLeft,"_eyeLeft","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(StereoCamera,"StereoCamera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Clock,"Clock","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_position$2,"_position$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_quaternion$3,"_quaternion$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_scale$1,"_scale$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_orientation,"_orientation","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AudioListener,"AudioListener","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Audio,"Audio","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_position$3,"_position$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_quaternion$4,"_quaternion$4","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_scale$2,"_scale$2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_orientation$1,"_orientation$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PositionalAudio,"PositionalAudio","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AudioAnalyser,"AudioAnalyser","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PropertyMixer,"PropertyMixer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_RESERVED_CHARS_RE,"_RESERVED_CHARS_RE","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_reservedRe,"_reservedRe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_wordChar,"_wordChar","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_wordCharOrDot,"_wordCharOrDot","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_directoryRe,"_directoryRe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_nodeRe,"_nodeRe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_objectRe,"_objectRe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_propertyRe,"_propertyRe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_trackRe,"_trackRe","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_supportedObjectNames,"_supportedObjectNames","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Composite,"Composite","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PropertyBinding,"PropertyBinding","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AnimationObjectGroup,"AnimationObjectGroup","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AnimationAction,"AnimationAction","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AnimationMixer,"AnimationMixer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uniform,"Uniform","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(InstancedInterleavedBuffer,"InstancedInterleavedBuffer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Raycaster,"Raycaster","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ascSort,"ascSort","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(intersectObject,"intersectObject","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Spherical,"Spherical","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Cylindrical,"Cylindrical","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$7,"_vector$7","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Box2,"Box2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_startP,"_startP","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_startEnd,"_startEnd","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Line3,"Line3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ImmediateRenderObject,"ImmediateRenderObject","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$8,"_vector$8","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SpotLightHelper,"SpotLightHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$9,"_vector$9","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_boneMatrix,"_boneMatrix","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_matrixWorldInv,"_matrixWorldInv","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(getBoneList,"getBoneList","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SkeletonHelper,"SkeletonHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PointLightHelper,"PointLightHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$a,"_vector$a","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_color1,"_color1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_color2,"_color2","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(HemisphereLightHelper,"HemisphereLightHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(GridHelper,"GridHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PolarGridHelper,"PolarGridHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v1$5,"_v1$5","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v2$3,"_v2$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_v3$1,"_v3$1","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DirectionalLightHelper,"DirectionalLightHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_vector$b,"_vector$b","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_camera,"_camera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CameraHelper,"CameraHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(setPoint,"setPoint","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_box$3,"_box$3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BoxHelper,"BoxHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Box3Helper,"Box3Helper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PlaneHelper,"PlaneHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_axis,"_axis","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_lineGeometry,"_lineGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_coneGeometry,"_coneGeometry","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ArrowHelper,"ArrowHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AxesHelper,"AxesHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LOD_MIN,"LOD_MIN","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LOD_MAX,"LOD_MAX","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SIZE_MAX,"SIZE_MAX","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EXTRA_LOD_SIGMA,"EXTRA_LOD_SIGMA","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(TOTAL_LODS,"TOTAL_LODS","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MAX_SAMPLES,"MAX_SAMPLES","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ENCODINGS,"ENCODINGS","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_flatCamera,"_flatCamera","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_lodPlanes,"_lodPlanes","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_sizeLods,"_sizeLods","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_sigmas,"_sigmas","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_oldTarget,"_oldTarget","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PHI,"PHI","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(INV_PHI,"INV_PHI","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_axisDirections,"_axisDirections","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PMREMGenerator,"PMREMGenerator","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_isLDR,"_isLDR","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_createPlanes,"_createPlanes","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_createRenderTarget,"_createRenderTarget","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_setViewport,"_setViewport","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_getBlurShader,"_getBlurShader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_getEquirectShader,"_getEquirectShader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_getCubemapShader,"_getCubemapShader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_getCommonVertexShader,"_getCommonVertexShader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(_getEncodings,"_getEncodings","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Face4,"Face4","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LineStrip,"LineStrip","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LinePieces,"LinePieces","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(NoColors,"NoColors","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(FaceColors,"FaceColors","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(VertexColors,"VertexColors","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MeshFaceMaterial,"MeshFaceMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(MultiMaterial,"MultiMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PointCloud,"PointCloud","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Particle,"Particle","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ParticleSystem,"ParticleSystem","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(PointCloudMaterial,"PointCloudMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ParticleBasicMaterial,"ParticleBasicMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ParticleSystemMaterial,"ParticleSystemMaterial","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Vertex,"Vertex","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(DynamicBufferAttribute,"DynamicBufferAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Int8Attribute,"Int8Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint8Attribute,"Uint8Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint8ClampedAttribute,"Uint8ClampedAttribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Int16Attribute,"Int16Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint16Attribute,"Uint16Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Int32Attribute,"Int32Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Uint32Attribute,"Uint32Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Float32Attribute,"Float32Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Float64Attribute,"Float64Attribute","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(ClosedSplineCurve3,"ClosedSplineCurve3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SplineCurve3,"SplineCurve3","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(Spline,"Spline","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(AxisHelper,"AxisHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BoundingBoxHelper,"BoundingBoxHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(EdgesHelper,"EdgesHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WireframeHelper,"WireframeHelper","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(XHRLoader,"XHRLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(BinaryTextureLoader,"BinaryTextureLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(WebGLRenderTargetCube,"WebGLRenderTargetCube","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(GeometryUtils,"GeometryUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(CanvasRenderer,"CanvasRenderer","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(JSONLoader,"JSONLoader","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(SceneUtils,"SceneUtils","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js"),e.register(LensFlare,"LensFlare","D:\\Workspaces\\react\\GeeneeSDK\\node_modules\\three\\build\\three.module.js")}}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$3="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class SensorSample{constructor(e,t){this.set(e,t)}set(e,t){this.sample=e,this.timestampS=t}copy(e){this.set(e.sample,e.timestampS)}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(SensorSample,"SensorSample","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\SensorSample.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$4="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const MIN_TIMESTEP=.001,MAX_TIMESTEP=1,isIOS=function(){return/iPad|iPhone|iPod/.test(navigator.platform)},isAndroid=function(){return-1!==navigator.userAgent.indexOf("Android")},isR7=function(){return-1!==navigator.userAgent.indexOf("R7 Build")},isLandscapeMode=function(){const e=90===window.orientation||-90===window.orientation;return isR7()?!e:e},isTimestampDeltaValid=function(e){return!isNaN(e)&&(!(e<=MIN_TIMESTEP)&&!(e>MAX_TIMESTEP))},isFirefoxAndroid=function(){return-1!==navigator.userAgent.indexOf("Firefox")&&-1!==navigator.userAgent.indexOf("Android")},getChromeVersion=function(){const e=navigator.userAgent.match(/.*Chrome\/([0-9]+)/);return e?parseInt(e[1],10):null},slicedToArray=function(e,t){let r=[],n=!0,i=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{!n&&s.return&&s.return()}finally{if(i)throw o}}return r},isChromeWithoutDeviceMotion=function(){let e=!1;if(65===getChromeVersion()){const t=navigator.userAgent.match(/.*Chrome\/([0-9\.]*)/);if(t){let r=t[1].split("."),n=slicedToArray(r,4),i=n[2],o=n[3];e=3325===parseInt(i,10)&&parseInt(o,10)<148}}return e},getOriginFromUrl=function(e){let t,r=e.indexOf("://");t=-1!==r?r+3:0;let n=e.indexOf("/",t);return-1===n&&(n=e.length),e.substring(0,n)},isInsideCrossOriginIFrame=function(){const e=window.self!==window.top,t=getOriginFromUrl(document.referrer),r=getOriginFromUrl(window.location.href);return e&&t!==r};!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(MIN_TIMESTEP,"MIN_TIMESTEP","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(MAX_TIMESTEP,"MAX_TIMESTEP","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isIOS,"isIOS","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isAndroid,"isAndroid","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isR7,"isR7","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isLandscapeMode,"isLandscapeMode","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isTimestampDeltaValid,"isTimestampDeltaValid","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isFirefoxAndroid,"isFirefoxAndroid","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(getChromeVersion,"getChromeVersion","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(slicedToArray,"slicedToArray","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isChromeWithoutDeviceMotion,"isChromeWithoutDeviceMotion","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(getOriginFromUrl,"getOriginFromUrl","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"),e.register(isInsideCrossOriginIFrame,"isInsideCrossOriginIFrame","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\util.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$5="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class ComplementaryFilter{constructor(e){this.kFilter=e,this.filterQ=new Quaternion(isIOS()?-1:1,0,0,1),this.accelQ=new Quaternion,this.isOrientationInitialized=!1,this.estimatedGravity=new Vector3,this.measuredGravity=new Vector3,this.gyroIntegralQ=new Quaternion,this.previousFilterQ=new Quaternion,this.currentAccelMeasurement=new SensorSample,this.currentGyroMeasurement=new SensorSample,this.previousGyroMeasurement=new SensorSample,this.previousFilterQ.copy(this.filterQ)}getOrientation(){return this.filterQ}addAccelMeasurement(e,t){this.currentAccelMeasurement.set(e,t)}addGyroMeasurement(e,t){this.currentGyroMeasurement.set(e,t);const r=t-this.previousGyroMeasurement.timestampS;isTimestampDeltaValid(r)&&this.run(),this.previousGyroMeasurement.copy(this.currentGyroMeasurement)}run(){if(!this.isOrientationInitialized)return this.accelQ=this.accelToQuaternion(this.currentAccelMeasurement.sample),this.previousFilterQ.copy(this.accelQ),void(this.isOrientationInitialized=!0);const e=this.currentGyroMeasurement.timestampS-this.previousGyroMeasurement.timestampS,t=this.gyroToQuaternionDelta(this.currentGyroMeasurement.sample,e);this.gyroIntegralQ.multiply(t),this.filterQ.copy(this.previousFilterQ),this.filterQ.multiply(t);const r=new Quaternion;r.copy(this.filterQ),r.inverse(),this.estimatedGravity.set(0,0,-1),this.estimatedGravity.applyQuaternion(r),this.estimatedGravity.normalize(),this.measuredGravity.copy(this.currentAccelMeasurement.sample),this.measuredGravity.normalize();const n=new Quaternion;n.setFromUnitVectors(this.estimatedGravity,this.measuredGravity),n.inverse();const i=new Quaternion;i.copy(this.filterQ),i.multiply(n),this.filterQ.slerp(i,1-this.kFilter),this.previousFilterQ.copy(this.filterQ)}accelToQuaternion(e){const t=new Vector3;t.copy(e),t.normalize();const r=new Quaternion;return r.setFromUnitVectors(new Vector3(0,0,-1),t),r.inverse(),r}gyroToQuaternionDelta(e,t){const r=new Quaternion,n=new Vector3;return n.copy(e),n.normalize(),r.setFromAxisAngle(n,e.length()*t),r}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(ComplementaryFilter,"ComplementaryFilter","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\ComplementaryFilter.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$6="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class PosePredictor{constructor(e){this.predictionTimeS=e,this.previousQ=new Quaternion,this.deltaQ=new Quaternion,this.outQ=new Quaternion,this.previousTimestampS=null}getPrediction(e,t,r){if(null===this.previousTimestampS)return this.previousQ.copy(e),this.previousTimestampS=r,e;const n=new Vector3;n.copy(t),n.normalize();const i=t.length();if(i<20*Math.PI/180)return this.outQ.copy(e),this.previousQ.copy(e),this.outQ;this.previousTimestampS;const o=i*this.predictionTimeS;return this.deltaQ.setFromAxisAngle(n,o),this.outQ.copy(this.previousQ),this.outQ.multiply(this.deltaQ),this.previousQ.copy(e),this.previousTimestampS=r,this.outQ}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(PosePredictor,"PosePredictor","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\PosePredictor.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$7="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const DEFAULT_SETTINGS={isFirefoxAndroid:isFirefoxAndroid(),isIOS:isIOS(),chromeVersion:getChromeVersion(),isWithoutDeviceMotion:isChromeWithoutDeviceMotion(),isInsideCrossOriginIFrame:isInsideCrossOriginIFrame(),isR7:isR7()};class FusionPoseSensor{constructor(e,t,r,n){var i=this;_default(this,"onOrientationChange",(function(e){i.setScreenTransform()})),_default(this,"onDeviceOrientation",(function(e){i._deviceOrientationQ=i._deviceOrientationQ||new Quaternion;let t=e.alpha,r=e.beta,n=e.gamma;t=(t||0)*Math.PI/180,r=(r||0)*Math.PI/180,n=(n||0)*Math.PI/180;const o=new Euler(r,t,-n,"XYZ");i._deviceOrientationQ.setFromEuler(o)})),_default(this,"onDeviceMotion",(function(e){i.updateDeviceMotion(e)})),_default(this,"onMessage",(function(e){const t=e.data;if(!t||!t.type)return;"devicemotion"===t.type.toLowerCase()&&i.updateDeviceMotion(t.deviceMotionEvent)})),this.yawOnly=r,this.accelerometer=new Vector3,this.gyroscope=new Vector3,this.filter=new ComplementaryFilter(e),this.posePredictor=new PosePredictor(t),this.settings=DEFAULT_SETTINGS,this.settings.isDeviceMotionInRadians=n,this.filterToWorldQ=new Quaternion,this.settings.isIOS?this.filterToWorldQ.setFromAxisAngle(new Vector3(1,0,0),Math.PI/2):this.filterToWorldQ.setFromAxisAngle(new Vector3(1,0,0),-Math.PI/2),this.inverseWorldToScreenQ=new Quaternion,this.worldToScreenQ=new Quaternion,this.originalPoseAdjustQ=new Quaternion,this.originalPoseAdjustQ.setFromAxisAngle(new Vector3(0,0,1),-window.orientation*Math.PI/180),this.setScreenTransform(),isLandscapeMode()&&this.filterToWorldQ.multiply(this.inverseWorldToScreenQ),this.resetQ=new Quaternion,this.orientationOut_=new Float32Array(4),this.start()}getOrientation(){let e=null;if(this.settings.isWithoutDeviceMotion&&this._deviceOrientationQ){this.deviceOrientationFixQ=this.deviceOrientationFixQ||function(){let e=(new Quaternion).setFromAxisAngle(new Vector3(0,0,-1),0),t=new Quaternion;return-90===window.orientation?t.setFromAxisAngle(new Vector3(0,1,0),Math.PI/-2):t.setFromAxisAngle(new Vector3(0,1,0),Math.PI/2),e.multiply(t)}(),this.deviceOrientationFilterToWorldQ=this.deviceOrientationFilterToWorldQ||function(){let e=new Quaternion;return e.setFromAxisAngle(new Vector3(1,0,0),-Math.PI/2),e}(),e=this._deviceOrientationQ;let t=new Quaternion;return t.copy(e),t.multiply(this.deviceOrientationFilterToWorldQ),t.multiply(this.resetQ),t.multiply(this.worldToScreenQ),t.multiplyQuaternions(this.deviceOrientationFixQ,t),this.yawOnly&&(t.x=0,t.z=0,t.normalize()),this.orientationOut_[0]=t.x,this.orientationOut_[1]=t.y,this.orientationOut_[2]=t.z,this.orientationOut_[3]=t.w,this.orientationOut_}{let t=this.filter.getOrientation();e=this.posePredictor.getPrediction(t,this.gyroscope,this.previousTimestampS)}let t=new Quaternion;return t.copy(this.filterToWorldQ),t.multiply(this.resetQ),t.multiply(e),t.multiply(this.worldToScreenQ),this.yawOnly&&(t.x=0,t.z=0,t.normalize()),this.orientationOut_[0]=t.x,this.orientationOut_[1]=t.y,this.orientationOut_[2]=t.z,this.orientationOut_[3]=t.w,this.orientationOut_}resetPose(){this.resetQ.copy(this.filter.getOrientation()),this.resetQ.x=0,this.resetQ.y=0,this.resetQ.z*=-1,this.resetQ.normalize(),isLandscapeMode()&&this.resetQ.multiply(this.inverseWorldToScreenQ),this.resetQ.multiply(this.originalPoseAdjustQ)}updateDeviceMotion(e){const t=e.accelerationIncludingGravity,r=e.rotationRate,n=e.timeStamp/1e3,i=n-this.previousTimestampS;i<0||i<=MIN_TIMESTEP||i>MAX_TIMESTEP||(this.accelerometer.set(-t.x,-t.y,-t.z),this.settings.isR7?this.gyroscope.set(-r.beta,r.alpha,r.gamma):this.gyroscope.set(r.alpha,r.beta,r.gamma),this.settings.isDeviceMotionInRadians||this.gyroscope.multiplyScalar(Math.PI/180),this.filter.addAccelMeasurement(this.accelerometer,n),this.filter.addGyroMeasurement(this.gyroscope,n)),this.previousTimestampS=n}setScreenTransform(){switch(this.worldToScreenQ.set(0,0,0,1),window.orientation){case 90:this.worldToScreenQ.setFromAxisAngle(new Vector3(0,0,1),-Math.PI/2);case-90:this.worldToScreenQ.setFromAxisAngle(new Vector3(0,0,1),Math.PI/2)}this.inverseWorldToScreenQ.copy(this.worldToScreenQ),this.inverseWorldToScreenQ.inverse()}start(){var e=this;this.settings.isIOS&&this.settings.isInsideCrossOriginIFrame&&window.addEventListener("message",this.onMessage),window.addEventListener("orientationchange",this.onOrientationChange),this.settings.isWithoutDeviceMotion?window.addEventListener("deviceorientation",this.onDeviceOrientation):this.settings.isIOS?DeviceMotionEvent.requestPermission().then((function(t){"granted"===t&&window.addEventListener("devicemotion",e.onDeviceMotion)})):window.addEventListener("devicemotion",this.onDeviceMotion)}stop(){window.removeEventListener("devicemotion",this.onDeviceMotion),window.removeEventListener("deviceorientation",this.onDeviceOrientation),window.removeEventListener("orientationchange",this.onOrientationChange),window.removeEventListener("message",this.onMessage)}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(DEFAULT_SETTINGS,"DEFAULT_SETTINGS","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\FusionPoseSensor.js"),e.register(FusionPoseSensor,"FusionPoseSensor","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\FusionPoseSensor.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$8="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class PoseSensor{constructor(e){var t=this;_default(this,"onOrientationChange",(function(e){t.fusionSensor.setScreenTransform()})),this.updateCallback=e,this.isIOS=isIOS(),this.isDeviceMotionInRadians=!this.isIOS&&getChromeVersion()&&getChromeVersion()<66,this.isInsideCrossOriginIFrame=isInsideCrossOriginIFrame(),this.started=!1,this.events=[],this.timestamps=[],this.linear_accelerations=[],this.last_timestamp=0,this.timer=null}startTimer(){var e=this;this.timer=requestAnimationFrame((function(){return e.onFrame()}))}clearTimer(){cancelAnimationFrame(this.timer)}onFrame(){var e=this;this.timer=requestAnimationFrame((function(){return e.onFrame()}))}async onDeviceMotion(e){this.pushDeviceMotionEvent(e)}pushDeviceMotionEvent(e){this.events.push(e);const t=e.timeStamp/1e3;this.timestamps.push(t);const{x:r,y:n,z:i}=e.acceleration,o=[r,n,i];this.linear_accelerations.push(o)}clearEvents(){this.events=[],this.timestamps=[],this.linear_accelerations=[]}getTimestamp(){return performance.now()/1e3}getLinearAcceleration(){return 0===this.linear_accelerations.length?[0,0,0]:this.linear_accelerations[this.linear_accelerations.length-1]}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(PoseSensor,"PoseSensor","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\PoseSensor.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$9="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class IOSPoseSensor extends PoseSensor{constructor(e){super(e),this.fusionSensor=new FusionPoseSensor(.98,.04,!1,this.isDeviceMotionInRadians),this.startTimer()}async onMessage(e){const t=e.data;if(!t||!t.type)return;"devicemotion"===t.type.toLowerCase()&&this.pushDeviceMotionEvent(t.deviceMotionEvent)}onFrame(){var e=this;setImmediate((function(){for(let t=0;t<e.events.length;t++)e.fusionSensor.updateDeviceMotion(e.events[t]);e.updateCallback(),e.clearEvents()})),super.onFrame()}startWithRequestPermisson(){var e=this;return new Promise((function(t){DeviceMotionEvent.requestPermission().then((function(r){"granted"===r&&(window.addEventListener("devicemotion",(function(t){return e.onDeviceMotion(t)})),window.addEventListener("orientationchange",e.onOrientationChange),e.started=!0,t())}))}))}start(){var e=this;return new Promise((function(t,r){setTimeout((function(){e.started?t():r(new Error("not allowed"))}),500),DeviceMotionEvent.requestPermission().then((function(t){"granted"===t&&(window.addEventListener("orientationchange",e.onOrientationChange),window.addEventListener("devicemotion",(function(t){return e.onDeviceMotion(t)})),e.started=!0)}))}))}stop(){this.fusionSensor.stop(),this.fusionSensor=null,window.removeEventListener("message",this.onMessage),window.removeEventListener("devicemotion",this.onDeviceMotion),window.removeEventListener("orientationchange",this.onOrientationChange),this.started=!1}getOrientation(){return this.started?(new Quaternion).fromArray(this.fusionSensor.getOrientation()):new Quaternion}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(IOSPoseSensor,"IOSPoseSensor","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\IOSPoseSensor.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$a="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const X_AXIS=new Vector3(1,0,0),Z_AXIS=new Vector3(0,0,1);class ROSPoseSensor extends PoseSensor{constructor(e,t){super(e),_default(this,"onSensorRead",(function(){})),_default(this,"onSensorError",(function(e){"NotAllowedError"===e.error.name?console.error("Permission to access sensor was denied"):"NotReadableError"===e.error.name?console.error("Sensor could not be read"):console.error(e.error)})),this.sensor=t,this.sensor_to_world=new Quaternion,this.sensor_to_world.setFromAxisAngle(X_AXIS,-Math.PI/2),this.sensor_to_world.multiply((new Quaternion).setFromAxisAngle(Z_AXIS,Math.PI/2)),this.outQ=new Quaternion,this.sensorQ=new Quaternion,this.counter=0,this.init(),this.startTimer()}init(){this.sensor.addEventListener("reading",this.onSensorRead),this.sensor.start()}onFrame(){}pushDeviceMotionEvent(e){var t=this;super.pushDeviceMotionEvent(e),setImmediate((function(){t.updateCallback(),t.clearEvents(),t.timer=requestAnimationFrame((function(){return t.onFrame()}))}))}start(){var e=this;this.started||(window.addEventListener("devicemotion",(function(t){return e.onDeviceMotion(t)})),window.addEventListener("orientationchange",this.onOrientationChange),this.started=!0)}stop(){this.sensor.removeEventListener("reading",this.onSensorRead),this.sensor.removeEventListener("error",this.onSensorError),this.sensor=null,window.removeEventListener("devicemotion",this.onDeviceMotion),window.removeEventListener("orientationchange",this.onOrientationChange),this.started=!1}getOrientation(){const{sensor_to_world:e,outQ:t,sensorQ:r}=this;if(!this.started)return new Quaternion;const n=this.sensor.quaternion;return n?(r.set(n[0],n[1],n[2],n[3]),t.copy(e),t.multiply(r),t.clone()):new Quaternion}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(X_AXIS,"X_AXIS","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\ROSPoseSensor.js"),e.register(Z_AXIS,"Z_AXIS","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\ROSPoseSensor.js"),e.register(ROSPoseSensor,"ROSPoseSensor","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\ROSPoseSensor.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$b="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class DMPoseSensor extends PoseSensor{constructor(e){super(e),this.fusionSensor=new FusionPoseSensor(.98,.04,!1,this.isDeviceMotionInRadians),this.startTimer()}onFrame(){}pushDeviceMotionEvent(e){var t=this;super.pushDeviceMotionEvent(e),setImmediate((function(){for(let e=0;e<t.events.length;e++)t.fusionSensor.updateDeviceMotion(t.events[e]);t.updateCallback(),t.clearEvents(),t.timer=requestAnimationFrame((function(){return t.onFrame()}))}))}start(){var e=this;this.started||(window.addEventListener("devicemotion",(function(t){return e.onDeviceMotion(t)})),window.addEventListener("orientationchange",this.onOrientationChange),this.started=!0)}stop(){this.fusionSensor.stop(),this.fusionSensor=null,window.removeEventListener("devicemotion",this.onDeviceMotion),window.removeEventListener("orientationchange",this.onOrientationChange),this.started=!1}getOrientation(){return this.started?(new Quaternion).fromArray(this.fusionSensor.getOrientation()):new Quaternion}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(DMPoseSensor,"DMPoseSensor","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\DMPoseSensor.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$c="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class NoIMUPoseSensor extends PoseSensor{constructor(e){var t;super(e),t=this,_default(this,"onFrame",(function(){t.updateCallback(),t.timer=requestAnimationFrame(t.onFrame)})),this.startTimer()}startTimer(){this.timer=requestAnimationFrame(this.onFrame)}clearTimer(){cancelAnimationFrame(this.timer)}start(){this.started||(this.started=!0)}stop(){this.started=!1}getOrientation(){return new Quaternion}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(NoIMUPoseSensor,"NoIMUPoseSensor","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\NoIMUPoseSensor.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$d="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class PoseSensorSelector{constructor(e){_default(this,"onSensorError",(function(e){})),this.pose_sensor=null;if(isIOS()|isAndroid())if(isIOS())this.pose_sensor=new IOSPoseSensor(e);else{const t=this.tryInitRelativeOrientationSensor();this.pose_sensor=t?new ROSPoseSensor(e,t):new DMPoseSensor(e)}else this.pose_sensor=new NoIMUPoseSensor(e)}getTimestamp(){return this.pose_sensor.getTimestamp()}getOrientation(){return this.pose_sensor.getOrientation()}getLinearAcceleration(){return this.pose_sensor.getLinearAcceleration()}on(e,t){this.pose_sensor.on(e,t)}startWithRequestPermisson(){return this.pose_sensor.startWithRequestPermisson()}start(){return this.pose_sensor.start()}isStarted(){return this.pose_sensor.started}tryInitRelativeOrientationSensor(){let e=null;try{e=new RelativeOrientationSensor({frequency:30,referenceFrame:"screen"}),e.addEventListener("error",this.onSensorError)}catch(t){"SENSOR_FREQUENCY"===t.name?(console.log("Cannot construct sensors due to the Feature Policy"),e=null):("ReferenceError"===t.name||console.error(t),e=null)}return e}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(PoseSensorSelector,"PoseSensorSelector","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\imu\\PoseSensorSelector.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const MIN_DIST=10,MAX_CNT=500,MAX_ROT_RATE=90,USE_KEYFRAMES=1,USE_WARPING=0,USE_IMAGE_FILTER=1,USE_PREDICTION=1;!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(MIN_DIST,"MIN_DIST","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\parameters.js"),e.register(MAX_CNT,"MAX_CNT","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\parameters.js"),e.register(MAX_ROT_RATE,"MAX_ROT_RATE","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\parameters.js"),e.register(USE_KEYFRAMES,"USE_KEYFRAMES","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\parameters.js"),e.register(USE_WARPING,"USE_WARPING","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\parameters.js"),e.register(USE_IMAGE_FILTER,"USE_IMAGE_FILTER","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\parameters.js"),e.register(USE_PREDICTION,"USE_PREDICTION","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\parameters.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$f="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};class CVSlam{constructor(){this.slam=null}init(e,t,r,n,i,o,a,s){this.slam=new cv.SLAM(e,t,r,n,i,o,a,s)}compute(e,t,r,n,i,o,a){let s=cv.matFromArray(4,1,cv.CV_64F,t.toArray()),l=cv.matFromArray(3,1,cv.CV_64F,r),c=new cv.Mat;this.slam.compute(e,s,l,n,i,o,c);for(let e=0;e<c.data64F.length;e++)a[e]=c.data64F[e]}start(e,t){return this.slam.start(e,t)}clear(){this.slam.clear()}getImageFrame(e){this.slam.getImageFrame(e)}getDebug(e,t,r,n,i,o){let a=new cv.Mat,s=new cv.Mat,l=new cv.Mat,c=new cv.Mat;const u=this.slam.getDebug(e,t,a,s,l,c);a.data64F.length;return u}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&e.register(CVSlam,"CVSlam","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\CVSlam.js")}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$g="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const DEFAULT_SETTINGS$1={debug:!1};class Estimator{constructor(e,t,r=60,n={}){var i=this;_default(this,"process",(function(){const e=i.poseSensor.getOrientation(),t=i.poseSensor.getTimestamp(),r=i.poseSensor.getLinearAcceleration();if(i.capture.read(i.image),i.slam.compute(i.image,e,r,i.video_canvas.width,i.video_canvas.height,t,i.translation),i.slam.getImageFrame(i.cur_image_frame),i.settings.debug){i.features=[];const e=[],t=[],n=[],o=i.slam.getDebug(i.prev_image,i.cur_image,i.features,e,t,n);console.log("VIS Q: "+e[0]+" "+e[1]+" "+e[2]+" "+e[3]),console.log("VIS T: "+t[0]+" "+t[1]+" "+t[2]),console.log("angular_velocity: "+angular_velocity[0]+" "+angular_velocity[1]+" "+angular_velocity[2]),console.log("linear_acceleration: "+r[0]+" "+r[1]+" "+r[2]),console.log("IMU T: "+n[0]+" "+n[1]+" "+n[2]),console.log("dt: "+o)}cv.imshow(i.video_canvas.id,i.cur_image_frame),i.emit("update",i.translation)})),this.video=e,this.video_canvas=t,this.fov=r,this.video.width=this.video.videoWidth,this.video.height=this.video.videoHeight,this.settings={...DEFAULT_SETTINGS$1,...n};const{emit:o,on:a,off:s}=_default$1(this);this.emit=o,this.on=a,this.off=s,this.poseSensor=null,this.image=null,this.cur_image_frame=new cv.Mat,this.prev_image=new cv.Mat,this.cur_image=new cv.Mat,this.features=[],this.translation=[],this.capture=null,this.video_mat=new cv.Mat,this.isIOS=isIOS(),this.slam=new CVSlam,this.init()}init(){var e=this;this.initSLAM().then((function(){return e.initIMU()})).then((function(){return e.initVideoCapture()})).then((function(){return e.poseSensor.start()})).then((function(){e.emit("ready")}),(function(t){e.emit("permission-request")}))}initSLAM(){var e=this;return new Promise((function(t){e.slam.init(MAX_CNT,MIN_DIST,e.fov,MAX_ROT_RATE,USE_KEYFRAMES,USE_WARPING,USE_IMAGE_FILTER,USE_PREDICTION),t()}))}initIMU(){var e=this;return new Promise((function(t){e.poseSensor&&(e.poseSensor.stop(),e.poseSensor=null),e.poseSensor=new PoseSensorSelector(e.process),t()}))}initVideoCapture(){var e=this;return new Promise((function(t){e.capture=new cv.VideoCapture(e.video),e.image=new cv.Mat(e.video.videoHeight,e.video.videoWidth,cv.CV_8UC4),t()}))}startImu(){this.emit("ready"),this.poseSensor.startWithRequestPermisson()}start(e,t){var r=this;return new Promise((function(n,i){r.poseSensor.isStarted()&&(r.slam.start(e,t)?n():i(new Error("Wrong location!!!")))}))}getQueryPoints(){return this.features}clear(){this.translation=[],this.slam.clear()}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(DEFAULT_SETTINGS$1,"DEFAULT_SETTINGS","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\Estimator.js"),e.register(Estimator,"Estimator","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam\\Estimator.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$h="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const DEFAULT_SETTINGS$2={type:"default",debug:!1};class Slam{constructor(e){var t=this;_default(this,"onEstimatorUpdate",(function(e){t.emit("geenee-slam-update",e)})),_default(this,"onEstimatorReady",(function(){t.emit("geenee-slam-ready")})),_default(this,"onEstimatorPermissionRequest",(function(){t.emit("geenee-slam-permission-request")}));const{emit:r,on:n,off:i}=_default$1(this);return this.emit=r,this.on=n,this.off=i,e.slam_instance=this,this.supports_imu=isIOS()|isAndroid(),this.loadOpenCV()}loadOpenCV(){return new Promise((function(e){global.Module={onRuntimeInitialized:e},global.cv=require("../geenee-slam-impl/index")}))}init(e,t,r){this.width=e.videoWidth,this.height=e.videoHeight,this.settings=DEFAULT_SETTINGS$2;const n={...DEFAULT_SETTINGS$2};this.estimator=new Estimator(e,t,r,n),this.estimator.on("update",this.onEstimatorUpdate),this.estimator.on("ready",this.onEstimatorReady),this.estimator.on("permission-request",this.onEstimatorPermissionRequest)}startImu(){this.estimator.startImu()}start(e,t){return this.estimator.start(e,t)}stop(){}__reactstandin__regenerateByEval(key,code){this[key]=eval(code)}}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(DEFAULT_SETTINGS$2,"DEFAULT_SETTINGS","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\Slam.js"),e.register(Slam,"Slam","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\Slam.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$i="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};function loadSLAM(){return new Slam(window)}function initSLAM(e,t,r){window.slam_instance.init(e,t,r)}function startImuSLAM(){window.slam_instance.startImu()}function startSLAM(e,t){return window.slam_instance.start(e,t)}function stopSLAM(){window.slam_instance.stop()}function onSLAM(e,t){window.slam_instance.on(e,t)}function getQueryPoints(){return window.slam_instance.estimator.getQueryPoints()}!function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(loadSLAM,"loadSLAM","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam-sdk.js"),e.register(initSLAM,"initSLAM","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam-sdk.js"),e.register(startImuSLAM,"startImuSLAM","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam-sdk.js"),e.register(startSLAM,"startSLAM","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam-sdk.js"),e.register(stopSLAM,"stopSLAM","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam-sdk.js"),e.register(onSLAM,"onSLAM","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam-sdk.js"),e.register(getQueryPoints,"getQueryPoints","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\slam-sdk.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0;e&&e(module)}();var __signature__$j="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default.signature:function(e){return e};const GeeneeSLAM={load:loadSLAM,init:initSLAM,startImu:startImuSLAM,start:startSLAM,stop:stopSLAM,on:onSLAM};window.GeeneeSLAM=GeeneeSLAM;const _default$2=GeeneeSLAM;return function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0;e&&(e.register(GeeneeSLAM,"GeeneeSLAM","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\index.js"),e.register(_default$2,"default","D:\\Workspaces\\react\\GeeneeSDK\\packages\\slam\\src\\index.js"))}(),function(){var e="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0;e&&e(module)}(),_default$2}));
